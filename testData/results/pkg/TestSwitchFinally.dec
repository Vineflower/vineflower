package pkg;

public class TestSwitchFinally {
   public void test(int i) {
      try {
         System.out.println(1);// 6
      } finally {
         System.out.println("finally");// 8
         switch(i) {// 10
            case 0:
               System.out.println("0");// 12
         }

         System.out.println("b");// 16
      }
   }// 17

   public void test1(int i) {
      try {
         System.out.println(1);// 22
      } finally {
         System.out.println("finally");// 24
         switch(i) {// 26
            case 0:
               System.out.println("0");// 28
               break;// 29
            case 1:
               System.out.println("1");// 31
         }

         System.out.println("b");// 35
      }
   }// 36

   public void test2(int i) {
      try {
         System.out.println(1);// 41
      } finally {
         System.out.println("finally");// 43
         switch(i) {// 45
            default:
               System.out.println("default");// 47
               System.out.println("b");// 50
         }
      }
   }// 51

   public int test3(int i) {
      try {
         System.out.println(1);// 57
      } finally {
         System.out.println("finally");// 59
         switch(i) {// 61
            case 0:
               System.out.println("0");// 63
               break;// 64
            case 1:
               System.out.println("1");// 66
               System.out.println("c");// 67 69 72 74 76 77 80
               return 0;// 81
            default:
               System.out.println("Default");
         }

         System.out.println("b");
      }

      System.out.println("d");
      return 1;
   }
}

class 'pkg/TestSwitchFinally' {
   method 'test (I)V' {
      0      5
      1      5
      2      5
      3      5
      4      5
      34      15
      37      7
      38      7
      39      7
      3a      7
      3b      7
      3c      7
      3d      8
      3e      8
      3f      8
      40      8
      54      10
      55      10
      56      10
      57      10
      58      10
      59      10
      5c      13
      5d      13
      5e      13
      5f      13
      60      13
      61      13
      62      13
      63      13
   }

   method 'test1 (I)V' {
      0      19
      1      19
      2      19
      3      19
      4      19
      47      32
      4a      21
      4b      21
      4c      21
      4d      21
      4e      21
      4f      21
      50      22
      51      22
      52      22
      53      22
      70      24
      71      24
      72      24
      73      24
      74      24
      75      24
      76      24
      77      24
      78      25
      7b      27
      7c      27
      7d      27
      7e      27
      7f      27
      80      27
      83      30
      84      30
      85      30
      86      30
      87      30
      88      30
      89      30
      8a      30
   }

   method 'test2 (I)V' {
      0      36
      1      36
      2      36
      3      36
      4      36
      2c      45
      2f      38
      30      38
      31      38
      32      38
      33      38
      34      38
      35      39
      36      39
      37      39
      38      39
      44      41
      45      41
      46      41
      47      41
      48      41
      49      41
      4a      41
      4b      41
      4c      42
      4d      42
      4e      42
      4f      42
      50      42
      51      42
      52      42
      53      42
   }

   method 'test3 (I)I' {
      0      49
      1      49
      2      49
      3      49
      4      49
      52      67
      53      67
      54      67
      55      51
      56      51
      57      51
      58      51
      59      51
      5a      51
      5b      52
      5c      52
      5d      52
      5e      52
      5f      67
      60      67
      61      67
      62      67
      63      67
      64      67
      65      67
      66      67
      67      67
      68      67
      69      67
      6a      67
      6b      67
      6c      67
      6d      67
      6e      67
      6f      67
      70      67
      71      67
      72      67
      73      67
      74      67
      75      67
      76      67
      77      67
      78      54
      79      54
      7a      54
      7b      54
      7c      54
      7d      54
      7e      54
      7f      54
      80      55
      81      67
      82      67
      83      57
      84      57
      85      57
      86      57
      87      57
      88      57
      89      57
      8a      57
      8b      58
      8c      58
      8d      58
      8e      58
      8f      58
      90      58
      91      58
      92      58
      93      58
      94      58
      95      58
      96      58
      97      58
      98      58
      99      58
      9a      58
      9b      58
      9c      58
      9d      58
      9e      58
      9f      58
      a0      58
      a1      58
      a2      58
      a3      58
      a4      58
      a5      58
      a6      58
      a7      58
      a8      58
      a9      58
      aa      58
      ab      58
      ac      58
      ad      58
      ae      58
      af      59
      b0      59
      b1      59
      b2      59
   }
}

Lines mapping:
6 <-> 6
8 <-> 8
10 <-> 9
12 <-> 11
16 <-> 14
17 <-> 16
22 <-> 20
24 <-> 22
26 <-> 23
28 <-> 25
29 <-> 26
31 <-> 28
35 <-> 31
36 <-> 33
41 <-> 37
43 <-> 39
45 <-> 40
47 <-> 42
50 <-> 43
51 <-> 46
57 <-> 50
59 <-> 52
61 <-> 53
63 <-> 55
64 <-> 56
66 <-> 58
67 <-> 59
69 <-> 59
72 <-> 59
74 <-> 59
76 <-> 59
77 <-> 59
80 <-> 59
81 <-> 60
Not mapped:
18
37
52
