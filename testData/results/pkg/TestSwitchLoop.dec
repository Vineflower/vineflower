package pkg;

public class TestSwitchLoop {
   public void test(int i) {
      while(i > 0) {// 5
         --i;// 6
         switch(i) {// 8
            case 0:
               System.out.println("0");// 10
               break;// 11
            case 1:
               System.out.println("1");// 13
               break;// 14
            case 2:
               System.out.println("2");// 16
               break;// 17
            default:
               System.out.println("after");// 20
               if (i == 4) {// 21
                  return;// 25
               }
         }
      }
   }

   public int test2(int i) {
      for(int a = 0; i > a; ++a) {// 29
         --i;// 30
         switch(i) {// 32
            case 0:
               System.out.println("0");// 34
            default:
               System.out.println("after");// 50
               break;
            case 1:
               System.out.println("1");// 37
               return 1;// 38
            case 2:
               System.out.println("2");// 40
               return 2;// 41
            case 3:
               System.out.println("3");// 43
               return 0;// 53
            case 4:
               System.out.println("4");// 46
               return 0;
         }
      }

      return 0;
   }

   public int test3(int i) {
      label18:
      for(int a = 0; i > a; ++a) {// 58
         --i;// 59
         switch(i) {// 61
            case 0:
               System.out.println("0");// 63
            default:
               System.out.println("after");// 79
               break;
            case 1:
               System.out.println("1");// 66
               return 1;// 67
            case 2:
               System.out.println("2");// 69
               return 2;// 70
            case 3:
               System.out.println("3");// 72
               break label18;// 73
            case 4:
               System.out.println("4");// 75
               break label18;// 76
         }
      }

      System.out.println("after2");// 82
      return 0;// 84
   }

   public void test4(int i) {
      for(int a = 0; i > a; ++a) {// 88
         --i;// 89
         switch(i) {// 91
            case 0:
               System.out.println("0");// 93
               if (a == 0) {// 94
                  continue;
               }
               break;
            case 1:
               System.out.println("1");// 100
         }

         System.out.println("after");// 103
      }

      System.out.println("after2");// 106
   }// 107

   public void test5(int i) {
      int a = 0;

      while(true) {
         label40: {
            if (i > a) {
               --i;// 112
               label22:
               switch(i) {// 114
                  case 0:
                     System.out.println("0");// 116
                     int i1 = 0;

                     while(true) {
                        if (i1 >= 5) {
                           break label40;
                        }

                        switch(i1) {// 118
                           case 0:
                              System.out.println(0);// 120
                           default:
                              ++i1;// 117
                              break;
                           case 1:
                              System.out.println(1);// 123
                              break label22;// 124
                           case 2:
                              return;// 126
                        }
                     }
                  case 1:
                     System.out.println("1");// 132
                  default:
                     break label40;
               }
            }

            System.out.println("after2");// 138
            return;// 139
         }

         System.out.println("after");// 135
         ++a;// 111
      }
   }

   public void test6() {
      int i = 0;

      label24:
      while(i < 10) {
         switch(i) {// 145
            case 0:
               System.out.println("0");// 147

               for(int i1 = 0; i1 < 5; ++i1) {// 148
                  switch(i1) {// 149
                     case 1:
                        System.out.println(1);// 151
                        break label24;// 152
                  }
               }
            default:
               System.out.println("after");// 159
               ++i;// 143
         }
      }

      System.out.println("after2");// 162
   }// 163

   public void test7() {
      label21:
      for(int i = 0; i < 10; ++i) {// 167
         for(int i1 = 0; i1 < 5; ++i1) {// 168
            switch(i1) {// 169
               case 1:
                  System.out.println(1);// 171
                  break label21;// 172
            }
         }

         System.out.println("after");// 176
      }

      System.out.println("after2");// 179
   }// 180

   public void test8(int i) {
      switch(i) {// 183
         case 0:
            int j = 0;

            while(true) {
               if (j >= 10) {
                  System.out.println(0);// 192
                  break;
               }

               if (j == 3) {// 187
                  break;
               }

               ++j;// 186
            }

            System.out.println("after");// 194
         case 1:
            System.out.println(1);// 196
      }

      System.out.println("after2");// 199
   }// 200

   public void test9(int i) {
      label23:
      switch(i) {// 203
         case 0:
            int j = 0;

            while(true) {
               if (j >= 10) {
                  System.out.println(0);// 212
                  break label23;// 213
               }

               if (j == 3) {// 207
                  System.out.println("after");// 215
                  break;
               }

               ++j;// 206
            }
         case 1:
            System.out.println(1);// 217
      }

      System.out.println("after2");// 220
   }// 221

   public void test10(int i) {
      label31: {
         label30: {
            switch(i) {// 224
               case 0:
                  int j = 0;

                  while(true) {
                     if (j >= 10) {
                        break label30;
                     }

                     if (j == 3) {// 228
                        System.out.println("after");// 241
                        break;
                     }

                     if (j == 9) {// 232
                        break label30;
                     }

                     ++j;// 227
                  }
               case 1:
                  break;
               default:
                  break label31;
            }

            System.out.println(1);// 243
            break label31;
         }

         System.out.println(0);// 237
      }

      System.out.println("after2");// 246
   }// 247

   public void test10b(int i) {
      label32: {
         label31: {
            label28:
            switch(i) {// 250
               case 0:
                  int j = 0;

                  while(true) {
                     if (j >= 10) {
                        break label31;
                     }

                     if (j == 3) {// 254
                        System.out.println("after");// 267
                        break label28;
                     }

                     if (j == 9) {// 258
                        break label31;
                     }

                     ++j;// 253
                  }
               case 1:
                  System.out.println(1);// 272
                  break label32;
               case 2:
                  break;
               default:
                  break label32;
            }

            System.out.println(2);// 269
            break label32;// 270
         }

         System.out.println(0);// 263
      }

      System.out.println("after2");// 275
   }// 276
}

class 'pkg/TestSwitchLoop' {
   method 'test (I)V' {
      0      4
      1      4
      4      5
      5      5
      6      5
      7      6
      8      6
      24      8
      25      8
      26      8
      27      8
      28      8
      29      8
      2a      8
      2b      8
      2c      9
      2f      11
      30      11
      31      11
      32      11
      33      11
      34      11
      35      11
      36      11
      37      12
      3a      14
      3b      14
      3c      14
      3d      14
      3e      14
      3f      14
      40      14
      41      14
      42      15
      45      17
      46      17
      47      17
      48      17
      49      17
      4a      17
      4b      17
      4c      17
      4d      18
      4e      18
      4f      18
      55      19
   }

   method 'test2 (I)I' {
      0      26
      1      26
      2      26
      3      26
      4      26
      7      27
      8      27
      9      27
      a      28
      b      28
      2c      30
      2d      30
      2e      30
      2f      30
      30      30
      31      30
      32      30
      33      30
      37      35
      38      35
      39      35
      3a      35
      3b      35
      3c      35
      3d      35
      3e      35
      3f      36
      40      36
      41      38
      42      38
      43      38
      44      38
      45      38
      46      38
      47      38
      48      38
      49      39
      4a      39
      4b      41
      4c      41
      4d      41
      4e      41
      4f      41
      50      41
      51      41
      52      41
      56      44
      57      44
      58      44
      59      44
      5a      44
      5b      44
      5c      44
      5d      44
      61      32
      62      32
      63      32
      64      32
      65      32
      66      32
      67      32
      68      32
      69      26
      6a      26
      6b      26
      6c      33
      6f      42
      70      42
   }

   method 'test3 (I)I' {
      0      54
      1      54
      2      54
      3      54
      4      54
      7      55
      8      55
      9      55
      a      56
      b      56
      2c      58
      2d      58
      2e      58
      2f      58
      30      58
      31      58
      32      58
      33      58
      37      63
      38      63
      39      63
      3a      63
      3b      63
      3c      63
      3d      63
      3e      63
      3f      64
      40      64
      41      66
      42      66
      43      66
      44      66
      45      66
      46      66
      47      66
      48      66
      49      67
      4a      67
      4b      69
      4c      69
      4d      69
      4e      69
      4f      69
      50      69
      51      69
      52      69
      53      70
      56      72
      57      72
      58      72
      59      72
      5a      72
      5b      72
      5c      72
      5d      72
      5e      73
      61      60
      62      60
      63      60
      64      60
      65      60
      66      60
      67      60
      68      60
      69      54
      6a      54
      6b      54
      6c      61
      6f      77
      70      77
      71      77
      72      77
      73      77
      74      77
      75      77
      76      77
      77      78
      78      78
   }

   method 'test4 (I)V' {
      0      82
      1      82
      2      82
      3      82
      4      82
      7      83
      8      83
      9      83
      a      84
      b      84
      24      86
      25      86
      26      86
      27      86
      28      86
      29      86
      2a      86
      2b      86
      2c      87
      2d      87
      33      92
      34      92
      35      92
      36      92
      37      92
      38      92
      3b      95
      3c      95
      3d      95
      3e      95
      3f      95
      40      95
      43      82
      44      82
      45      82
      49      98
      4a      98
      4b      98
      4c      98
      4d      98
      4e      98
      4f      98
      50      98
      51      99
   }

   method 'test5 (I)V' {
      0      102
      1      102
      2      106
      3      106
      4      106
      7      107
      8      107
      9      107
      a      109
      b      109
      24      111
      25      111
      26      111
      27      111
      28      111
      29      111
      2a      111
      2b      111
      2c      112
      2d      112
      2e      115
      2f      115
      30      115
      33      119
      34      119
      50      121
      51      121
      52      121
      53      121
      54      121
      55      121
      56      121
      5a      126
      5b      126
      5c      126
      5d      126
      5e      126
      5f      126
      60      126
      61      127
      64      129
      65      123
      66      123
      67      123
      68      124
      6e      133
      6f      133
      70      133
      71      133
      72      133
      73      133
      76      143
      77      143
      78      143
      79      143
      7a      143
      7b      143
      7c      143
      7d      143
      7e      144
      7f      144
      80      144
      84      139
      85      139
      86      139
      87      139
      88      139
      89      139
      8a      139
      8b      139
      8c      140
   }

   method 'test6 ()V' {
      0      149
      1      149
      2      152
      3      152
      4      152
      5      152
      8      153
      9      153
      1c      155
      1d      155
      1e      155
      1f      155
      20      155
      21      155
      22      155
      23      155
      24      157
      25      157
      26      157
      27      157
      28      157
      2b      158
      2c      158
      40      160
      41      160
      42      160
      43      160
      44      160
      45      160
      46      160
      47      161
      4a      157
      4b      157
      4c      157
      50      165
      51      165
      52      165
      53      165
      54      165
      55      165
      56      165
      57      165
      58      166
      59      166
      5a      166
      5e      170
      5f      170
      60      170
      61      170
      62      170
      63      170
      64      170
      65      170
      66      171
   }

   method 'test7 ()V' {
      0      175
      1      175
      2      175
      3      175
      4      175
      5      175
      8      176
      9      176
      a      176
      b      176
      c      176
      f      177
      10      177
      24      179
      25      179
      26      179
      27      179
      28      179
      29      179
      2a      179
      2b      180
      2e      176
      2f      176
      30      176
      34      184
      35      184
      36      184
      37      184
      38      184
      39      184
      3a      184
      3b      184
      3c      175
      3d      175
      3e      175
      42      187
      43      187
      44      187
      45      187
      46      187
      47      187
      48      187
      49      187
      4a      188
   }

   method 'test8 (I)V' {
      0      191
      1      191
      1c      193
      1d      193
      1e      196
      1f      196
      20      196
      21      196
      24      201
      25      201
      26      201
      2c      205
      2d      205
      2e      205
      32      197
      33      197
      34      197
      35      197
      36      197
      39      208
      3a      208
      3b      208
      3c      208
      3d      208
      3e      208
      41      210
      42      210
      43      210
      44      210
      45      210
      48      213
      49      213
      4a      213
      4b      213
      4c      213
      4d      213
      4e      213
      4f      213
      50      214
   }

   method 'test9 (I)V' {
      0      218
      1      218
      1c      220
      1d      220
      1e      223
      1f      223
      20      223
      21      223
      24      228
      25      228
      26      228
      2c      233
      2d      233
      2e      233
      32      224
      33      224
      34      224
      35      224
      36      224
      37      224
      38      224
      39      225
      3c      229
      3d      229
      3e      229
      3f      229
      40      229
      41      229
      44      236
      45      236
      46      236
      47      236
      48      236
      4b      239
      4c      239
      4d      239
      4e      239
      4f      239
      50      239
      51      239
      52      239
      53      240
   }

   method 'test10 (I)V' {
      0      245
      1      245
      1c      247
      1d      247
      1e      250
      1f      250
      20      250
      21      250
      24      254
      25      254
      26      254
      2c      259
      2d      259
      2e      259
      2f      259
      35      263
      36      263
      37      263
      3b      275
      3c      275
      3d      275
      3e      275
      3f      275
      40      275
      41      275
      45      255
      46      255
      47      255
      48      255
      49      255
      4a      255
      4d      271
      4e      271
      4f      271
      50      271
      51      271
      54      278
      55      278
      56      278
      57      278
      58      278
      59      278
      5a      278
      5b      278
      5c      279
   }

   method 'test10b (I)V' {
      0      285
      1      285
      1c      287
      1d      287
      1e      290
      1f      290
      20      290
      21      290
      24      294
      25      294
      26      294
      2c      299
      2d      299
      2e      299
      2f      299
      35      303
      36      303
      37      303
      3b      318
      3c      318
      3d      318
      3e      318
      3f      318
      40      318
      41      318
      45      295
      46      295
      47      295
      48      295
      49      295
      4a      295
      4d      314
      4e      314
      4f      314
      50      314
      51      314
      52      314
      53      314
      54      315
      57      306
      58      306
      59      306
      5a      306
      5b      306
      5e      321
      5f      321
      60      321
      61      321
      62      321
      63      321
      64      321
      65      321
      66      322
   }
}

Lines mapping:
5 <-> 5
6 <-> 6
8 <-> 7
10 <-> 9
11 <-> 10
13 <-> 12
14 <-> 13
16 <-> 15
17 <-> 16
20 <-> 18
21 <-> 19
25 <-> 20
29 <-> 27
30 <-> 28
32 <-> 29
34 <-> 31
37 <-> 36
38 <-> 37
40 <-> 39
41 <-> 40
43 <-> 42
46 <-> 45
50 <-> 33
53 <-> 43
58 <-> 55
59 <-> 56
61 <-> 57
63 <-> 59
66 <-> 64
67 <-> 65
69 <-> 67
70 <-> 68
72 <-> 70
73 <-> 71
75 <-> 73
76 <-> 74
79 <-> 61
82 <-> 78
84 <-> 79
88 <-> 83
89 <-> 84
91 <-> 85
93 <-> 87
94 <-> 88
100 <-> 93
103 <-> 96
106 <-> 99
107 <-> 100
111 <-> 145
112 <-> 108
114 <-> 110
116 <-> 112
117 <-> 124
118 <-> 120
120 <-> 122
123 <-> 127
124 <-> 128
126 <-> 130
132 <-> 134
135 <-> 144
138 <-> 140
139 <-> 141
143 <-> 167
145 <-> 154
147 <-> 156
148 <-> 158
149 <-> 159
151 <-> 161
152 <-> 162
159 <-> 166
162 <-> 171
163 <-> 172
167 <-> 176
168 <-> 177
169 <-> 178
171 <-> 180
172 <-> 181
176 <-> 185
179 <-> 188
180 <-> 189
183 <-> 192
186 <-> 206
187 <-> 202
192 <-> 198
194 <-> 209
196 <-> 211
199 <-> 214
200 <-> 215
203 <-> 219
206 <-> 234
207 <-> 229
212 <-> 225
213 <-> 226
215 <-> 230
217 <-> 237
220 <-> 240
221 <-> 241
224 <-> 246
227 <-> 264
228 <-> 255
232 <-> 260
237 <-> 276
241 <-> 256
243 <-> 272
246 <-> 279
247 <-> 280
250 <-> 286
253 <-> 304
254 <-> 295
258 <-> 300
263 <-> 319
267 <-> 296
269 <-> 315
270 <-> 316
272 <-> 307
275 <-> 322
276 <-> 323
Not mapped:
22
35
44
47
64
95
121
130
188
208
229
233
238
255
259
264
