package pkg;

public class TestSwitchPatternMatching14 {
   static void test(TestSwitchPatternMatching14.Shape s) {
      switch(s) {// 5
         case null:
            if (Math.random() > 0.0) {// 13
               System.out.println("Lucky null");// 14
            }
            break;
         case TestSwitchPatternMatching14.Triangle t:// 6
            if (t.hashCode() > 0) {// 7
               System.out.println("Larger positive-hash triangle");// 8
            }

            System.out.println("Larger triangle: " + t);// 10
            break;// 11
         default:
            System.out.println("Non-triangle");// 18
      }
   }// 20

   private abstract class Shape {
      abstract double calculateArea();
   }

   private class Triangle extends TestSwitchPatternMatching14.Shape {
      @Override
      double calculateArea() {
         return 0.0;// 30
      }
   }
}

class 'pkg/TestSwitchPatternMatching14' {
   method 'test (Lpkg/TestSwitchPatternMatching14$Shape;)V' {
      0      4
      4      4
      b      4
      28      10
      29      11
      2a      11
      2b      11
      2c      11
      2d      11
      30      12
      31      12
      32      12
      33      12
      34      12
      35      12
      38      15
      39      15
      3a      15
      3b      15
      3c      15
      3d      15
      3e      15
      3f      15
      40      15
      41      15
      42      15
      43      15
      44      16
      47      6
      48      6
      49      6
      4a      6
      4b      6
      4c      6
      4f      7
      50      7
      51      7
      52      7
      53      7
      54      7
      55      7
      56      7
      5a      18
      5b      18
      5c      18
      5d      18
      5e      18
      5f      18
      62      20
   }
}

class 'pkg/TestSwitchPatternMatching14$Triangle' {
   method 'calculateArea ()D' {
      0      29
      1      29
   }
}

Lines mapping:
5 <-> 5
6 <-> 11
7 <-> 12
8 <-> 13
10 <-> 16
11 <-> 17
13 <-> 7
14 <-> 8
18 <-> 19
20 <-> 21
30 <-> 30
