package pkg;

import java.lang.runtime.SwitchBootstraps;

public class TestRecordPattern2 {
   void test(TestRecordPattern2.Pair<?, ?> p) {
      if (p instanceof TestRecordPattern2.Pair) {
         Object var6 = $proxy$a(p);// 1
         if (var6 instanceof String s) {
            var6 = $proxy$b(p);
            if (var6 instanceof Long l) {
               System.out.println("String-Long pair of \"" + s + "\" and " + l);
               return;// 15
            }
         }
      }

      if (p instanceof TestRecordPattern2.Pair) {// 10
         Object var8 = $proxy$a(p);// 9
         if (var8 instanceof Long l) {
            var8 = $proxy$b(p);
            System.out.println("Long-Object pair");// 11
            return;
         }
      }

      System.out.println("Other pair");// 13
   }

   void test2(TestRecordPattern2.Pair<?, ?> p) {
      label23: {
         if (p instanceof TestRecordPattern2.Pair) {// 18
            Object var6 = $proxy$a(p);// 8
            if (var6 instanceof String s) {
               var6 = $proxy$b(p);
               if (var6 instanceof Long l) {
                  System.out.println("String-Long pair of \"" + s + "\" and " + l);
                  break label23;
               }
            }
         }

         if (p instanceof TestRecordPattern2.Pair) {// 20
            Object var8 = $proxy$a(p);// 19
            if (var8 instanceof Long l) {
               var8 = $proxy$b(p);
               System.out.println("Long-Object pair");// 21
               break label23;
            }
         }

         System.out.println("Other pair");// 23
      }

      System.out.println("Unconditional");// 25
   }// 26

   Object test3(TestRecordPattern2.Pair<?, ?> p) {
      TestRecordPattern2.Pair var2 = p;
      byte var3 = 0;

      while(true) {
         Object var10000;
         switch(SwitchBootstraps.typeSwitch<"typeSwitch",TestRecordPattern2.Pair,TestRecordPattern2.Pair,TestRecordPattern2.Pair,TestRecordPattern2.Pair,TestRecordPattern2.Pair>(
            var2, var3
         )) {
            case -1:
               var10000 = -1;// 30
               break;
            case 0:
               Object var18 = $proxy$a(var2);
               if (var18 instanceof Long l) {// 31
                  var18 = $proxy$b(var2);
                  if (var18 instanceof Long r) {
                     var10000 = l + r;
                     break;
                  }
               }

               var3 = 1;
               continue;
            case 1:
               Object lx = $proxy$a(var2);
               if (lx instanceof Integer l) {// 32
                  lx = $proxy$b(var2);
                  if (lx instanceof Integer r) {
                     var10000 = (l << r) * var2.hashCode();
                     break;
                  }
               }

               var3 = 2;
               continue;
            case 2:
               Object var21 = $proxy$a(var2);
               var21 = $proxy$b(var2);// 33
               if (var21 instanceof Void r) {
                  throw new IllegalArgumentException("how");
               }

               var3 = 3;
               continue;
            case 3:
               Object lx = $proxy$a(var2);
               if (lx instanceof String l) {
                  lx = $proxy$b(var2);
                  if (lx instanceof String r && l.length() > 3 && r.length() > 3 && l.length() + r.length() < 23) {// 35
                     var10000 = l.length() + r.length();// 36
                     break;
                  }
               }

               var3 = 4;// 34
               continue;
            case 4:
               Object var17 = $proxy$a(var2);
               var17 = $proxy$b(var2);// 37
               var10000 = -2;
               break;
            default:
               throw new MatchException(null, null);
         }

         return var10000;// 29
      }
   }

   static record Pair<A, B>(A a, B b) {
   }
}

class 'pkg/TestRecordPattern2' {
   method 'test (Lpkg/TestRecordPattern2$Pair;)V' {
      0      6
      1      6
      2      6
      3      6
      4      6
      7      7
      8      7
      9      7
      a      7
      b      7
      c      7
      d      8
      e      8
      f      8
      10      8
      11      8
      12      8
      1a      8
      1b      9
      1c      9
      1d      9
      1e      9
      1f      9
      20      9
      21      10
      22      10
      23      10
      24      10
      25      10
      26      10
      2e      10
      2f      11
      30      11
      31      11
      32      11
      33      11
      34      11
      35      11
      36      11
      37      11
      38      11
      39      11
      3a      11
      3b      11
      3f      17
      40      17
      41      17
      42      17
      43      17
      46      18
      47      18
      48      18
      49      18
      4a      18
      4b      18
      4c      19
      4d      19
      4e      19
      4f      19
      50      19
      51      19
      59      19
      5a      19
      5b      20
      5c      20
      5d      20
      5e      20
      5f      20
      60      20
      65      21
      66      21
      67      21
      68      21
      69      21
      6a      21
      6b      21
      6c      21
      70      26
      71      26
      72      26
      73      26
      74      26
      75      26
      78      12
   }

   method 'test2 (Lpkg/TestRecordPattern2$Pair;)V' {
      0      31
      1      31
      2      31
      3      31
      4      31
      7      32
      8      32
      9      32
      a      32
      b      32
      c      32
      d      33
      e      33
      f      33
      10      33
      11      33
      12      33
      1a      33
      1b      34
      1c      34
      1d      34
      1e      34
      1f      34
      20      34
      21      35
      22      35
      23      35
      24      35
      25      35
      26      35
      2e      35
      2f      36
      30      36
      31      36
      32      36
      33      36
      34      36
      35      36
      36      36
      37      36
      38      36
      39      36
      3a      36
      3b      36
      3c      37
      3f      42
      40      42
      41      42
      42      42
      43      42
      46      43
      47      43
      48      43
      49      43
      4a      43
      4b      43
      4c      44
      4d      44
      4e      44
      4f      44
      50      44
      51      44
      59      44
      5a      44
      5b      45
      5c      45
      5d      45
      5e      45
      5f      45
      60      45
      65      46
      66      46
      67      46
      68      46
      69      46
      6a      46
      6b      46
      6c      46
      6d      47
      70      51
      71      51
      72      51
      73      51
      74      51
      75      51
      78      54
      79      54
      7a      54
      7b      54
      7c      54
      7d      54
      7e      54
      7f      54
      80      55
   }

   method 'test3 (Lpkg/TestRecordPattern2$Pair;)Ljava/lang/Object;' {
      0      58
      1      58
      2      59
      3      59
      4      64
      5      64
      6      63
      7      63
      8      63
      9      63
      a      63
      b      63
      34      120
      35      120
      39      120
      3a      67
      3b      67
      3c      67
      3d      67
      3e      68
      41      70
      42      70
      43      70
      44      70
      45      70
      46      70
      47      71
      48      71
      49      71
      4a      71
      4b      71
      4c      71
      54      71
      55      71
      56      72
      57      72
      58      72
      59      72
      5a      72
      5b      72
      5c      73
      5d      73
      5e      73
      5f      73
      60      73
      61      73
      69      73
      6a      73
      6e      74
      6f      74
      70      74
      71      74
      72      74
      73      74
      74      74
      75      74
      76      74
      77      74
      78      74
      79      74
      7a      74
      7b      74
      7c      74
      7d      74
      7e      74
      7f      74
      80      74
      84      75
      87      82
      88      82
      89      82
      8a      82
      8b      82
      8c      82
      8d      83
      8e      83
      8f      83
      90      83
      91      83
      92      83
      9a      83
      9b      83
      9c      84
      9d      84
      9e      84
      9f      84
      a0      84
      a1      84
      a2      85
      a3      85
      a4      85
      a5      85
      a6      85
      a7      85
      af      85
      b0      85
      b1      86
      b4      86
      b5      86
      b6      86
      b7      86
      b8      86
      b9      86
      ba      86
      bb      86
      bc      86
      bd      86
      be      86
      bf      86
      c0      86
      c1      86
      c2      86
      c3      86
      c4      86
      c5      86
      c6      86
      c7      86
      c8      86
      c9      86
      ca      86
      cb      86
      cc      86
      d0      87
      d3      94
      d4      94
      d5      94
      d6      94
      d7      94
      d8      94
      dd      95
      de      95
      df      95
      e0      95
      e1      95
      e2      95
      e3      96
      e4      96
      e5      96
      e6      96
      e7      96
      e8      96
      f0      96
      f1      96
      f5      100
      f6      100
      f7      101
      fd      97
      100      97
      101      97
      102      97
      104      103
      105      103
      106      103
      107      103
      108      103
      109      103
      10a      104
      10b      104
      10c      104
      10d      104
      10e      104
      10f      104
      117      104
      118      104
      119      105
      11a      105
      11b      105
      11c      105
      11d      105
      11e      105
      11f      106
      120      106
      121      106
      122      106
      123      106
      124      106
      12c      106
      12d      106
      12e      106
      12f      106
      130      106
      131      106
      132      106
      133      106
      134      106
      137      106
      138      106
      139      106
      13a      106
      13b      106
      13c      106
      13d      106
      140      106
      141      106
      142      106
      143      106
      144      106
      145      106
      146      106
      147      106
      148      106
      149      106
      14a      106
      14b      106
      14c      106
      14d      106
      150      112
      151      112
      152      113
      155      107
      156      107
      157      107
      158      107
      159      107
      15a      107
      15b      107
      15c      107
      15d      107
      15e      107
      15f      107
      160      107
      161      107
      162      107
      163      108
      166      115
      167      115
      168      115
      169      115
      16a      115
      16b      115
      170      116
      171      116
      172      116
      173      116
      174      116
      175      116
      17d      117
      17e      117
      17f      117
      180      117
      181      117
      182      118
      185      123
   }
}

Lines mapping:
1 <-> 8
8 <-> 33
9 <-> 19
10 <-> 18
11 <-> 22
13 <-> 27
15 <-> 13
18 <-> 32
19 <-> 44
20 <-> 43
21 <-> 47
23 <-> 52
25 <-> 55
26 <-> 56
29 <-> 124
30 <-> 68
31 <-> 72
32 <-> 84
33 <-> 96
34 <-> 113
35 <-> 107
36 <-> 108
37 <-> 117
