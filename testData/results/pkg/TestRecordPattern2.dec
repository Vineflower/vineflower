package pkg;

import java.lang.runtime.SwitchBootstraps;

public class TestRecordPattern2 {
   void test(TestRecordPattern2.Pair<?, ?> p) {
      if (p instanceof TestRecordPattern2.Pair && $proxy$a(p) instanceof String s && $proxy$b(p) instanceof Long l) {// 1
         System.out.println("String-Long pair of \"" + s + "\" and " + l);
      } else if (p instanceof TestRecordPattern2.Pair && $proxy$a(p) instanceof Long l) {// 9 10
         Object var9 = $proxy$b(p);
         System.out.println("Long-Object pair");// 11
      } else {
         System.out.println("Other pair");// 13
      }
   }// 15

   void test2(TestRecordPattern2.Pair<?, ?> p) {
      if (p instanceof TestRecordPattern2.Pair && $proxy$a(p) instanceof String s && $proxy$b(p) instanceof Long l) {// 8 18
         System.out.println("String-Long pair of \"" + s + "\" and " + l);
      } else if (p instanceof TestRecordPattern2.Pair && $proxy$a(p) instanceof Long l) {// 19 20
         Object var9 = $proxy$b(p);
         System.out.println("Long-Object pair");// 21
      } else {
         System.out.println("Other pair");// 23
      }

      System.out.println("Unconditional");// 25
   }// 26

   Object test3(TestRecordPattern2.Pair<?, ?> p) {
      TestRecordPattern2.Pair var2 = p;
      byte var3 = 0;

      while (true) {
         Object var10000;
         switch (SwitchBootstraps.typeSwitch<"typeSwitch",TestRecordPattern2.Pair,TestRecordPattern2.Pair,TestRecordPattern2.Pair,TestRecordPattern2.Pair,TestRecordPattern2.Pair>(
            var2, var3
         )) {
            case -1:
               var10000 = -1;// 30
               break;
            case 0:
               if ($proxy$a(var2) instanceof Long l && $proxy$b(var2) instanceof Long r) {// 31
                  var10000 = l + r;
                  break;
               }

               var3 = 1;
               continue;
            case 1:
               if ($proxy$a(var2) instanceof Integer l && $proxy$b(var2) instanceof Integer r) {// 32
                  var10000 = (l << r) * var2.hashCode();
                  break;
               }

               var3 = 2;
               continue;
            case 2:
               Object var21 = $proxy$a(var2);
               if ($proxy$b(var2) instanceof Void r) {// 33
                  throw new IllegalArgumentException("how");
               }

               var3 = 3;
               continue;
            case 3:
               if ($proxy$a(var2) instanceof String l && $proxy$b(var2) instanceof String r && l.length() > 3 && r.length() > 3 && l.length() + r.length() < 23// 35
                  )
                {
                  var10000 = l.length() + r.length();// 36
                  break;
               }

               var3 = 4;// 34
               continue;
            case 4:
               Object var17 = $proxy$a(var2);
               var17 = $proxy$b(var2);// 37
               var10000 = -2;
               break;
            default:
               throw new MatchException(null, null);
         }

         return var10000;// 29
      }
   }

   static record Pair<A, B>(A a, B b) {
   }
}

class 'pkg/TestRecordPattern2' {
   method 'test (Lpkg/TestRecordPattern2$Pair;)V' {
      0      6
      1      6
      2      6
      3      6
      4      6
      7      6
      8      6
      9      6
      a      6
      f      6
      10      6
      11      6
      12      6
      1a      6
      1b      6
      1c      6
      1d      6
      1e      6
      23      6
      24      6
      25      6
      26      6
      2e      6
      2f      7
      30      7
      31      7
      32      7
      33      7
      34      7
      35      7
      36      7
      37      7
      38      7
      39      7
      3a      7
      3b      7
      3f      8
      40      8
      41      8
      42      8
      43      8
      46      8
      47      8
      48      8
      49      8
      4e      8
      4f      8
      50      8
      51      8
      59      8
      5a      8
      5b      9
      5c      9
      5d      9
      5e      9
      5f      9
      60      9
      65      10
      66      10
      67      10
      68      10
      69      10
      6a      10
      6b      10
      6c      10
      70      12
      71      12
      72      12
      73      12
      74      12
      75      12
      78      14
   }

   method 'test2 (Lpkg/TestRecordPattern2$Pair;)V' {
      0      17
      1      17
      2      17
      3      17
      4      17
      7      17
      8      17
      9      17
      a      17
      f      17
      10      17
      11      17
      12      17
      1a      17
      1b      17
      1c      17
      1d      17
      1e      17
      23      17
      24      17
      25      17
      26      17
      2e      17
      2f      18
      30      18
      31      18
      32      18
      33      18
      34      18
      35      18
      36      18
      37      18
      38      18
      39      18
      3a      18
      3b      18
      3f      19
      40      19
      41      19
      42      19
      43      19
      46      19
      47      19
      48      19
      49      19
      4e      19
      4f      19
      50      19
      51      19
      59      19
      5a      19
      5b      20
      5c      20
      5d      20
      5e      20
      5f      20
      60      20
      65      21
      66      21
      67      21
      68      21
      69      21
      6a      21
      6b      21
      6c      21
      70      23
      71      23
      72      23
      73      23
      74      23
      75      23
      78      26
      79      26
      7a      26
      7b      26
      7c      26
      7d      26
      7e      26
      7f      26
      80      27
   }

   method 'test3 (Lpkg/TestRecordPattern2$Pair;)Ljava/lang/Object;' {
      0      30
      1      30
      2      31
      3      31
      4      36
      5      36
      6      35
      7      35
      8      35
      9      35
      a      35
      b      35
      34      81
      35      81
      39      81
      3a      39
      3b      39
      3c      39
      3d      39
      3e      40
      41      42
      42      42
      43      42
      44      42
      49      42
      4a      42
      4b      42
      4c      42
      54      42
      55      42
      56      42
      57      42
      58      42
      59      42
      5e      42
      5f      42
      60      42
      61      42
      69      42
      6a      42
      6e      43
      6f      43
      70      43
      71      43
      72      43
      73      43
      74      43
      75      43
      76      43
      77      43
      78      43
      79      43
      7a      43
      7b      43
      7c      43
      7d      43
      7e      43
      7f      43
      80      43
      84      44
      87      50
      88      50
      89      50
      8a      50
      8f      50
      90      50
      91      50
      92      50
      9a      50
      9b      50
      9c      50
      9d      50
      9e      50
      9f      50
      a4      50
      a5      50
      a6      50
      a7      50
      af      50
      b0      50
      b1      51
      b4      51
      b5      51
      b6      51
      b7      51
      b8      51
      b9      51
      ba      51
      bb      51
      bc      51
      bd      51
      be      51
      bf      51
      c0      51
      c1      51
      c2      51
      c3      51
      c4      51
      c5      51
      c6      51
      c7      51
      c8      51
      c9      51
      ca      51
      cb      51
      cc      51
      d0      52
      d3      58
      d4      58
      d5      58
      d6      58
      d7      58
      d8      58
      dd      59
      de      59
      df      59
      e0      59
      e5      59
      e6      59
      e7      59
      e8      59
      f0      59
      f1      59
      f5      63
      f6      63
      f7      64
      fd      60
      100      60
      101      60
      102      60
      104      66
      105      66
      106      66
      107      66
      10c      66
      10d      66
      10e      66
      10f      66
      117      66
      118      66
      119      66
      11a      66
      11b      66
      11c      66
      121      66
      122      66
      123      66
      124      66
      12c      66
      12d      66
      12e      66
      12f      66
      130      66
      131      66
      132      66
      133      66
      134      66
      137      66
      138      66
      139      66
      13a      66
      13b      66
      13c      66
      13d      66
      140      66
      141      66
      142      66
      143      66
      144      66
      145      66
      146      66
      147      66
      148      66
      149      66
      14a      66
      14b      66
      14c      66
      14d      66
      150      73
      151      73
      152      74
      155      69
      156      69
      157      69
      158      69
      159      69
      15a      69
      15b      69
      15c      69
      15d      69
      15e      69
      15f      69
      160      69
      161      69
      162      69
      163      70
      166      76
      167      76
      168      76
      169      76
      16a      76
      16b      76
      170      77
      171      77
      172      77
      173      77
      174      77
      175      77
      17d      78
      17e      78
      17f      78
      180      78
      181      78
      182      79
      185      84
   }
}

Lines mapping:
1 <-> 7
8 <-> 18
9 <-> 9
10 <-> 9
11 <-> 11
13 <-> 13
15 <-> 15
18 <-> 18
19 <-> 20
20 <-> 20
21 <-> 22
23 <-> 24
25 <-> 27
26 <-> 28
29 <-> 85
30 <-> 40
31 <-> 43
32 <-> 51
33 <-> 60
34 <-> 74
35 <-> 67
36 <-> 70
37 <-> 78
