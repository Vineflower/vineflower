package pkg;

public class TestCompoundAssignment {
   public int testSimple(int i, int j) {
      i += j;// 5
      i -= j;// 6
      i *= j;// 7
      i /= j;// 8
      i &= j;// 9
      i |= j;// 10
      i ^= j;// 11
      i >>= j;// 12
      i <<= j;// 13
      return i >>> j;// 14 16
   }

   public int testComplex(int i, int j, int k) {
      i += j + k;// 20
      i -= j + k;// 21
      i *= j + k;// 22
      i /= j + k;// 23
      i &= j + k;// 24
      i |= j + k;// 25
      i ^= j + k;// 26
      i >>= j + k;// 27
      i <<= j + k;// 28
      return i >>> j + k;// 29 31
   }

   public int testComplexParens(int i, int j, int k, int m) {
      i += (j + k) * m;// 35
      i -= (j + k) * m;// 36
      i *= (j + k) * m;// 37
      i /= (j + k) * m;// 38
      i &= (j + k) * m;// 39
      i |= (j + k) * m;// 40
      i ^= (j + k) * m;// 41
      i >>= (j + k) * m;// 42
      i <<= (j + k) * m;// 43
      return i >>> (j + k) * m;// 44 46
   }

   public int testComplexTernary(int i, int j, int k, int m, boolean b) {
      i += b ? j : k * m;// 50
      i -= b ? j : k * m;// 51
      i *= b ? j : k * m;// 52
      i /= b ? j : k * m;// 53
      i &= b ? j : k * m;// 54
      i |= b ? j : k * m;// 55
      i ^= b ? j : k * m;// 56
      i >>= b ? j : k * m;// 57
      i <<= b ? j : k * m;// 58
      return i >>> (b ? j : k * m);// 59 61
   }

   public int testArrayOp(int i, int j, int[] a, int b) {
      i += a[b] = j;// 65
      i -= a[b] = j;// 66
      i *= a[b] = j;// 67
      i /= a[b] = j;// 68
      i &= a[b] = j;// 69
      i |= a[b] = j;// 70
      i ^= a[b] = j;// 71
      i >>= a[b] = j;// 72
      i <<= a[b] = j;// 73
      return i >>> (a[b] = j);// 74 76
   }
}

class 'pkg/TestCompoundAssignment' {
   method 'testSimple (II)I' {
      1      4
      3      4
      5      5
      7      5
      9      6
      b      6
      d      7
      f      7
      11      8
      13      8
      15      9
      17      9
      19      10
      1b      10
      1d      11
      1f      11
      21      12
      23      12
      24      13
      25      13
      26      13
      29      13
   }

   method 'testComplex (III)I' {
      1      17
      2      17
      3      17
      5      17
      7      18
      8      18
      9      18
      b      18
      d      19
      e      19
      f      19
      11      19
      13      20
      14      20
      15      20
      17      20
      19      21
      1a      21
      1b      21
      1d      21
      1f      22
      20      22
      21      22
      23      22
      25      23
      26      23
      27      23
      29      23
      2b      24
      2c      24
      2d      24
      2f      24
      31      25
      32      25
      33      25
      35      25
      36      26
      37      26
      38      26
      39      26
      3a      26
      3d      26
   }

   method 'testComplexParens (IIII)I' {
      1      30
      2      30
      3      30
      4      30
      5      30
      6      30
      8      30
      a      31
      b      31
      c      31
      d      31
      e      31
      f      31
      11      31
      13      32
      14      32
      15      32
      16      32
      17      32
      18      32
      1a      32
      1c      33
      1d      33
      1e      33
      1f      33
      20      33
      21      33
      23      33
      25      34
      26      34
      27      34
      28      34
      29      34
      2a      34
      2c      34
      2e      35
      2f      35
      30      35
      31      35
      32      35
      33      35
      35      35
      37      36
      38      36
      39      36
      3a      36
      3b      36
      3c      36
      3e      36
      40      37
      41      37
      42      37
      43      37
      44      37
      45      37
      47      37
      49      38
      4a      38
      4b      38
      4c      38
      4d      38
      4e      38
      50      38
      51      39
      52      39
      53      39
      54      39
      55      39
      56      39
      57      39
      58      39
      5b      39
   }

   method 'testComplexTernary (IIIIZ)I' {
      1      43
      2      43
      3      43
      4      43
      5      43
      6      43
      a      43
      b      43
      c      43
      d      43
      f      43
      11      44
      12      44
      13      44
      14      44
      15      44
      16      44
      1a      44
      1b      44
      1c      44
      1d      44
      1f      44
      21      45
      22      45
      23      45
      24      45
      25      45
      26      45
      2a      45
      2b      45
      2c      45
      2d      45
      2f      45
      31      46
      32      46
      33      46
      34      46
      35      46
      36      46
      3a      46
      3b      46
      3c      46
      3d      46
      3f      46
      41      47
      42      47
      43      47
      44      47
      45      47
      46      47
      4a      47
      4b      47
      4c      47
      4d      47
      4f      47
      51      48
      52      48
      53      48
      54      48
      55      48
      56      48
      5a      48
      5b      48
      5c      48
      5d      48
      5f      48
      61      49
      62      49
      63      49
      64      49
      65      49
      66      49
      6a      49
      6b      49
      6c      49
      6d      49
      6f      49
      71      50
      72      50
      73      50
      74      50
      75      50
      76      50
      7a      50
      7b      50
      7c      50
      7d      50
      7f      50
      81      51
      82      51
      83      51
      84      51
      85      51
      86      51
      8a      51
      8b      51
      8c      51
      8d      51
      8f      51
      90      52
      91      52
      92      52
      93      52
      94      52
      95      52
      96      52
      9a      52
      9b      52
      9c      52
      9d      52
      9e      52
      a1      52
   }

   method 'testArrayOp (II[II)I' {
      1      56
      2      56
      3      56
      4      56
      6      56
      8      56
      a      57
      b      57
      c      57
      d      57
      f      57
      11      57
      13      58
      14      58
      15      58
      16      58
      18      58
      1a      58
      1c      59
      1d      59
      1e      59
      1f      59
      21      59
      23      59
      25      60
      26      60
      27      60
      28      60
      2a      60
      2c      60
      2e      61
      2f      61
      30      61
      31      61
      33      61
      35      61
      37      62
      38      62
      39      62
      3a      62
      3c      62
      3e      62
      40      63
      41      63
      42      63
      43      63
      45      63
      47      63
      49      64
      4a      64
      4b      64
      4c      64
      4e      64
      50      64
      51      65
      52      65
      53      65
      54      65
      55      65
      57      65
      58      65
      5b      65
   }
}

Lines mapping:
5 <-> 5
6 <-> 6
7 <-> 7
8 <-> 8
9 <-> 9
10 <-> 10
11 <-> 11
12 <-> 12
13 <-> 13
14 <-> 14
16 <-> 14
20 <-> 18
21 <-> 19
22 <-> 20
23 <-> 21
24 <-> 22
25 <-> 23
26 <-> 24
27 <-> 25
28 <-> 26
29 <-> 27
31 <-> 27
35 <-> 31
36 <-> 32
37 <-> 33
38 <-> 34
39 <-> 35
40 <-> 36
41 <-> 37
42 <-> 38
43 <-> 39
44 <-> 40
46 <-> 40
50 <-> 44
51 <-> 45
52 <-> 46
53 <-> 47
54 <-> 48
55 <-> 49
56 <-> 50
57 <-> 51
58 <-> 52
59 <-> 53
61 <-> 53
65 <-> 57
66 <-> 58
67 <-> 59
68 <-> 60
69 <-> 61
70 <-> 62
71 <-> 63
72 <-> 64
73 <-> 65
74 <-> 66
76 <-> 66
