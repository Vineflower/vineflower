package pkg;

import java.util.HashMap;
import java.util.List;

public class TestPrimitives {
   private void testInvalidUnboxing() {
      List<Integer> lst = null;// 7
      lst.remove(Integer.valueOf(0));// 8
      this.genericBoxing((short)0);// 9
      int a = this.genericReturn(lst);// 10
      List<Byte> b = null;// 11
      this.genericParameter(b, (byte)0);// 12
      this.genericParameter(lst, 0);// 13
   }// 14

   private <T> void genericBoxing(T value) {
   }// 16

   private <T> T genericReturn(List<T> value) {
      return value.get(0);// 17
   }

   private <T> void genericParameter(List<T> p, T v) {
   }// 18

   public void printAll() {
      this.printBoolean(true);// 21
      this.printByte((byte)123);// 22
      this.printShort((short)257);// 23
      this.printInt(123);// 24
      this.printLong(123L);// 25
      this.printFloat(1.23F);// 26
      this.printDouble(1.23);// 27
      this.printChar('Z');// 28
      this.printBooleanBoxed(true);// 30
      this.printByteBoxed((byte)123);// 31
      this.printShortBoxed((short)257);// 32
      this.printIntBoxed(1);// 33
      this.printIntBoxed(40000);// 34
      this.printLongBoxed(123L);// 35
      this.printFloatBoxed(1.23F);// 36
      this.printDoubleBoxed(1.23);// 37
      this.printCharBoxed('Z');// 38
      this.printBoolean(Boolean.valueOf("true"));// 40
      this.printByte(Byte.valueOf("123"));// 41
      this.printShort(Short.valueOf("257"));// 42
      this.printInt(Integer.valueOf("123"));// 43
      this.printLong(Long.valueOf("123"));// 44
      this.printFloat(Float.valueOf("1.23"));// 45
      this.printDouble(Double.valueOf("1.23"));// 46
      this.printChar(new Character('Z'));// 47
      this.printInt(this.getInteger());// 49
      this.printChar(this.getCharacter());// 50
      System.out.printf("%b, %d, %d, %d, %c, %d", true, 1, 213, 40000, 'c', 42L);// 52
      System.out.printf("%b, %d, %d, %d", this.getBoolean(), this.getByte(), this.getShort(), this.getInt());// 53
      new TestPrimitives(false, (byte)123, (short)257, 40000, 123L, 3.14F, 1.618, 'A');// 55
      new TestPrimitives('A', 1.618, 3.14F, 123L, 40000, (short)257, (byte)123, false);// 56
      new TestPrimitives(
         Boolean.valueOf("false"),// 57
         Byte.valueOf("123"),
         Short.valueOf("257"),
         Integer.valueOf("40000"),
         Long.valueOf("123"),
         Float.valueOf("3.14"),// 58
         Double.valueOf("1.618"),
         new Character('A')
      );
   }// 59

   private TestPrimitives(boolean bool, byte b, short s, int i, long l, float f, double d, char c) {
      System.out.printf("%b, %d, %d, %d, %d, %.2f, %.2f, %c", bool, b, s, i, l, f, d, c);// 62
   }// 63

   private TestPrimitives(Character c, Double d, Float f, Long l, Integer i, Short s, Byte b, Boolean bool) {
      System.out.printf("%b, %d, %d, %d, %d, %.2f, %.2f, %c", bool, b, s, i, l, f, d, c);// 66
   }// 67

   public void printBoolean(boolean b) {
      System.out.printf("%b", b);// 70
   }// 71

   public void printByte(byte b) {
      System.out.printf("%d", b);// 74
   }// 75

   public void printShort(short s) {
      System.out.printf("%d", s);// 78
   }// 79

   public void printInt(int i) {
      System.out.printf("%d", i);// 82
   }// 83

   public void printLong(long l) {
      System.out.printf("%d", l);// 86
   }// 87

   public void printFloat(float f) {
      System.out.printf("%f", f);// 90
   }// 91

   public void printDouble(double d) {
      System.out.printf("%f", d);// 94
   }// 95

   public void printChar(char c) {
      System.out.printf("%c", c);// 98
   }// 99

   public void printBooleanBoxed(Boolean b) {
      System.out.printf("%b", b);// 103
   }// 104

   public void printByteBoxed(Byte b) {
      System.out.printf("%d", b);// 107
   }// 108

   public void printShortBoxed(Short s) {
      System.out.printf("%d", s);// 111
   }// 112

   public void printIntBoxed(Integer i) {
      System.out.printf("%d", i);// 115
   }// 116

   public void printLongBoxed(Long l) {
      System.out.printf("%d", l);// 119
   }// 120

   public void printFloatBoxed(Float f) {
      System.out.printf("%f", f);// 123
   }// 124

   public void printDoubleBoxed(Double d) {
      System.out.printf("%f", d);// 127
   }// 128

   public void printCharBoxed(Character c) {
      System.out.printf("%c", c);// 131
   }// 132

   public boolean getBoolean() {
      return false;// 136
   }

   public byte getByte() {
      return -128;// 140
   }

   public short getShort() {
      return -32768;// 144
   }

   public int getInt() {
      return 42;// 148
   }

   public Integer getInteger() {
      return 40000;// 152
   }

   public Character getCharacter() {
      return 'Z';// 156
   }

   public void printNarrowed() {
      this.printByte((byte)this.getInt());// 160
      this.printShort((short)this.getInt());// 161
   }// 162

   public void constructor() {
      new Byte((byte)1);// 165
   }// 166

   private boolean compare(char c) {
      boolean res = c > -1;// 169
      res = c > 0;// 170
      res = c > 1;// 171
      res = c > '\b';// 172
      res = c > '\t';// 173
      res = c > '\n';// 174
      res = c > '\f';// 175
      res = c > '\r';// 176
      res = c > ' ';// 177
      res = c > 'a';// 178
      res = c > 'Z';// 179
      res = c > 127;// 180
      return c > 255;// 181 182
   }

   void testAutoBoxingCallRequired(boolean value) {
      Boolean.valueOf(value).hashCode();// 186
   }// 187

   void testCastRequired() {
      HashMap<String, Byte> map = new HashMap<>();// 190
      map.put("test", (byte)0);// 191
   }// 192
}

class 'pkg/TestPrimitives' {
   method 'testInvalidUnboxing ()V' {
      0      7
      1      7
      2      8
      3      8
      4      8
      5      8
      6      8
      7      8
      8      8
      9      8
      a      8
      b      8
      d      9
      e      9
      f      9
      10      9
      11      9
      12      9
      13      9
      14      9
      15      10
      16      10
      17      10
      18      10
      19      10
      1d      10
      1e      10
      1f      10
      20      10
      21      11
      22      11
      23      12
      24      12
      25      12
      26      12
      27      12
      28      12
      29      12
      2a      12
      2b      12
      2c      13
      2d      13
      2e      13
      2f      13
      30      13
      31      13
      32      13
      33      13
      34      13
      35      14
   }

   method 'genericBoxing (Ljava/lang/Object;)V' {
      0      17
   }

   method 'genericReturn (Ljava/util/List;)Ljava/lang/Object;' {
      0      20
      1      20
      2      20
      3      20
      4      20
      5      20
      6      20
      7      20
   }

   method 'genericParameter (Ljava/util/List;Ljava/lang/Object;)V' {
      0      24
   }

   method 'printAll ()V' {
      0      27
      1      27
      2      27
      3      27
      4      27
      5      28
      6      28
      7      28
      8      28
      9      28
      a      28
      b      29
      c      29
      d      29
      e      29
      f      29
      10      29
      11      29
      12      30
      13      30
      14      30
      15      30
      16      30
      17      30
      18      31
      19      31
      1a      31
      1b      31
      1c      31
      1d      31
      1e      31
      1f      32
      20      32
      21      32
      22      32
      23      32
      24      32
      25      33
      26      33
      27      33
      28      33
      29      33
      2a      33
      2b      33
      2c      34
      2d      34
      2e      34
      2f      34
      30      34
      31      34
      32      35
      33      35
      34      35
      35      35
      36      35
      37      35
      38      35
      39      35
      3a      36
      3b      36
      3c      36
      3d      36
      3e      36
      3f      36
      40      36
      41      36
      42      36
      43      37
      44      37
      45      37
      46      37
      47      37
      48      37
      49      37
      4a      37
      4b      37
      4c      37
      4d      38
      4e      38
      4f      38
      50      38
      51      38
      52      38
      53      38
      54      38
      55      39
      56      39
      57      39
      58      39
      59      39
      5a      39
      5b      39
      5c      39
      5d      39
      5e      40
      5f      40
      60      40
      61      40
      62      40
      63      40
      64      40
      65      40
      66      40
      67      40
      68      41
      69      41
      6a      41
      6b      41
      6c      41
      6d      41
      6e      41
      6f      41
      70      41
      71      42
      72      42
      73      42
      74      42
      75      42
      76      42
      77      42
      78      42
      79      42
      7a      42
      7b      43
      7c      43
      7d      43
      7e      43
      7f      43
      80      43
      81      43
      82      43
      83      43
      84      44
      85      44
      86      44
      87      44
      88      44
      89      44
      8a      44
      8b      44
      8c      44
      8d      44
      8e      44
      8f      44
      90      45
      91      45
      92      45
      93      45
      94      45
      95      45
      96      45
      97      45
      98      45
      99      45
      9a      45
      9b      45
      9c      46
      9d      46
      9e      46
      9f      46
      a0      46
      a1      46
      a2      46
      a3      46
      a4      46
      a5      46
      a6      46
      a7      46
      a8      47
      a9      47
      aa      47
      ab      47
      ac      47
      ad      47
      ae      47
      af      47
      b0      47
      b1      47
      b2      47
      b3      47
      b4      48
      b5      48
      b6      48
      b7      48
      b8      48
      b9      48
      ba      48
      bb      48
      bc      48
      bd      48
      be      48
      bf      48
      c0      49
      c1      49
      c2      49
      c3      49
      c4      49
      c5      49
      c6      49
      c7      49
      c8      49
      c9      49
      ca      49
      cb      49
      cc      50
      cd      50
      ce      50
      cf      50
      d0      50
      d1      50
      d2      50
      d3      50
      d4      50
      d5      50
      d6      50
      d7      50
      d8      51
      dd      51
      de      51
      e2      51
      e3      51
      e4      51
      e5      51
      e6      51
      e7      51
      e8      52
      e9      52
      ea      52
      eb      52
      ec      52
      ed      52
      ee      52
      ef      52
      f0      52
      f1      52
      f2      52
      f3      53
      f4      53
      f5      53
      f6      53
      f7      53
      f8      53
      f9      53
      fa      53
      fb      53
      fc      53
      fd      53
      fe      54
      ff      54
      100      54
      101      54
      102      54
      10a      54
      10b      54
      10c      54
      10d      54
      111      54
      112      54
      113      54
      114      54
      118      54
      119      54
      11a      54
      11b      54
      11c      54
      11d      54
      121      54
      122      54
      123      54
      124      54
      125      54
      129      54
      12a      54
      12b      54
      12c      54
      12d      54
      131      54
      132      54
      133      54
      134      54
      135      54
      136      54
      138      54
      139      54
      13a      54
      13c      55
      13d      55
      13e      55
      13f      55
      140      55
      147      55
      148      55
      149      55
      14a      55
      14b      55
      14c      55
      14d      55
      151      55
      152      55
      153      55
      154      55
      155      55
      156      55
      157      55
      15b      55
      15c      55
      15d      55
      15e      55
      15f      55
      160      55
      161      55
      165      55
      166      55
      167      55
      168      55
      169      55
      16a      55
      16b      55
      16d      55
      16e      55
      16f      55
      175      56
      176      56
      177      56
      178      56
      179      56
      17a      56
      17b      56
      17c      56
      17d      56
      17e      56
      17f      56
      180      56
      181      56
      182      56
      183      56
      184      56
      185      56
      186      56
      18f      57
      190      57
      191      57
      192      57
      193      57
      194      57
      195      57
      196      57
      197      57
      198      57
      199      57
      19a      57
      19b      57
      19c      57
      19d      57
      19e      57
      19f      57
      1a0      57
      1a1      57
      1a2      57
      1a3      57
      1a4      57
      1a5      57
      1a6      57
      1a7      57
      1a8      57
      1a9      57
      1aa      57
      1ab      57
      1ac      57
      1ad      57
      1ae      57
      1af      57
      1b0      57
      1b1      57
      1b2      57
      1b3      57
      1b4      57
      1b5      57
      1b6      57
      1b7      57
      1b8      57
      1c1      59
      1c2      59
      1c3      59
      1c4      59
      1c5      59
      1c6      59
      1c7      59
      1c8      59
      1c9      60
      1ca      60
      1cb      60
      1cc      60
      1cd      60
      1ce      60
      1cf      60
      1d0      60
      1d1      61
      1d2      61
      1d3      61
      1d4      61
      1d5      61
      1d6      61
      1d7      61
      1d8      61
      1d9      62
      1da      62
      1db      62
      1dc      62
      1dd      62
      1de      62
      1df      62
      1e0      62
      1e1      63
      1e2      63
      1e3      63
      1e4      63
      1e5      63
      1e6      63
      1e7      63
      1e8      63
      1e9      64
      1ea      64
      1eb      64
      1ec      64
      1ed      64
      1ee      64
      1ef      64
      1f0      64
      1f1      65
      1f2      65
      1f3      65
      1f4      65
      1f5      65
      1f6      65
      1f7      65
      1f8      65
      1fd      66
      1fe      66
      202      66
      203      66
      204      66
      209      68
   }

   method '<init> (ZBSIJFDC)V' {
      4      71
      5      71
      6      71
      7      71
      8      71
      10      71
      11      71
      12      71
      13      71
      17      71
      18      71
      19      71
      1a      71
      1e      71
      1f      71
      20      71
      21      71
      25      71
      26      71
      27      71
      28      71
      29      71
      2d      71
      2e      71
      2f      71
      30      71
      31      71
      35      71
      36      71
      37      71
      38      71
      39      71
      3e      71
      3f      71
      40      71
      41      71
      42      71
      47      71
      48      71
      49      71
      4a      71
      4b      71
      4d      71
      4e      71
      4f      71
      51      72
   }

   method '<init> (Ljava/lang/Character;Ljava/lang/Double;Ljava/lang/Float;Ljava/lang/Long;Ljava/lang/Integer;Ljava/lang/Short;Ljava/lang/Byte;Ljava/lang/Boolean;)V' {
      4      75
      5      75
      6      75
      7      75
      8      75
      10      75
      11      75
      15      75
      16      75
      1a      75
      1b      75
      1f      75
      20      75
      24      75
      25      75
      29      75
      2e      75
      33      75
      35      75
      36      75
      37      75
      39      76
   }

   method 'printBoolean (Z)V' {
      0      79
      1      79
      2      79
      3      79
      4      79
      b      79
      c      79
      d      79
      e      79
      10      79
      11      79
      12      79
      14      80
   }

   method 'printByte (B)V' {
      0      83
      1      83
      2      83
      3      83
      4      83
      b      83
      c      83
      d      83
      e      83
      10      83
      11      83
      12      83
      14      84
   }

   method 'printShort (S)V' {
      0      87
      1      87
      2      87
      3      87
      4      87
      b      87
      c      87
      d      87
      e      87
      10      87
      11      87
      12      87
      14      88
   }

   method 'printInt (I)V' {
      0      91
      1      91
      2      91
      3      91
      4      91
      b      91
      c      91
      d      91
      e      91
      10      91
      11      91
      12      91
      14      92
   }

   method 'printLong (J)V' {
      0      95
      1      95
      2      95
      3      95
      4      95
      b      95
      c      95
      d      95
      e      95
      10      95
      11      95
      12      95
      14      96
   }

   method 'printFloat (F)V' {
      0      99
      1      99
      2      99
      3      99
      4      99
      b      99
      c      99
      d      99
      e      99
      10      99
      11      99
      12      99
      14      100
   }

   method 'printDouble (D)V' {
      0      103
      1      103
      2      103
      3      103
      4      103
      b      103
      c      103
      d      103
      e      103
      10      103
      11      103
      12      103
      14      104
   }

   method 'printChar (C)V' {
      0      107
      1      107
      2      107
      3      107
      4      107
      b      107
      c      107
      d      107
      e      107
      10      107
      11      107
      12      107
      14      108
   }

   method 'printBooleanBoxed (Ljava/lang/Boolean;)V' {
      0      111
      1      111
      2      111
      3      111
      4      111
      b      111
      d      111
      e      111
      f      111
      11      112
   }

   method 'printByteBoxed (Ljava/lang/Byte;)V' {
      0      115
      1      115
      2      115
      3      115
      4      115
      b      115
      d      115
      e      115
      f      115
      11      116
   }

   method 'printShortBoxed (Ljava/lang/Short;)V' {
      0      119
      1      119
      2      119
      3      119
      4      119
      b      119
      d      119
      e      119
      f      119
      11      120
   }

   method 'printIntBoxed (Ljava/lang/Integer;)V' {
      0      123
      1      123
      2      123
      3      123
      4      123
      b      123
      d      123
      e      123
      f      123
      11      124
   }

   method 'printLongBoxed (Ljava/lang/Long;)V' {
      0      127
      1      127
      2      127
      3      127
      4      127
      b      127
      d      127
      e      127
      f      127
      11      128
   }

   method 'printFloatBoxed (Ljava/lang/Float;)V' {
      0      131
      1      131
      2      131
      3      131
      4      131
      b      131
      d      131
      e      131
      f      131
      11      132
   }

   method 'printDoubleBoxed (Ljava/lang/Double;)V' {
      0      135
      1      135
      2      135
      3      135
      4      135
      b      135
      d      135
      e      135
      f      135
      11      136
   }

   method 'printCharBoxed (Ljava/lang/Character;)V' {
      0      139
      1      139
      2      139
      3      139
      4      139
      b      139
      d      139
      e      139
      f      139
      11      140
   }

   method 'getBoolean ()Z' {
      0      143
      1      143
   }

   method 'getByte ()B' {
      0      147
      1      147
      2      147
   }

   method 'getShort ()S' {
      0      151
      1      151
      2      151
      3      151
   }

   method 'getInt ()I' {
      0      155
      1      155
      2      155
   }

   method 'getInteger ()Ljava/lang/Integer;' {
      0      159
      1      159
      2      159
      3      159
      4      159
      5      159
   }

   method 'getCharacter ()Ljava/lang/Character;' {
      0      163
      1      163
      2      163
      3      163
      4      163
      5      163
   }

   method 'printNarrowed ()V' {
      0      167
      1      167
      2      167
      3      167
      4      167
      5      167
      6      167
      7      167
      8      167
      9      168
      a      168
      b      168
      c      168
      d      168
      e      168
      f      168
      10      168
      11      168
      12      169
   }

   method 'constructor ()V' {
      4      172
      9      173
   }

   method 'compare (C)Z' {
      0      176
      1      176
      2      176
      3      176
      4      176
      a      176
      b      177
      c      177
      d      177
      e      177
      14      177
      15      178
      16      178
      17      178
      18      178
      19      178
      1f      178
      20      179
      21      179
      22      179
      23      179
      24      179
      25      179
      2b      179
      2c      180
      2d      180
      2e      180
      2f      180
      30      180
      31      180
      37      180
      38      181
      39      181
      3a      181
      3b      181
      3c      181
      3d      181
      43      181
      44      182
      45      182
      46      182
      47      182
      48      182
      49      182
      4f      182
      50      183
      51      183
      52      183
      53      183
      54      183
      55      183
      5b      183
      5c      184
      5d      184
      5e      184
      5f      184
      60      184
      61      184
      67      184
      68      185
      69      185
      6a      185
      6b      185
      6c      185
      6d      185
      73      185
      74      186
      75      186
      76      186
      77      186
      78      186
      79      186
      7f      186
      80      187
      81      187
      82      187
      83      187
      84      187
      85      187
      8b      187
      8c      188
      8d      188
      8e      188
      8f      188
      90      188
      91      188
      92      188
      9a      188
   }

   method 'testAutoBoxingCallRequired (Z)V' {
      0      192
      1      192
      2      192
      3      192
      4      192
      5      192
      6      192
      8      193
   }

   method 'testCastRequired ()V' {
      7      196
      8      197
      9      197
      a      197
      b      197
      c      197
      d      197
      e      197
      f      197
      10      197
      11      197
      13      198
   }
}

Lines mapping:
7 <-> 8
8 <-> 9
9 <-> 10
10 <-> 11
11 <-> 12
12 <-> 13
13 <-> 14
14 <-> 15
16 <-> 18
17 <-> 21
18 <-> 25
21 <-> 28
22 <-> 29
23 <-> 30
24 <-> 31
25 <-> 32
26 <-> 33
27 <-> 34
28 <-> 35
30 <-> 36
31 <-> 37
32 <-> 38
33 <-> 39
34 <-> 40
35 <-> 41
36 <-> 42
37 <-> 43
38 <-> 44
40 <-> 45
41 <-> 46
42 <-> 47
43 <-> 48
44 <-> 49
45 <-> 50
46 <-> 51
47 <-> 52
49 <-> 53
50 <-> 54
52 <-> 55
53 <-> 56
55 <-> 57
56 <-> 58
57 <-> 60
58 <-> 65
59 <-> 69
62 <-> 72
63 <-> 73
66 <-> 76
67 <-> 77
70 <-> 80
71 <-> 81
74 <-> 84
75 <-> 85
78 <-> 88
79 <-> 89
82 <-> 92
83 <-> 93
86 <-> 96
87 <-> 97
90 <-> 100
91 <-> 101
94 <-> 104
95 <-> 105
98 <-> 108
99 <-> 109
103 <-> 112
104 <-> 113
107 <-> 116
108 <-> 117
111 <-> 120
112 <-> 121
115 <-> 124
116 <-> 125
119 <-> 128
120 <-> 129
123 <-> 132
124 <-> 133
127 <-> 136
128 <-> 137
131 <-> 140
132 <-> 141
136 <-> 144
140 <-> 148
144 <-> 152
148 <-> 156
152 <-> 160
156 <-> 164
160 <-> 168
161 <-> 169
162 <-> 170
165 <-> 173
166 <-> 174
169 <-> 177
170 <-> 178
171 <-> 179
172 <-> 180
173 <-> 181
174 <-> 182
175 <-> 183
176 <-> 184
177 <-> 185
178 <-> 186
179 <-> 187
180 <-> 188
181 <-> 189
182 <-> 189
186 <-> 193
187 <-> 194
190 <-> 197
191 <-> 198
192 <-> 199
Not mapped:
61
65
