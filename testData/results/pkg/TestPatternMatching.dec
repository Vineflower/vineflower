package pkg;

public class TestPatternMatching {
   public void testSimple(Object obj) {
      if (obj instanceof String str) {// 5
         System.out.println(str.length());// 6
      }
   }// 8

   public void testInverted(Object obj) {
      if (!(obj instanceof String str)) {// 11
         System.out.println("Oh no");// 12
      }
   }// 14

   public void testCompound(Object obj) {
      if (obj instanceof String str && str.contains("hi")) {// 17
         System.out.println(str.length());// 18
      }
   }// 20

   public void testSimpleLoop(Object obj) {
      while (obj instanceof String) {// 24
         String str = (String)obj;
         System.out.println(str.length());// 25
         obj = str.intern();// 26
      }
   }// 28

   public void testSimpleLoopUnused(Object obj) {
      while (obj instanceof String) {// 31
         String str = (String)obj;
         obj = obj.hashCode() + "";// 32
      }
   }// 34

   public void testInvertedLoop(Object obj) {
      while (!(obj instanceof String)) {// 37
         System.out.println("Oh no");// 38
         obj = obj.toString();// 39
      }

      String str = (String)obj;
      System.out.println(str.hashCode());// 41
   }

   public void testInvertedLoopUnused(Object obj) {
      while (!(obj instanceof String)) {// 45
         System.out.println("Oh no");// 46
         obj = obj.toString();// 47
      }

      String str = (String)obj;
   }

   public void testCompoundLoop(Object obj) {
      while (obj instanceof String str && str.contains("hi")) {// 52
         obj = str.substring(1);// 53
      }
   }// 55

   public boolean testReturn(Object obj) {
      if (obj instanceof String s && s.length() > 5) {// 58
         return true;
      }

      return false;
   }

   public int testReturnTernary(Object obj) {
      return obj instanceof String s ? s.length() : 0;// 62
   }

   public int testReturnTernaryComplex(Object obj) {
      return (!(obj instanceof String s) || s.length() <= 5) && !(obj instanceof Integer) ? 1 : 4;// 66
   }

   public void testLoop(Object obj) {
      while (obj instanceof String s && s.length() > 10) {// 70
         String var4 = s.substring(1);// 71
         obj = var4.substring(1);// 72
         System.out.println(var4);// 74
      }
   }// 76

   public void testSimpleReturn(Object obj) {
      if (obj instanceof String str && str.length() > 5) {// 79 80
         return;// 81
      }

      System.out.println("test");// 85
   }// 86

   public void testMessyLVT(Object obj) {
      String a = "a";// 90
      String b = "b";// 91
      String c = "c";// 92
      String d = "d";// 93
      String e = "e";// 94
      String f = "f";// 95
      String g = "g";// 96
      String h = "h";// 97
      String var10 = "i";// 98
      if (obj instanceof String str) {// 100
         System.out.println(str.length());// 101
      }
   }// 103
}

class 'pkg/TestPatternMatching' {
   method 'testSimple (Ljava/lang/Object;)V' {
      0      4
      2      4
      3      4
      4      4
      5      4
      6      4
      d      4
      e      5
      f      5
      10      5
      11      5
      12      5
      13      5
      14      5
      15      5
      18      7
   }

   method 'testInverted (Ljava/lang/Object;)V' {
      0      10
      2      10
      3      10
      4      10
      5      10
      6      10
      d      10
      11      11
      12      11
      13      11
      14      11
      15      11
      16      11
      19      13
   }

   method 'testCompound (Ljava/lang/Object;)V' {
      0      16
      2      16
      3      16
      4      16
      5      16
      6      16
      d      16
      e      16
      f      16
      10      16
      11      16
      12      16
      13      16
      14      16
      17      17
      18      17
      19      17
      1a      17
      1b      17
      1c      17
      1d      17
      1e      17
      21      19
   }

   method 'testSimpleLoop (Ljava/lang/Object;)V' {
      0      22
      2      22
      3      22
      4      22
      5      22
      9      23
      a      23
      b      23
      c      23
      d      23
      e      24
      f      24
      10      24
      11      24
      12      24
      13      24
      14      24
      15      24
      16      24
      17      24
      18      25
      19      25
      1a      25
      1b      25
      1c      25
      20      27
   }

   method 'testSimpleLoopUnused (Ljava/lang/Object;)V' {
      0      30
      2      30
      3      30
      4      30
      5      30
      9      31
      a      31
      b      31
      c      31
      d      31
      e      32
      f      32
      10      32
      11      32
      12      32
      13      32
      14      32
      15      32
      16      32
      17      32
      1b      34
   }

   method 'testInvertedLoop (Ljava/lang/Object;)V' {
      0      37
      2      37
      3      37
      4      37
      5      37
      6      37
      9      42
      a      42
      b      42
      c      42
      d      42
      e      43
      f      43
      10      43
      11      38
      12      38
      13      38
      14      38
      15      38
      16      38
      17      38
      18      38
      19      39
      1a      39
      1b      39
      1c      39
      1d      39
      1e      43
      1f      43
      20      43
      21      43
      22      43
      23      43
      24      43
      25      43
      26      43
      27      43
      28      44
      29      44
      2a      44
   }

   method 'testInvertedLoopUnused (Ljava/lang/Object;)V' {
      0      47
      2      47
      3      47
      4      47
      5      47
      6      47
      9      52
      a      52
      b      52
      c      52
      d      52
      e      53
      f      53
      10      53
      11      48
      12      48
      13      48
      14      48
      15      48
      16      48
      17      48
      18      48
      19      49
      1a      49
      1b      49
      1c      49
      1d      49
      1e      53
      1f      53
      20      53
   }

   method 'testCompoundLoop (Ljava/lang/Object;)V' {
      0      56
      2      56
      3      56
      4      56
      5      56
      6      56
      d      56
      e      56
      f      56
      10      56
      11      56
      12      56
      13      56
      14      56
      17      57
      18      57
      19      57
      1a      57
      1b      57
      1c      57
      20      59
   }

   method 'testReturn (Ljava/lang/Object;)Z' {
      0      62
      2      62
      3      62
      4      62
      5      62
      6      62
      d      62
      e      62
      f      62
      10      62
      11      62
      12      62
      13      62
      16      63
      1a      66
      1b      63
   }

   method 'testReturnTernary (Ljava/lang/Object;)I' {
      0      70
      2      70
      3      70
      4      70
      5      70
      6      70
      d      70
      e      70
      f      70
      10      70
      11      70
      15      70
      16      70
   }

   method 'testReturnTernaryComplex (Ljava/lang/Object;)I' {
      0      74
      2      74
      3      74
      4      74
      5      74
      6      74
      d      74
      e      74
      f      74
      10      74
      11      74
      12      74
      13      74
      16      74
      17      74
      18      74
      19      74
      1a      74
      1d      74
      21      74
      22      74
   }

   method 'testLoop (Ljava/lang/Object;)V' {
      0      78
      2      78
      3      78
      4      78
      5      78
      6      78
      d      78
      e      78
      f      78
      10      78
      11      78
      12      78
      13      78
      14      78
      17      79
      18      79
      19      79
      1a      79
      1b      79
      1c      79
      1d      80
      1e      80
      1f      80
      20      80
      21      80
      22      80
      23      81
      24      81
      25      81
      26      81
      27      81
      28      81
      29      81
      2d      83
   }

   method 'testSimpleReturn (Ljava/lang/Object;)V' {
      0      86
      2      86
      3      86
      4      86
      5      86
      6      86
      d      86
      e      86
      f      86
      10      86
      11      86
      12      86
      13      86
      16      87
      17      90
      18      90
      19      90
      1a      90
      1b      90
      1c      90
      1d      90
      1e      90
      1f      91
   }

   method 'testMessyLVT (Ljava/lang/Object;)V' {
      0      94
      1      94
      2      94
      3      95
      4      95
      5      95
      6      96
      7      96
      8      96
      9      96
      a      97
      b      97
      c      97
      d      97
      e      98
      f      98
      10      98
      11      98
      12      99
      13      99
      14      99
      15      99
      16      100
      17      100
      18      100
      19      100
      1a      101
      1b      101
      1c      101
      1d      101
      1e      102
      1f      102
      20      102
      21      102
      22      103
      24      103
      25      103
      26      103
      27      103
      28      103
      2f      103
      30      104
      31      104
      32      104
      33      104
      34      104
      35      104
      36      104
      37      104
      3a      106
   }
}

Lines mapping:
5 <-> 5
6 <-> 6
8 <-> 8
11 <-> 11
12 <-> 12
14 <-> 14
17 <-> 17
18 <-> 18
20 <-> 20
24 <-> 23
25 <-> 25
26 <-> 26
28 <-> 28
31 <-> 31
32 <-> 33
34 <-> 35
37 <-> 38
38 <-> 39
39 <-> 40
41 <-> 44
45 <-> 48
46 <-> 49
47 <-> 50
52 <-> 57
53 <-> 58
55 <-> 60
58 <-> 63
62 <-> 71
66 <-> 75
70 <-> 79
71 <-> 80
72 <-> 81
74 <-> 82
76 <-> 84
79 <-> 87
80 <-> 87
81 <-> 88
85 <-> 91
86 <-> 92
90 <-> 95
91 <-> 96
92 <-> 97
93 <-> 98
94 <-> 99
95 <-> 100
96 <-> 101
97 <-> 102
98 <-> 103
100 <-> 104
101 <-> 105
103 <-> 107
Not mapped:
42
49
