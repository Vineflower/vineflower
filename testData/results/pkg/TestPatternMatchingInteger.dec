package pkg;

public class TestPatternMatchingInteger {
   public int testSimple(Object obj) {
      return obj instanceof Integer i ? i + 1 : 1;// 5 6 9
   }

   public int testMulti(Object a, Object b) {
      if (a instanceof Integer ai && b instanceof Integer bi) {// 13
         return ai + bi;// 14
      }

      if (a instanceof Integer ai) {// 15
         return ai;// 16
      } else {
         return b instanceof Integer bi ? bi : 0;// 17 18 21
      }
   }

   public int testMulti2(Object a, Object b) {
      int result = 0;// 25
      if (a instanceof Integer ai) {// 26
         result += ai;// 27
      }

      if (b instanceof Integer bi) {// 29
         result += bi;// 30
      }

      return result;// 33
   }

   public int testMultiDifferent(Object a, Object b) {
      if (a instanceof Integer i && b instanceof String s) {// 37
         return i + s.length();// 38
      }

      return 0;// 41
   }

   public void testDeMorgan(Object obj) {
      if (obj instanceof Integer i && i >= 1 && i >= 41) {// 45
         System.out.println(i);// 48
         return;// 50
      }

      System.out.println("i");// 46
   }
}

class 'pkg/TestPatternMatchingInteger' {
   method 'testSimple (Ljava/lang/Object;)I' {
      0      4
      1      4
      2      4
      3      4
      4      4
      b      4
      c      4
      d      4
      e      4
      f      4
      10      4
      11      4
      13      4
   }

   method 'testMulti (Ljava/lang/Object;Ljava/lang/Object;)I' {
      0      8
      1      8
      2      8
      3      8
      4      8
      b      8
      c      8
      d      8
      e      8
      f      8
      10      8
      17      8
      18      8
      19      9
      1a      9
      1b      9
      1c      9
      1d      9
      1e      9
      1f      9
      20      9
      21      9
      22      9
      23      9
      24      12
      25      12
      26      12
      27      12
      28      12
      2f      12
      30      12
      31      13
      32      13
      33      13
      34      13
      35      13
      36      13
      37      15
      38      15
      39      15
      3a      15
      3b      15
      42      15
      43      15
      44      15
      45      15
      46      15
      47      15
      48      15
      4a      15
   }

   method 'testMulti2 (Ljava/lang/Object;Ljava/lang/Object;)I' {
      0      20
      1      20
      2      21
      3      21
      4      21
      5      21
      6      21
      d      21
      e      21
      10      22
      11      22
      12      22
      13      22
      14      22
      16      22
      17      25
      18      25
      19      25
      1a      25
      1b      25
      22      25
      23      25
      25      26
      26      26
      27      26
      28      26
      29      26
      2b      26
      2c      29
      2d      29
   }

   method 'testMultiDifferent (Ljava/lang/Object;Ljava/lang/Object;)I' {
      0      33
      1      33
      2      33
      3      33
      4      33
      b      33
      c      33
      d      33
      e      33
      f      33
      10      33
      17      33
      18      33
      19      34
      1a      34
      1b      34
      1c      34
      1d      34
      1e      34
      1f      34
      20      34
      21      34
      22      34
      23      34
      24      37
      25      37
   }

   method 'testDeMorgan (Ljava/lang/Object;)V' {
      0      41
      1      41
      2      41
      3      41
      4      41
      b      41
      c      41
      d      41
      e      41
      f      41
      10      41
      11      41
      14      41
      15      41
      16      41
      17      41
      18      41
      19      41
      1a      41
      1d      46
      1e      46
      1f      46
      20      46
      21      46
      22      46
      23      46
      24      46
      28      42
      29      42
      2a      42
      2b      42
      2c      42
      2f      43
   }
}

Lines mapping:
5 <-> 5
6 <-> 5
9 <-> 5
13 <-> 9
14 <-> 10
15 <-> 13
16 <-> 14
17 <-> 16
18 <-> 16
21 <-> 16
25 <-> 21
26 <-> 22
27 <-> 23
29 <-> 26
30 <-> 27
33 <-> 30
37 <-> 34
38 <-> 35
41 <-> 38
45 <-> 42
46 <-> 47
48 <-> 43
50 <-> 44
