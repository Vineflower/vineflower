package pkg;

public class TestAssignmentInDoWhile {
   public void testPP() {
      int x = 3;// 5

      while (x < 50 && x++ < 100) {// 7 12
      }

      System.out.println("Hi");// 13
   }// 14

   public void testPE() {
      int x = 3;// 17

      while (x < 50) {// 19
         x += 2;// 24
         if (x >= 100) {
            break;
         }
      }

      System.out.println("Hi");// 25
   }// 26

   public void testPEArray() {
      int[] array = new int[100];// 29
      int x = 3;// 31

      while (x < 50 && (x = x + array[x]) < 100) {// 33 38
      }

      System.out.println("Hi");// 39
   }// 40

   public void testPEArrayBitMask() {
      int[] array = new int[100];// 43
      int x = 3;// 45

      while (x < 50 && (x = x + (array[x] & 7)) < 100) {// 47 52
      }

      System.out.println("Hi");// 53
   }// 54

   public void testPEArrayAnd() {
      int[] array = new int[100];// 57
      int x = 3;// 59

      while (x < 50 && (x = x + array[x]) < 100 && x > 10) {// 61 66
      }

      System.out.println("Hi");// 67
   }// 68

   public void testPEArrayOr() {
      int[] array = new int[100];// 71
      int x = 3;// 73

      while (x < 50 && ((x = x + array[x]) < 100 || x > 10)) {// 75 80
      }

      System.out.println("Hi");// 81
   }// 82
}

class 'pkg/TestAssignmentInDoWhile' {
   method 'testPP ()V' {
      0      4
      1      4
      2      6
      3      6
      4      6
      5      6
      9      6
      a      6
      b      6
      c      6
      d      6
      e      6
      11      9
      12      9
      13      9
      14      9
      15      9
      16      9
      17      9
      18      9
      19      10
   }

   method 'testPE ()V' {
      0      13
      1      13
      2      15
      3      15
      4      15
      5      15
      8      16
      9      16
      a      16
      b      17
      c      17
      d      17
      e      17
      11      22
      12      22
      13      22
      14      22
      15      22
      16      22
      17      22
      18      22
      19      23
   }

   method 'testPEArray ()V' {
      0      26
      1      26
      4      26
      5      27
      6      27
      7      29
      8      29
      9      29
      a      29
      d      29
      e      29
      f      29
      10      29
      11      29
      13      29
      14      29
      15      29
      16      29
      19      32
      1a      32
      1b      32
      1c      32
      1d      32
      1e      32
      1f      32
      20      32
      21      33
   }

   method 'testPEArrayBitMask ()V' {
      0      36
      1      36
      4      36
      5      37
      6      37
      7      39
      8      39
      9      39
      a      39
      d      39
      e      39
      f      39
      10      39
      11      39
      12      39
      13      39
      14      39
      16      39
      17      39
      18      39
      19      39
      1c      42
      1d      42
      1e      42
      1f      42
      20      42
      21      42
      22      42
      23      42
      24      43
   }

   method 'testPEArrayAnd ()V' {
      0      46
      1      46
      4      46
      5      47
      6      47
      7      49
      8      49
      9      49
      a      49
      d      49
      e      49
      f      49
      10      49
      11      49
      13      49
      14      49
      15      49
      16      49
      19      49
      1a      49
      1b      49
      1c      49
      1f      52
      20      52
      21      52
      22      52
      23      52
      24      52
      25      52
      26      52
      27      53
   }

   method 'testPEArrayOr ()V' {
      0      56
      1      56
      4      56
      5      57
      6      57
      7      59
      8      59
      9      59
      a      59
      d      59
      e      59
      f      59
      10      59
      11      59
      13      59
      14      59
      15      59
      16      59
      19      59
      1a      59
      1b      59
      1c      59
      1f      62
      20      62
      21      62
      22      62
      23      62
      24      62
      25      62
      26      62
      27      63
   }
}

Lines mapping:
5 <-> 5
7 <-> 7
12 <-> 7
13 <-> 10
14 <-> 11
17 <-> 14
19 <-> 16
24 <-> 17
25 <-> 23
26 <-> 24
29 <-> 27
31 <-> 28
33 <-> 30
38 <-> 30
39 <-> 33
40 <-> 34
43 <-> 37
45 <-> 38
47 <-> 40
52 <-> 40
53 <-> 43
54 <-> 44
57 <-> 47
59 <-> 48
61 <-> 50
66 <-> 50
67 <-> 53
68 <-> 54
71 <-> 57
73 <-> 58
75 <-> 60
80 <-> 60
81 <-> 63
82 <-> 64
