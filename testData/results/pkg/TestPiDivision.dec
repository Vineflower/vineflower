package pkg;

public class TestPiDivision {
   public double div(double val) {
      return val / (180.0 / Math.PI);// 5
   }

   public float mul(float f) {
      return f * (float) (Math.PI / 180.0);// 9
   }

   public float mul2(float f) {
      return f * (180.0F / (float)Math.PI);// 13
   }

   public float mul2_ok(float f) {
      return f * 180.0F / (float) Math.PI;// 17
   }

   public double mul3(double val) {
      return val * (180.0 / Math.PI);// 21
   }

   public double mul3_ok(double val) {
      return val * 180.0 / Math.PI;// 25
   }

   public boolean isInf(double d) {
      return d == Double.POSITIVE_INFINITY;// 29
   }
}

class 'pkg/TestPiDivision' {
   method 'div (D)D' {
      0      4
      1      4
      2      4
      3      4
      4      4
      5      4
   }

   method 'mul (F)F' {
      0      8
      1      8
      2      8
      3      8
      4      8
   }

   method 'mul2 (F)F' {
      0      12
      1      12
      2      12
      3      12
      4      12
   }

   method 'mul2_ok (F)F' {
      0      16
      1      16
      2      16
      3      16
      4      16
      5      16
      6      16
      7      16
   }

   method 'mul3 (D)D' {
      0      20
      1      20
      2      20
      3      20
      4      20
      5      20
   }

   method 'mul3_ok (D)D' {
      0      24
      1      24
      2      24
      3      24
      4      24
      5      24
      6      24
      7      24
      8      24
      9      24
   }

   method 'isInf (D)Z' {
      0      28
      1      28
      2      28
      3      28
      4      28
      5      28
      d      28
   }
}

Lines mapping:
5 <-> 5
9 <-> 9
13 <-> 13
17 <-> 17
21 <-> 21
25 <-> 25
29 <-> 29
