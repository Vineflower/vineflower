package pkg;

import java.io.IOException;

public class TestDefiniteAssignment {
   void testExample16$1$$1(int v) throws IOException {
      int k;
      if (v > 0 && (k = System.in.read()) >= 0) {// 8
         System.out.println(k);// 9
      }
   }// 10

   void testExample16$1$$2(int n) {
      while (n < 5) {// 16 17
         n = 6;// 18
      }

      System.out.println(n);// 20
   }// 22

   void testExample16$1$$3modified(int n, int m) {
      int k;
      while (true) {
         if (n >= 4) {// 26
            k = m;
            if (m >= 5) {
               break;
            }
         }

         k = n;// 27
         if (n >= 5) {// 28
            break;
         }

         n = 6;// 29
      }

      System.out.println(k);// 31
   }// 32

   void testAssignments(int n, boolean bool) {
      if (bool) {// 36
         int a = n;
         if (n > 0 || (a = -n) > 100) {
            System.out.println(a);// 37
         }
      }

      int b;
      if (!bool && (b = n * n) <= 0) {// 41
         System.out.println(b);// 44
      } else {
         System.out.println("b");// 42
      }

      double cFake = 0.01;// 48
      System.out.println(cFake);// 49
      if (n < 1.0 - n && (cFake = n + 5) > cFake * cFake - cFake / 2.0 ? !(n > cFake) : !(n < 5.0 - (cFake = n))) {// 53
         cFake += 5.0;// 57
      } else {
         System.out.println(cFake);// 54
         cFake += 2.0;// 55
      }

      System.out.println(cFake);// 59
      double d;
      if ((d = n) > 0.0) {// 63
         System.out.println(d);// 64
      }
   }// 67

   void testBooleanNormalness(int n) {
      int p = n * 2;// 71
      int k;
      if (n < 5 && (k = n + 5) > 0 && (p /= k) != 0) {// 72
         System.out.println("hi");// 73
      }

      p += 8;// 75
      System.out.println(p);// 76
   }// 77

   void testBooleanNormalnessInline(int n) {
      int p = n * 2;// 81
      int k;
      Boolean.valueOf(n < 5 && (k = n + 5) > 0 && (p /= k) != 0);// 82
      p += 8;// 83
      System.out.println(p);// 84
   }// 85

   void nestedTernaries(int a, int b, int c) {
      label47: {
         int x;
         if (a > 0) {// 89
            if (c >= b) {
               break label47;
            }

            x = b;
            if (b <= 0) {
               break label47;
            }
         } else {
            x = c;
            if (c >= 0 && c != b) {
               break label47;
            }
         }

         System.out.println(x);// 90
      }

      int y;
      label38: {
         int z;
         label37: {
            label50: {
               if (a > 0) {// 94
                  if (c >= b) {
                     break label50;
                  }

                  y = b;
                  if (b <= 0) {
                     break label50;
                  }
               } else {
                  y = c;
                  if (c >= 0 && c != b) {
                     break label50;
                  }
               }

               if (1 <= b - c || (z = b - c) == a) {
                  break label38;
               }
               break label37;
            }

            y = 5;
            z = a;
            if (5 == a) {
               break label38;
            }
         }

         System.out.println(z);// 97
      }

      System.out.println(y);// 99
   }// 100
}

class 'pkg/TestDefiniteAssignment' {
   method 'testExample16$1$$1 (I)V' {
      0      7
      1      7
      4      7
      5      7
      6      7
      7      7
      8      7
      9      7
      b      7
      c      7
      f      8
      10      8
      11      8
      12      8
      13      8
      16      10
   }

   method 'testExample16$1$$2 (I)V' {
      0      13
      2      13
      3      13
      4      13
      a      14
      b      14
      c      14
      10      17
      11      17
      12      17
      13      17
      14      17
      15      17
      16      17
      17      18
   }

   method 'testExample16$1$$3modified (II)V' {
      0      23
      1      23
      2      23
      5      24
      7      24
      8      25
      9      25
      c      30
      d      30
      e      31
      f      31
      10      31
      16      35
      17      35
      18      35
      1c      38
      1d      38
      1e      38
      1f      38
      20      38
      21      38
      22      38
      23      39
   }

   method 'testAssignments (IZ)V' {
      0      42
      1      42
      4      43
      6      43
      7      44
      a      44
      b      44
      d      44
      e      44
      f      44
      10      44
      13      45
      14      45
      15      45
      16      45
      17      45
      1a      50
      1b      50
      1e      50
      22      50
      23      50
      24      50
      26      50
      27      50
      28      50
      2b      53
      2c      53
      2d      53
      2e      53
      2f      53
      30      53
      31      53
      32      53
      36      51
      37      51
      38      51
      39      51
      3a      51
      3b      51
      3e      56
      3f      56
      40      56
      41      56
      42      56
      43      57
      44      57
      45      57
      46      57
      47      57
      48      57
      49      57
      4a      57
      4b      58
      4c      58
      4d      58
      4e      58
      4f      58
      50      58
      51      58
      52      58
      55      58
      56      58
      57      58
      58      58
      5a      58
      5b      58
      5c      58
      5d      58
      5e      58
      5f      58
      60      58
      61      58
      62      58
      63      58
      64      58
      65      58
      66      58
      67      58
      68      58
      69      58
      6c      58
      6d      58
      6e      58
      6f      58
      70      58
      71      58
      72      58
      74      58
      75      58
      76      58
      77      58
      78      58
      7e      58
      7f      58
      80      58
      81      58
      82      58
      83      58
      86      61
      87      61
      88      61
      89      61
      8a      61
      8b      61
      8c      61
      8d      61
      90      62
      91      62
      92      62
      94      62
      95      62
      9b      59
      9c      59
      9d      59
      9f      59
      a0      59
      a1      65
      a2      65
      a3      65
      a4      65
      a5      65
      a6      65
      a7      65
      a8      65
      a9      67
      aa      67
      ac      67
      ad      67
      ae      67
      af      67
      b0      67
      bb      67
      be      68
      bf      68
      c0      68
      c1      68
      c2      68
      c3      68
      c6      70
   }

   method 'testBooleanNormalness (I)V' {
      0      73
      1      73
      2      73
      3      73
      4      75
      5      75
      6      75
      9      75
      a      75
      b      75
      d      75
      e      75
      12      75
      15      75
      16      75
      19      76
      1a      76
      1b      76
      1c      76
      1d      76
      1e      76
      21      79
      22      79
      23      79
      24      80
      25      80
      26      80
      27      80
      28      80
      29      80
      2a      80
      2b      81
   }

   method 'testBooleanNormalnessInline (I)V' {
      0      84
      1      84
      2      84
      3      84
      4      86
      5      86
      6      86
      9      86
      a      86
      b      86
      d      86
      e      86
      12      86
      15      86
      16      86
      1e      86
      1f      86
      20      86
      22      87
      23      87
      24      87
      25      88
      26      88
      27      88
      28      88
      29      88
      2a      88
      2b      88
      2c      89
   }

   method 'nestedTernaries (III)V' {
      0      94
      1      94
      4      95
      5      95
      6      95
      9      99
      b      99
      c      99
      d      100
      13      104
      15      104
      16      104
      17      105
      1a      105
      1b      105
      1c      105
      1f      110
      20      110
      21      110
      22      110
      23      110
      24      110
      27      118
      28      118
      2b      119
      2c      119
      2d      119
      30      123
      32      123
      33      123
      34      124
      3a      128
      3c      128
      3d      128
      3e      129
      41      129
      42      129
      43      129
      46      134
      47      134
      48      134
      49      134
      4a      134
      4d      134
      4e      134
      4f      134
      51      134
      52      134
      53      134
      54      134
      5a      140
      5c      140
      5d      140
      5e      141
      60      141
      61      141
      62      142
      65      147
      66      147
      67      147
      68      147
      69      147
      6a      147
      6d      150
      6e      150
      6f      150
      70      150
      71      150
      72      150
      73      150
      74      150
      75      151
   }
}

Lines mapping:
8 <-> 8
9 <-> 9
10 <-> 11
16 <-> 14
17 <-> 14
18 <-> 15
20 <-> 18
22 <-> 19
26 <-> 24
27 <-> 31
28 <-> 32
29 <-> 36
31 <-> 39
32 <-> 40
36 <-> 43
37 <-> 46
41 <-> 51
42 <-> 54
44 <-> 52
48 <-> 57
49 <-> 58
53 <-> 59
54 <-> 62
55 <-> 63
57 <-> 60
59 <-> 66
63 <-> 68
64 <-> 69
67 <-> 71
71 <-> 74
72 <-> 76
73 <-> 77
75 <-> 80
76 <-> 81
77 <-> 82
81 <-> 85
82 <-> 87
83 <-> 88
84 <-> 89
85 <-> 90
89 <-> 95
90 <-> 111
94 <-> 119
97 <-> 148
99 <-> 151
100 <-> 152
