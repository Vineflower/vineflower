package pkg;

public class TestBinaryOperationWrapping {
   public void testStringConcatenation(String longVariableName) {
      System.out// 5
         .println(
            "This is a very very very very very very very very very very very very very very very long string"
               + longVariableName
               + longVariableName
               + longVariableName
               + longVariableName
               + longVariableName
         );
   }// 9

   public void testBooleanOperation(
      boolean a,
      boolean b,
      boolean c,
      boolean d,
      boolean e,
      boolean f,
      boolean g,
      boolean h,
      boolean i,
      boolean j,
      boolean k,
      boolean l,
      boolean m,
      boolean n,
      boolean o,
      boolean p,
      boolean q,
      boolean r,
      boolean s,
      boolean t,
      boolean u,
      boolean v,
      boolean w,
      boolean x,
      boolean y,
      boolean z,
      boolean a1,
      boolean b1,
      boolean c1,
      boolean d1
   ) {
      System.out// 12
         .println(
            a && b
               || c && d
               || e && f
               || g && h
               || i && j
               || k && l
               || m && n
               || o && p
               || q && r
               || s && t
               || u && v
               || w && x
               || y && z
               || a1 && b1
               || c1 && d1
         );
   }// 13
}

class 'pkg/TestBinaryOperationWrapping' {
   method 'testStringConcatenation (Ljava/lang/String;)V' {
      0      4
      1      4
      2      4
      a      6
      b      6
      f      7
      13      8
      17      9
      1b      10
      1f      11
      23      6
      24      6
      25      6
      26      5
      27      5
      28      5
      29      13
   }

   method 'testBooleanOperation (ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ)V' {
      0      47
      1      47
      2      47
      3      49
      4      49
      7      49
      8      49
      b      50
      c      49
      f      50
      10      50
      11      49
      14      51
      15      51
      16      49
      19      51
      1a      51
      1b      49
      1e      52
      1f      52
      20      49
      23      52
      24      52
      25      49
      28      53
      29      53
      2a      49
      2d      53
      2e      53
      2f      49
      32      54
      33      54
      34      49
      37      54
      38      54
      39      49
      3c      55
      3d      55
      3e      49
      41      55
      42      55
      43      49
      46      56
      47      56
      48      49
      4b      56
      4c      56
      4d      49
      50      57
      51      57
      52      49
      55      57
      56      57
      57      49
      5a      58
      5b      58
      5c      49
      5f      58
      60      58
      61      49
      64      59
      65      59
      66      49
      69      59
      6a      59
      6b      49
      6e      60
      6f      60
      70      49
      73      60
      74      60
      75      49
      78      61
      79      61
      7a      49
      7d      61
      7e      61
      7f      49
      82      62
      83      62
      84      49
      87      62
      88      62
      89      49
      8c      63
      8d      63
      8e      49
      91      63
      92      63
      93      49
      9b      48
      9c      48
      9d      48
      9e      65
   }
}

Lines mapping:
5 <-> 5
9 <-> 14
12 <-> 48
13 <-> 66
