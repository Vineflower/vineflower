package pkg;

import kotlin.Metadata;
import kotlin.ResultKt;
import kotlin.Unit;
import kotlin.coroutines.Continuation;
import kotlin.coroutines.intrinsics.IntrinsicsKt;
import kotlin.coroutines.jvm.internal.DebugMetadata;
import kotlin.coroutines.jvm.internal.SuspendLambda;
import kotlin.jvm.functions.Function1;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

@Metadata(
   mv = {1, 6, 0},
   k = 2,
   xi = 48,
   d1 = {"\u0000\u0016\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0010\u0002\n\u0002\u0010\u0000\n\u0002\b\u0004\",\u0010\u0000\u001a\u0018\b\u0001\u0012\n\u0012\b\u0012\u0004\u0012\u00020\u00030\u0002\u0012\u0006\u0012\u0004\u0018\u00010\u00040\u0001ø\u0001\u0000¢\u0006\n\n\u0002\u0010\u0007\u001a\u0004\b\u0005\u0010\u0006\u0082\u0002\u0004\n\u0002\b\u0019¨\u0006\b"},
   d2 = {"sl1", "Lkotlin/Function1;", "Lkotlin/coroutines/Continuation;", "", "", "getSl1", "()Lkotlin/jvm/functions/Function1;", "Lkotlin/jvm/functions/Function1;", "quiltflower_testDataKotlin"}
)
public final class TestSuspendLambdaKt {
   @NotNull
   private static final Function1<Continuation<? super Unit>, Object> sl1 = new NamelessClass_1(null);

   @NotNull
   public static final Function1<Continuation<? super Unit>, Object> getSl1() {
      return sl1;
   }

   static {
      @DebugMetadata(
         f = "TestSuspendLambda.kt",
         l = {},
         i = {},
         s = {},
         n = {},
         m = "invokeSuspend",
         c = "pkg.TestSuspendLambdaKt$sl1$1"
      )
      @Metadata(
         mv = {1, 6, 0},
         k = 3,
         xi = 48,
         d1 = {"\u0000\u0006\n\u0000\n\u0002\u0010\u0002\u0010\u0000\u001a\u00020\u0001H\u008a@"},
         d2 = {"<anonymous>", ""}
      )
      final class NamelessClass_1 extends SuspendLambda implements Function1<Continuation<? super Unit>, Object> {
         int label;

         NamelessClass_1(Continuation<? super NamelessClass_1> $completion) {
            super(1, $completion);
         }

         @Nullable
         public final Object invokeSuspend(@NotNull Object $result) {
            IntrinsicsKt.getCOROUTINE_SUSPENDED();
            switch(this.label) {
               case 0:
                  ResultKt.throwOnFailure($result);
                  System.out.println("SL1");// 4
                  return Unit.INSTANCE;// 5
               default:
                  throw new IllegalStateException("call to 'resume' before 'invoke' with coroutine");
            }
         }

         @NotNull
         public final Continuation<Unit> create(@NotNull Continuation<?> $completion) {
            return (Continuation<Unit>)(new NamelessClass_1($completion));
         }

         @Nullable
         public final Object invoke(@Nullable Continuation<? super Unit> p1) {
            return ((NamelessClass_1)this.create(p1)).invokeSuspend(Unit.INSTANCE);
         }
      }

   }// 3
}

class 'pkg/TestSuspendLambdaKt' {
   method 'getSl1 ()Lkotlin/jvm/functions/Function1;' {
      0      26
      1      26
      2      26
      3      26
   }

   method '<clinit> ()V' {
      e      77
   }
}

class 'pkg/TestSuspendLambdaKt$sl1$1' {
   method '<init> (Lkotlin/coroutines/Continuation;)V' {
      1      50
      2      50
      3      50
      4      50
      5      50
      6      51
   }

   method 'invokeSuspend (Ljava/lang/Object;)Ljava/lang/Object;' {
      0      55
      1      55
      2      55
      4      56
      5      56
      6      56
      7      56
      8      56
      1c      58
      1d      58
      1e      58
      1f      58
      20      59
      21      59
      22      59
      23      59
      24      59
      26      59
      27      59
      28      59
      29      60
      2a      60
      2b      60
      2c      60
      31      62
      32      62
      36      62
   }

   method 'create (Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;' {
      4      68
      8      68
      9      68
      a      68
      b      68
   }

   method 'invoke (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;' {
      0      73
      1      73
      2      73
      3      73
      4      73
      5      73
      6      73
      7      73
      8      73
      9      73
      a      73
      b      73
      c      73
      d      73
      e      73
   }
}

Lines mapping:
3 <-> 78
4 <-> 60
5 <-> 61
