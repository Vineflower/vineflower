package pkg;

import java.util.Objects;

public class TestSwitchPatternMatching22 {
   public void test1() {
      try {
         System.out.println("hello");// 13
      } catch (Exception var8) {// 14
         Object var10000 = new Object();
         Objects.requireNonNull(var10000);// 15
         Object var2 = var10000;
         switch (var2) {
            case Short var4:// 19
               break;
            default:
               System.out.println("Not a short");// 17
               throw new RuntimeException();// 18
         }
      } finally {
         System.out.println("world");// 22
      }
   }// 24

   public void test2() {
      try {
         System.out.println("hello");// 28
      } catch (Exception var8) {// 29
         Object var10000 = new Object();
         Objects.requireNonNull(var10000);// 30
         Object var2 = var10000;
         switch (var2) {
            case Short var4:// 34
            default:
               System.out.println("Not a short");// 32
               throw new RuntimeException();// 33
         }
      } finally {
         throw new RuntimeException();// 37
      }
   }

   public void test1Null() {
      try {
         System.out.println("hello");// 43
      } catch (Exception var8) {// 44
         Object var2 = new Object();// 45
         switch (var2) {
            case Short var4:// 50
            case null:
               break;
            default:
               System.out.println("Not a short");// 47
               throw new RuntimeException();// 48
         }
      } finally {
         System.out.println("world");// 53
      }
   }// 55

   public void test2Null() {
      try {
         System.out.println("hello");// 59
      } catch (Exception var8) {// 60
         Object var2 = new Object();
         switch (var2) {// 61
            case Short var4:// 66
            case null:
            default:
               System.out.println("Not a short");// 63
               throw new RuntimeException();// 64
         }
      } finally {
         throw new RuntimeException();// 69
      }
   }

   public void testNonPattern() {
      try {
         System.out.println("hello");// 75
      } catch (Exception var5) {// 76
         switch (0) {// 77
            case -1:
            case 10:
            default:
               System.out.println("Not a short");// 79
               throw new RuntimeException();// 80
         }
      } finally {
         throw new RuntimeException();// 85
      }
   }
}

class 'pkg/TestSwitchPatternMatching22' {
   method 'test1 ()V' {
      0      7
      1      7
      2      7
      3      7
      4      7
      5      7
      13      8
      1c      10
      1d      10
      1e      10
      20      11
      23      12
      2a      12
      3c      16
      3d      16
      3e      16
      3f      16
      40      16
      41      16
      42      16
      43      16
      4b      17
      50      13
      51      13
      5f      20
      60      20
      61      20
      62      20
      63      20
      64      20
      6a      22
   }

   method 'test2 ()V' {
      0      26
      1      26
      2      26
      3      26
      4      26
      5      26
      10      27
      19      29
      1a      29
      1b      29
      1d      30
      20      31
      27      31
      38      34
      39      34
      3a      34
      3b      34
      3c      34
      3d      34
      3e      34
      3f      34
      47      35
      4c      32
      4d      32
      5f      38
   }

   method 'test1Null ()V' {
      0      44
      1      44
      2      44
      3      44
      4      44
      5      44
      13      45
      1b      46
      1e      47
      25      47
      40      52
      41      52
      42      52
      43      52
      44      52
      45      52
      46      52
      47      52
      4f      53
      54      48
      55      48
      63      56
      64      56
      65      56
      66      56
      67      56
      68      56
      6e      58
   }

   method 'test2Null ()V' {
      0      62
      1      62
      2      62
      3      62
      4      62
      5      62
      10      63
      18      64
      1b      65
      22      65
      3c      69
      3d      69
      3e      69
      3f      69
      40      69
      41      69
      42      69
      43      69
      4b      70
      50      66
      51      66
      63      73
   }

   method 'testNonPattern ()V' {
      0      79
      1      79
      2      79
      3      79
      4      79
      5      79
      10      80
      11      81
      12      81
      2c      85
      2d      85
      2e      85
      2f      85
      30      85
      31      85
      32      85
      33      85
      3b      86
      4c      89
   }
}

Lines mapping:
13 <-> 8
14 <-> 9
15 <-> 11
17 <-> 17
18 <-> 18
19 <-> 14
22 <-> 21
24 <-> 23
28 <-> 27
29 <-> 28
30 <-> 30
32 <-> 35
33 <-> 36
34 <-> 33
37 <-> 39
43 <-> 45
44 <-> 46
45 <-> 47
47 <-> 53
48 <-> 54
50 <-> 49
53 <-> 57
55 <-> 59
59 <-> 63
60 <-> 64
61 <-> 66
63 <-> 70
64 <-> 71
66 <-> 67
69 <-> 74
75 <-> 80
76 <-> 81
77 <-> 82
79 <-> 86
80 <-> 87
85 <-> 90
Not mapped:
23
54