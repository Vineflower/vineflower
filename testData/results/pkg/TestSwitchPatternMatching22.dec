package pkg;

public class TestSwitchPatternMatching22 {
   public void test1() {
      try {
         System.out.println("hello");// 13
      } catch (Exception var8) {// 14
         switch (new Object()) {// 15
            case Short var4:// 19
               break;
            default:
               System.out.println("Not a short");// 17
               throw new RuntimeException();// 18
         }
      } finally {
         System.out.println("world");// 22
      }
   }// 24

   public void test2() {
      try {
         System.out.println("hello");// 28
      } catch (Exception var8) {// 29
         switch (new Object()) {// 30
            case Short var4:// 34
            default:
               System.out.println("Not a short");// 32
               throw new RuntimeException();// 33
         }
      } finally {
         throw new RuntimeException();// 37
      }
   }

   public void test1Null() {
      try {
         System.out.println("hello");// 43
      } catch (Exception var8) {// 44
         switch (new Object()) {// 45
            case Short var4:// 50
            case null:
               break;
            default:
               System.out.println("Not a short");// 47
               throw new RuntimeException();// 48
         }
      } finally {
         System.out.println("world");// 53
      }
   }// 55

   public void test2Null() {
      try {
         System.out.println("hello");// 59
      } catch (Exception var8) {// 60
         switch (new Object()) {// 61
            case Short var4:// 66
            case null:
            default:
               System.out.println("Not a short");// 63
               throw new RuntimeException();// 64
         }
      } finally {
         throw new RuntimeException();// 69
      }
   }

   public void testNonPattern() {
      try {
         System.out.println("hello");// 75
      } catch (Exception var5) {// 76
         switch (0) {// 77
            case -1:
            case 10:
            default:
               System.out.println("Not a short");// 79
               throw new RuntimeException();// 80
         }
      } finally {
         throw new RuntimeException();// 85
      }
   }
}

class 'pkg/TestSwitchPatternMatching22' {
   method 'test1 ()V' {
      0      5
      1      5
      2      5
      3      5
      4      5
      5      5
      6      5
      7      5
      13      6
      2a      7
      2b      7
      2c      7
      2d      7
      2e      7
      2f      7
      30      7
      31      7
      32      7
      33      7
      34      7
      35      7
      36      7
      37      7
      38      7
      39      7
      3a      7
      3b      7
      3c      11
      3d      11
      3e      11
      3f      11
      40      11
      41      11
      42      11
      43      11
      4b      12
      50      8
      51      8
      5f      15
      60      15
      61      15
      62      15
      63      15
      64      15
      65      15
      66      15
      6a      17
   }

   method 'test2 ()V' {
      0      21
      1      21
      2      21
      3      21
      4      21
      5      21
      6      21
      7      21
      10      22
      27      23
      28      23
      29      23
      2a      23
      2b      23
      2c      23
      2d      23
      2e      23
      2f      23
      30      23
      31      23
      32      23
      33      23
      34      23
      35      23
      36      23
      37      23
      38      26
      39      26
      3a      26
      3b      26
      3c      26
      3d      26
      3e      26
      3f      26
      47      27
      4c      24
      4d      24
      5f      30
   }

   method 'test1Null ()V' {
      0      36
      1      36
      2      36
      3      36
      4      36
      5      36
      6      36
      7      36
      13      37
      25      38
      26      38
      27      38
      28      38
      29      38
      2a      38
      2b      38
      2c      38
      2d      38
      2e      38
      2f      38
      30      38
      31      38
      32      38
      33      38
      34      38
      35      38
      36      38
      37      38
      38      38
      39      38
      3a      38
      3b      38
      3c      38
      3d      38
      3e      38
      3f      38
      40      43
      41      43
      42      43
      43      43
      44      43
      45      43
      46      43
      47      43
      4f      44
      54      39
      55      39
      63      47
      64      47
      65      47
      66      47
      67      47
      68      47
      69      47
      6a      47
      6e      49
   }

   method 'test2Null ()V' {
      0      53
      1      53
      2      53
      3      53
      4      53
      5      53
      6      53
      7      53
      10      54
      22      55
      23      55
      24      55
      25      55
      26      55
      27      55
      28      55
      29      55
      2a      55
      2b      55
      2c      55
      2d      55
      2e      55
      2f      55
      30      55
      31      55
      32      55
      33      55
      34      55
      35      55
      36      55
      37      55
      38      55
      39      55
      3a      55
      3b      55
      3c      59
      3d      59
      3e      59
      3f      59
      40      59
      41      59
      42      59
      43      59
      4b      60
      50      56
      51      56
      63      63
   }

   method 'testNonPattern ()V' {
      0      69
      1      69
      2      69
      3      69
      4      69
      5      69
      6      69
      7      69
      10      70
      11      71
      12      71
      13      71
      14      71
      15      71
      16      71
      17      71
      18      71
      19      71
      1a      71
      1b      71
      1c      71
      1d      71
      1e      71
      1f      71
      20      71
      21      71
      22      71
      23      71
      24      71
      25      71
      26      71
      27      71
      28      71
      29      71
      2a      71
      2b      71
      2c      75
      2d      75
      2e      75
      2f      75
      30      75
      31      75
      32      75
      33      75
      3b      76
      4c      79
   }
}

Lines mapping:
13 <-> 6
14 <-> 7
15 <-> 8
17 <-> 12
18 <-> 13
19 <-> 9
22 <-> 16
24 <-> 18
28 <-> 22
29 <-> 23
30 <-> 24
32 <-> 27
33 <-> 28
34 <-> 25
37 <-> 31
43 <-> 37
44 <-> 38
45 <-> 39
47 <-> 44
48 <-> 45
50 <-> 40
53 <-> 48
55 <-> 50
59 <-> 54
60 <-> 55
61 <-> 56
63 <-> 60
64 <-> 61
66 <-> 57
69 <-> 64
75 <-> 70
76 <-> 71
77 <-> 72
79 <-> 76
80 <-> 77
85 <-> 80
Not mapped:
23
54
