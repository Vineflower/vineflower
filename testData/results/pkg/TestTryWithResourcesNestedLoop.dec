package pkg;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;
import java.nio.file.Path;

public class TestTryWithResourcesNestedLoop {
   public static InputStream test(Path base, Path overlay, int width, int left, int top, int right, int bottom) throws IOException {
      try (
         InputStream lv = Files.newInputStream(base);// 11
         InputStream lv2 = Files.newInputStream(overlay);// 12
      ) {
         int n = lv.available();// 14
         int o = lv.read();// 15
         if (n == lv2.available() && o == lv2.read()) {// 17
            try (ByteArrayInputStream lv3 = new ByteArrayInputStream(new byte[0], n, o)) {// 18
               int p = n / width;// 19

               for (int q = top * p; q < bottom * p; q++) {// 20
                  for (int r = left * p; r < right * p; r++) {// 21
                     int s = lv2.read(new byte[0], r, q);// 22
                     int t = lv.read(new byte[0], r, q);// 23
                     lv3.read(new byte[0], r, q);// 25
                  }
               }

               return new ByteArrayInputStream(lv3.readAllBytes());// 29
            }
         }
      }

      return null;// 34
   }
}

class 'pkg/TestTryWithResourcesNestedLoop' {
   method 'test (Ljava/nio/file/Path;Ljava/nio/file/Path;IIIII)Ljava/io/InputStream;' {
      0      11
      5      11
      6      11
      7      11
      8      11
      9      11
      a      12
      f      12
      10      12
      11      12
      12      12
      13      12
      14      14
      15      14
      16      14
      17      14
      18      14
      19      14
      1a      14
      1b      15
      1c      15
      1d      15
      1e      15
      1f      15
      20      15
      21      15
      22      16
      23      16
      24      16
      25      16
      26      16
      27      16
      28      16
      29      16
      2c      16
      2d      16
      2e      16
      2f      16
      30      16
      31      16
      32      16
      33      16
      3a      17
      3d      17
      3e      17
      3f      17
      40      17
      44      17
      45      17
      46      18
      47      18
      48      18
      49      18
      4a      18
      4b      18
      4c      20
      4d      20
      4e      20
      4f      20
      50      20
      51      20
      52      20
      53      20
      54      20
      55      20
      56      20
      57      20
      58      20
      59      20
      5a      20
      5d      21
      5e      21
      5f      21
      60      21
      61      21
      62      21
      63      21
      64      21
      65      21
      66      21
      67      21
      68      21
      69      21
      6a      21
      6d      22
      6e      22
      6f      22
      72      22
      73      22
      74      22
      75      22
      76      22
      77      22
      78      22
      79      22
      7a      22
      7b      23
      7c      23
      7d      23
      80      23
      81      23
      82      23
      83      23
      84      23
      85      23
      86      23
      87      23
      88      23
      89      24
      8a      24
      8b      24
      8e      24
      8f      24
      90      24
      91      24
      92      24
      93      24
      94      24
      96      21
      97      21
      98      21
      9c      20
      9d      20
      9e      20
      a6      28
      a7      28
      a8      28
      a9      28
      aa      28
      cb      28
      132      33
      133      33
   }
}

Lines mapping:
11 <-> 12
12 <-> 13
14 <-> 15
15 <-> 16
17 <-> 17
18 <-> 18
19 <-> 19
20 <-> 21
21 <-> 22
22 <-> 23
23 <-> 24
25 <-> 25
29 <-> 29
34 <-> 34
Not mapped:
30
32
