package pkg;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import kotlin.Metadata;
import kotlin.collections.CollectionsKt;

@Metadata(
   mv = {1, 6, 0},
   k = 2,
   xi = 48,
   d1 = {"\u0000\u0016\n\u0000\n\u0002\u0010 \n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u001e\n\u0002\u0010\u000e\n\u0000\u001a\u001e\u0010\u0000\u001a\b\u0012\u0004\u0012\u00020\u00020\u00012\u000e\u0010\u0003\u001a\n\u0012\u0006\u0012\u0004\u0018\u00010\u00050\u0004H\u0002Â¨\u0006\u0006"},
   d2 = {"foo", "", "Lpkg/Mapping;", "list", "", "", "quiltflower_testDataKotlin"}
)
public final class TestKotlinConstructorKt {
   private static final List<Mapping> foo(Collection<String> list) {
      Iterable $this$map$iv = list;
      int $i$f$map = 0;
      Collection destination$iv$iv = new ArrayList(CollectionsKt.collectionSizeOrDefault($this$map$iv, 10));
      int $i$f$mapTo = 0;

      for(Object item$iv$iv : $this$map$iv) {// 12 13
         String it = (String)item$iv$iv;
         int $i$a$-map-TestKotlinConstructorKt$foo$1 = 0;
         Mapping var10000 = new Mapping;
         if (it == null) {// 5
            throw new NullPointerException("null cannot be cast to non-null type kotlin.String");
         }

         var10000./* $QF: Unable to resugar constructor */<init>(it);
         destination$iv$iv.add(var10000);// 14
      }

      return CollectionsKt.toList((List)destination$iv$iv);// 4 6 15
   }
}

class 'pkg/TestKotlinConstructorKt' {
   method 'foo (Ljava/util/Collection;)Ljava/util/List;' {
      0      17
      1      17
      2      17
      3      17
      4      17
      5      18
      6      18
      7      22
      d      19
      e      19
      f      19
      10      19
      11      19
      12      19
      16      19
      17      19
      18      19
      19      19
      1a      19
      1b      20
      1c      20
      1d      20
      1e      22
      1f      22
      20      22
      21      22
      22      22
      23      22
      24      22
      25      22
      30      22
      31      22
      32      22
      33      22
      34      22
      35      22
      36      22
      37      22
      38      22
      39      31
      3a      31
      3b      23
      3c      23
      3d      23
      3e      23
      3f      23
      40      23
      41      23
      44      24
      45      24
      46      24
      4b      26
      4c      26
      4e      26
      56      27
      57      27
      5b      27
      5c      30
      5d      30
      5e      30
      5f      31
      60      31
      62      31
      63      31
      64      31
      65      31
      66      31
      6b      34
      6c      34
      6d      34
      6e      34
      6f      34
      71      34
      72      34
      73      34
      74      34
      75      34
      76      34
      77      34
   }
}

Lines mapping:
4 <-> 35
5 <-> 27
6 <-> 35
12 <-> 23
13 <-> 23
14 <-> 32
15 <-> 35
