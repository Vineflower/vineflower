package pkg;

import java.lang.runtime.SwitchBootstraps;

public class TestRecordPattern1 {
   void test(Object o) {
      if (o instanceof TestRecordPattern1.Point) {
         int var4 = $proxy$a((TestRecordPattern1.Point)o);// 1
         int a = Integer.valueOf(var4);// 8
         var4 = $proxy$b((TestRecordPattern1.Point)o);
         int b = Integer.valueOf(var4);
         System.out.println(a + b);// 9
      }
   }// 11

   void test2(Object o) {
      switch(o) {// 14
         case null:
            System.out.println("null");// 16
            break;
         case TestRecordPattern1.Point var8:
            int obj = $proxy$a((TestRecordPattern1.Point)o);
            int a = Integer.valueOf(obj);// 15
            obj = $proxy$b((TestRecordPattern1.Point)o);
            int b = Integer.valueOf(obj);
            System.out.println(a + b);
            break;
         default:
            System.out.println("everything else");// 17
      }
   }// 19

   int test3(Object o) {
      Object var2 = o;
      byte var3 = 0;

      while(true) {
         int var10000;
         switch(SwitchBootstraps.typeSwitch<"typeSwitch",TestRecordPattern1.Point,TestRecordPattern1.Point,Object>(var2, var3)) {
            case -1:
               var10000 = -1;// 23
               break;
            case 0:
               int var8 = $proxy$a((TestRecordPattern1.Point)var2);
               int a = Integer.valueOf(var8);// 24
               var8 = $proxy$b((TestRecordPattern1.Point)var2);
               int b = Integer.valueOf(var8);
               if (a <= 0 || b <= 0) {
                  var3 = 1;
                  continue;
               }

               var10000 = a + b;// 26
               break;
            case 1:
               TestRecordPattern1.Point p = (TestRecordPattern1.Point)var2;// 27
               throw new IllegalArgumentException("Negative point not allowed");
            default:
               throw new IllegalArgumentException("Only points or null allowed");// 28
         }

         return var10000;// 22
      }
   }

   static record Point(int a, int b) {
   }
}

class 'pkg/TestRecordPattern1' {
   method 'test (Ljava/lang/Object;)V' {
      0      6
      1      6
      2      6
      3      6
      4      6
      7      7
      8      7
      9      7
      a      7
      b      7
      c      7
      d      7
      e      7
      f      7
      10      8
      11      8
      12      8
      13      8
      14      8
      15      8
      16      8
      17      8
      18      8
      19      9
      1a      9
      1b      9
      1c      9
      1d      9
      1e      9
      1f      9
      20      9
      21      9
      22      10
      23      10
      24      10
      25      10
      26      10
      27      10
      28      10
      29      10
      2a      10
      2b      11
      2c      11
      2d      11
      2e      11
      2f      11
      30      11
      31      11
      34      13
   }

   method 'test2 (Ljava/lang/Object;)V' {
      0      16
      4      16
      b      16
      24      21
      25      21
      26      21
      27      21
      28      21
      29      21
      2a      21
      2b      21
      2c      21
      2d      22
      2e      22
      2f      22
      30      22
      31      22
      32      22
      33      22
      34      22
      35      22
      36      22
      37      23
      38      23
      39      23
      3a      23
      3b      23
      3c      23
      3d      23
      3e      23
      3f      23
      40      24
      41      24
      42      24
      43      24
      44      24
      45      24
      46      24
      47      24
      48      24
      49      24
      4a      25
      4b      25
      4c      25
      4d      25
      4e      25
      4f      25
      50      25
      51      25
      52      25
      53      25
      54      25
      55      26
      58      18
      59      18
      5a      18
      5b      18
      5c      18
      5d      18
      5e      18
      5f      18
      60      19
      66      28
      67      28
      68      28
      69      28
      6a      28
      6b      28
      6e      30
   }

   method 'test3 (Ljava/lang/Object;)I' {
      0      33
      1      33
      2      34
      3      34
      4      38
      5      38
      6      38
      7      38
      8      38
      9      38
      a      38
      b      38
      24      40
      25      41
      28      43
      29      43
      2a      43
      2b      43
      2c      43
      2d      43
      2e      43
      2f      43
      30      43
      31      44
      32      44
      33      44
      34      44
      35      44
      36      44
      37      44
      38      44
      39      44
      3a      44
      3b      45
      3c      45
      3d      45
      3e      45
      3f      45
      40      45
      41      45
      42      45
      43      45
      44      46
      45      46
      46      46
      47      46
      48      46
      49      46
      4a      46
      4b      46
      4c      46
      4d      46
      4e      47
      4f      47
      50      47
      53      47
      54      47
      55      47
      58      48
      59      48
      5a      49
      5d      52
      5e      52
      5f      52
      60      52
      61      52
      62      53
      65      55
      66      55
      67      55
      68      55
      69      55
      6a      55
      6f      56
      70      56
      74      56
      7c      58
      7d      58
      81      58
      82      61
   }
}

Lines mapping:
1 <-> 8
8 <-> 9
9 <-> 12
11 <-> 14
14 <-> 17
15 <-> 23
16 <-> 19
17 <-> 29
19 <-> 31
22 <-> 62
23 <-> 41
24 <-> 45
26 <-> 53
27 <-> 56
28 <-> 59
