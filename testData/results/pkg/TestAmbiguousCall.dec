package pkg;

class TestAmbiguousCall {
   int field;
   long field2;

   void m1(RuntimeException e, String s) {
   }// 4

   void m1(IllegalArgumentException e, String s) {
   }// 5

   void test() {
      IllegalArgumentException iae = new IllegalArgumentException();// 8
      this.m1((RuntimeException)iae, "RE");// 9
      this.m1(iae, "IAE");// 10
      RuntimeException re = new IllegalArgumentException();// 12
      this.m1(re, "RE");// 13
      this.m1((IllegalArgumentException)re, "IAE");// 14
   }// 15

   void m2(int i) {
   }// 17

   void m2(long l) {
   }// 18

   void m2(String s) {
   }// 19

   <T extends Comparable<T>> void test2(T value) {
      if (value instanceof Integer) {// 22
         this.m2((Integer)value);// 23
      } else {
         this.m2(value.toString());// 25
      }
   }// 27

   void test3(Object value) {
      if (value instanceof Integer) {// 30
         this.m2((Integer)value);// 31
      } else {
         this.m2(value.toString());// 33
      }
   }// 35

   void test4() {
      this.m2(this.field++);// 40
      this.m2((long)(this.field++));// 41
      this.m2((int)(this.field2++));// 43
      this.m2(this.field2++);// 44
   }// 45
}

class 'pkg/TestAmbiguousCall' {
   method 'm1 (Ljava/lang/RuntimeException;Ljava/lang/String;)V' {
      0      7
   }

   method 'm1 (Ljava/lang/IllegalArgumentException;Ljava/lang/String;)V' {
      0      10
   }

   method 'test ()V' {
      7      13
      8      14
      9      14
      a      14
      b      14
      c      14
      d      14
      e      14
      f      15
      10      15
      11      15
      12      15
      13      15
      14      15
      15      15
      1d      16
      1e      17
      1f      17
      20      17
      21      17
      22      17
      23      17
      24      17
      25      18
      26      18
      27      18
      28      18
      29      18
      2a      18
      2b      18
      2c      18
      2d      18
      2e      18
      2f      19
   }

   method 'm2 (I)V' {
      0      22
   }

   method 'm2 (J)V' {
      0      25
   }

   method 'm2 (Ljava/lang/String;)V' {
      0      28
   }

   method 'test2 (Ljava/lang/Comparable;)V' {
      0      31
      1      31
      2      31
      3      31
      4      31
      7      32
      8      32
      9      32
      a      32
      b      32
      c      32
      d      32
      e      32
      f      32
      10      32
      11      32
      15      34
      16      34
      17      34
      18      34
      19      34
      1a      34
      1d      36
   }

   method 'test3 (Ljava/lang/Object;)V' {
      0      39
      1      39
      2      39
      3      39
      4      39
      7      40
      8      40
      9      40
      a      40
      b      40
      c      40
      d      40
      e      40
      f      40
      10      40
      11      40
      15      42
      16      42
      17      42
      18      42
      19      42
      1a      42
      1d      44
   }

   method 'test4 ()V' {
      0      47
      1      47
      3      47
      4      47
      5      47
      8      47
      c      47
      d      47
      e      47
      f      48
      10      48
      12      48
      13      48
      14      48
      17      48
      1b      48
      1c      48
      1d      48
      1e      48
      1f      49
      20      49
      22      49
      23      49
      24      49
      27      49
      2b      49
      2c      49
      2d      49
      2e      49
      2f      50
      30      50
      32      50
      33      50
      34      50
      37      50
      3b      50
      3c      50
      3d      50
      3e      51
   }
}

Lines mapping:
4 <-> 8
5 <-> 11
8 <-> 14
9 <-> 15
10 <-> 16
12 <-> 17
13 <-> 18
14 <-> 19
15 <-> 20
17 <-> 23
18 <-> 26
19 <-> 29
22 <-> 32
23 <-> 33
25 <-> 35
27 <-> 37
30 <-> 40
31 <-> 41
33 <-> 43
35 <-> 45
40 <-> 48
41 <-> 49
43 <-> 50
44 <-> 51
45 <-> 52
