package pkg;

import java.util.Deque;

public class TestExceptionElse {
   public void test(Deque<Number> numbers) {
      System.out.println("Test");// 7

      while(!numbers.isEmpty()) {// 9
         Number number = (Number)numbers.removeFirst();// 10
         if (number instanceof Integer) {// 11
            System.out.println(1);// 12
         } else if (numbers.size() == 4 && number instanceof Long) {// 13
            System.out.println(2);// 14
         } else if (!(number instanceof Double)) {// 15
            if (numbers.size() != 3 || !(number instanceof Float)) {// 17
               throw new RuntimeException("Not a valid number");// 20
            }

            System.out.println("here");// 18
         } else {
            System.out.println(3);// 16
         }
      }
   }// 23
}

class 'pkg/TestExceptionElse' {
   method 'test (Ljava/util/Deque;)V' {
      0      6
      1      6
      2      6
      3      6
      4      6
      5      6
      8      8
      9      8
      a      8
      b      8
      c      8
      d      8
      e      8
      11      9
      12      9
      13      9
      14      9
      15      9
      16      9
      17      9
      18      9
      19      9
      1a      9
      1b      10
      1c      10
      1d      10
      1e      10
      1f      10
      22      11
      23      11
      24      11
      25      11
      26      11
      27      11
      28      11
      2c      12
      2d      12
      2e      12
      2f      12
      30      12
      31      12
      32      12
      33      12
      36      12
      37      12
      38      12
      39      12
      3a      12
      3d      13
      3e      13
      3f      13
      40      13
      41      13
      42      13
      43      13
      47      14
      48      14
      49      14
      4a      14
      4b      14
      4e      21
      4f      21
      50      21
      51      21
      52      21
      53      21
      54      21
      58      15
      59      15
      5a      15
      5b      15
      5c      15
      5d      15
      5e      15
      5f      15
      62      15
      63      15
      64      15
      65      15
      66      15
      69      19
      6a      19
      6b      19
      6c      19
      6d      19
      6e      19
      6f      19
      70      19
      78      16
      79      16
      7d      16
      81      24
   }
}

Lines mapping:
7 <-> 7
9 <-> 9
10 <-> 10
11 <-> 11
12 <-> 12
13 <-> 13
14 <-> 14
15 <-> 15
16 <-> 22
17 <-> 16
18 <-> 20
20 <-> 17
23 <-> 25
Not mapped:
22
