package pkg;

import java.util.List;
import java.util.Random;

public class TestIfLoop {
   public int testCompoundCondition(int i, int j) {
      while(i > 0 && j < 3) {// 8
         if (j < 0) {// 9
            if (i > 3 && --j == -2) {// 10 12 13
               j = 1;// 14
            }
         }

         if (i > 10) {// 19
            return i - 1;// 20 21
         }
      }

      return 3;// 25
   }

   public Object testCollection(List<Object> list) {
      while(!list.isEmpty()) {// 29
         if (list.size() <= 3) {// 30
            return list.remove(0);// 33
         }

         list.remove(3);// 31
      }

      return null;// 37
   }

   public void testCompound2(int a, int b, Random random) {
      a = random.nextInt(8) - random.nextInt(8) + a;// 41

      for(int var5 = random.nextInt(8) - random.nextInt(8) + b; a >= 0 && a <= 20 && var5 >= 0 && var5 <= 20; var5 -= random.nextInt(4) - random.nextInt(4)) {// 42 44 46
         a -= random.nextInt(4) - random.nextInt(4);// 45
      }
   }// 48

   public int testElseIf(int i) {
      while(i > 0) {// 51
         if (i == 10) {// 52
            ++i;// 53
         } else if (i == 11) {// 54
            i += 2;// 55
         } else if (i == 12) {// 56
            --i;// 57
         } else if (i == 13) {// 58
            i /= 2;// 59
         } else {
            if (i != 14) {// 60
               throw new RuntimeException();// 63
            }

            i -= 4;// 61
         }
      }

      return 2;// 67
   }
}

class 'pkg/TestIfLoop' {
   method 'testCompoundCondition (II)I' {
      0      7
      1      7
      4      7
      5      7
      6      7
      9      8
      a      8
      d      9
      e      9
      f      9
      10      9
      11      9
      12      9
      15      9
      16      9
      17      9
      18      9
      1b      10
      1c      10
      1d      14
      1e      14
      1f      14
      20      14
      23      15
      24      15
      25      15
      27      15
      28      19
      29      19
   }

   method 'testCollection (Ljava/util/List;)Ljava/lang/Object;' {
      0      23
      1      23
      2      23
      3      23
      4      23
      5      23
      6      23
      9      24
      a      24
      b      24
      c      24
      d      24
      e      24
      f      24
      10      24
      13      28
      14      28
      15      28
      16      28
      17      28
      18      28
      19      28
      1e      25
      1f      25
      20      25
      21      25
      22      25
      23      25
      24      25
      25      25
      26      31
      27      31
   }

   method 'testCompound2 (IILjava/util/Random;)V' {
      0      35
      1      35
      2      35
      3      35
      4      35
      5      35
      6      35
      7      35
      8      35
      9      35
      a      35
      b      35
      c      35
      d      35
      e      35
      f      35
      10      37
      11      37
      12      37
      13      37
      14      37
      15      37
      16      37
      17      37
      18      37
      19      37
      1a      37
      1b      37
      1c      37
      1d      37
      1e      37
      1f      37
      20      37
      21      37
      24      37
      25      37
      26      37
      27      37
      2a      37
      2b      37
      2e      37
      2f      37
      30      37
      31      37
      35      38
      36      38
      37      38
      38      38
      39      38
      3a      38
      3b      38
      3c      38
      3d      38
      3e      38
      3f      38
      41      38
      43      37
      44      37
      45      37
      46      37
      47      37
      48      37
      49      37
      4a      37
      4b      37
      4c      37
      4d      37
      4f      37
      53      40
   }

   method 'testElseIf (I)I' {
      0      43
      1      43
      4      44
      5      44
      6      44
      7      44
      a      45
      b      45
      c      45
      10      46
      11      46
      12      46
      13      46
      16      47
      17      47
      18      47
      1c      48
      1d      48
      1e      48
      1f      48
      22      49
      23      49
      24      49
      28      50
      29      50
      2a      50
      2b      50
      2f      51
      31      51
      35      53
      36      53
      37      53
      38      53
      3b      57
      3c      57
      3d      57
      48      54
      49      61
      4a      61
   }
}

Lines mapping:
8 <-> 8
9 <-> 9
10 <-> 10
12 <-> 10
13 <-> 10
14 <-> 11
19 <-> 15
20 <-> 16
21 <-> 16
25 <-> 20
29 <-> 24
30 <-> 25
31 <-> 29
33 <-> 26
37 <-> 32
41 <-> 36
42 <-> 38
44 <-> 38
45 <-> 39
46 <-> 38
48 <-> 41
51 <-> 44
52 <-> 45
53 <-> 46
54 <-> 47
55 <-> 48
56 <-> 49
57 <-> 50
58 <-> 51
59 <-> 52
60 <-> 54
61 <-> 58
63 <-> 55
67 <-> 62
