package pkg;

public class TestConstType {
   private char lineBreak = '\n';
   private char zero = 0;

   public void setLineBreak(char os) {
      switch(os) {// 8
         case 'u':
            this.lineBreak = '\r';// 10
            break;// 11
         case 'w':
            this.lineBreak = '\n';// 14
      }
   }// 17

   public void init() {
      this.setLineBreak('w');// 20
   }// 21

   public String convertIndentation(String text) {
      if (text.charAt(0) == '\t') {// 24
         text = text.replace('\t', ' ');// 25
      }

      return text;// 27
   }

   public void printalot() {
      System.out.println('a');// 31
      System.out.println('\t');// 32
      System.out.println(0);// 34
      System.out.println(65);// 35
      System.out.println(120);// 36
      System.out.println(32760);// 37
      System.out.println(32761);// 38
      System.out.println(35000);// 39
      System.out.println(50000);// 40
      System.out.println(128000);// 41
      System.out.println(60793);// 42
      System.out.println(60737);// 43
      System.out.println(60777);// 44
      System.out.println(60785);// 45
      System.out.println(60835);// 46
      System.out.println(60843);// 47
      System.out.println(60851);// 48
      System.out.println(60859);// 49
      System.out.println(1048576);// 50
      System.out.println(49152);// 51
      System.out.println(44100);// 52
      System.out.println(44101);// 53
      System.out.println(44102);// 54
      System.out.println(44103);// 55
      System.out.println(60000);// 56
      System.out.println(64000);// 57
      System.out.println(65000);// 58
      System.out.println(45000);// 59
   }// 60

   public char guessType(int val) {
      if (0 <= val && val <= 127) {// 63
         return 'X';// 64
      } else if (-128 <= val && val <= 127) {// 66
         return 'B';// 67
      } else if (128 <= val && val <= 32767) {// 69
         return 'Y';// 70
      } else if (-32768 <= val && val <= 32767) {// 72
         return 'S';// 73
      } else {
         return (char)(32768 <= val && val <= 65535 ? 'C' : 'I');// 75 76 79
      }
   }

   public int getTypeMaxValue(char type) {
      int maxValue;
      switch(type) {// 85
         case 'B':
            maxValue = 127;// 90
            break;// 91
         case 'C':
            maxValue = 65535;// 99
            break;// 100
         case 'S':
            maxValue = 32767;// 96
            break;// 97
         case 'X':
            maxValue = 128;// 87
            break;// 88
         case 'Y':
            maxValue = 32768;// 93
            break;// 94
         default:
            maxValue = 2147483647;// 102
      }

      return maxValue;// 104
   }
}

class 'pkg/TestConstType' {
   method 'setLineBreak (C)V' {
      0      7
      1      7
      1c      9
      1d      9
      1e      9
      1f      9
      20      9
      21      9
      22      10
      25      12
      26      12
      27      12
      28      12
      2b      14
   }

   method 'init ()V' {
      0      17
      1      17
      2      17
      3      17
      4      17
      5      17
      6      18
   }

   method 'convertIndentation (Ljava/lang/String;)Ljava/lang/String;' {
      0      21
      1      21
      2      21
      3      21
      4      21
      5      21
      6      21
      7      21
      a      22
      b      22
      c      22
      d      22
      e      22
      f      22
      10      22
      11      22
      12      22
      13      25
      14      25
   }

   method 'printalot ()V' {
      0      29
      1      29
      2      29
      3      29
      4      29
      5      29
      6      29
      7      29
      8      30
      9      30
      a      30
      b      30
      c      30
      d      30
      e      30
      f      30
      10      31
      11      31
      12      31
      13      31
      14      31
      15      31
      16      31
      17      32
      18      32
      19      32
      1a      32
      1b      32
      1c      32
      1d      32
      1e      32
      1f      33
      20      33
      21      33
      22      33
      23      33
      24      33
      25      33
      26      33
      27      34
      28      34
      29      34
      2a      34
      2b      34
      2c      34
      2d      34
      2e      34
      2f      34
      30      35
      31      35
      32      35
      33      35
      34      35
      35      35
      36      35
      37      35
      38      35
      39      36
      3a      36
      3b      36
      3c      36
      3d      36
      3e      36
      3f      36
      40      36
      41      37
      42      37
      43      37
      44      37
      45      37
      46      37
      47      37
      48      37
      49      38
      4a      38
      4b      38
      4c      38
      4d      38
      4e      38
      4f      38
      50      38
      51      39
      52      39
      53      39
      54      39
      55      39
      56      39
      57      39
      58      39
      59      40
      5a      40
      5b      40
      5c      40
      5d      40
      5e      40
      5f      40
      60      40
      61      41
      62      41
      63      41
      64      41
      65      41
      66      41
      67      41
      68      41
      69      42
      6a      42
      6b      42
      6c      42
      6d      42
      6e      42
      6f      42
      70      42
      71      43
      72      43
      73      43
      74      43
      75      43
      76      43
      77      43
      78      43
      79      44
      7a      44
      7b      44
      7c      44
      7d      44
      7e      44
      7f      44
      80      44
      81      45
      82      45
      83      45
      84      45
      85      45
      86      45
      87      45
      88      45
      89      46
      8a      46
      8b      46
      8c      46
      8d      46
      8e      46
      8f      46
      90      46
      91      47
      92      47
      93      47
      94      47
      95      47
      96      47
      97      47
      98      47
      99      48
      9a      48
      9b      48
      9c      48
      9d      48
      9e      48
      9f      48
      a0      48
      a1      49
      a2      49
      a3      49
      a4      49
      a5      49
      a6      49
      a7      49
      a8      49
      a9      50
      aa      50
      ab      50
      ac      50
      ad      50
      ae      50
      af      50
      b0      50
      b1      51
      b2      51
      b3      51
      b4      51
      b5      51
      b6      51
      b7      51
      b8      51
      b9      52
      ba      52
      bb      52
      bc      52
      bd      52
      be      52
      bf      52
      c0      52
      c1      53
      c2      53
      c3      53
      c4      53
      c5      53
      c6      53
      c7      53
      c8      53
      c9      54
      ca      54
      cb      54
      cc      54
      cd      54
      ce      54
      cf      54
      d0      54
      d1      55
      d2      55
      d3      55
      d4      55
      d5      55
      d6      55
      d7      55
      d8      55
      d9      56
      da      56
      db      56
      dc      56
      dd      56
      de      56
      df      56
      e0      56
      e1      57
   }

   method 'guessType (I)C' {
      0      60
      1      60
      2      60
      5      60
      6      60
      7      60
      8      60
      b      61
      c      61
      d      61
      e      62
      f      62
      10      62
      11      62
      14      62
      15      62
      16      62
      17      62
      1a      63
      1b      63
      1c      63
      1d      64
      1e      64
      1f      64
      20      64
      21      64
      24      64
      25      64
      26      64
      27      64
      28      64
      2b      65
      2c      65
      2d      65
      2e      66
      2f      66
      30      66
      31      66
      32      66
      35      66
      36      66
      37      66
      38      66
      39      66
      3c      67
      3d      67
      3e      67
      3f      69
      40      69
      41      69
      42      69
      45      69
      46      69
      47      69
      48      69
      4b      69
      4c      69
      4e      69
      4f      69
   }

   method 'getTypeMaxValue (C)I' {
      0      75
      1      75
      34      86
      35      86
      36      86
      37      86
      38      87
      3b      77
      3c      77
      3d      77
      3e      78
      41      89
      42      89
      43      89
      44      90
      47      83
      48      83
      49      83
      4a      83
      4b      84
      4e      80
      4f      80
      50      80
      51      81
      54      92
      55      92
      56      92
      57      95
      58      95
   }
}

Lines mapping:
8 <-> 8
10 <-> 10
11 <-> 11
14 <-> 13
17 <-> 15
20 <-> 18
21 <-> 19
24 <-> 22
25 <-> 23
27 <-> 26
31 <-> 30
32 <-> 31
34 <-> 32
35 <-> 33
36 <-> 34
37 <-> 35
38 <-> 36
39 <-> 37
40 <-> 38
41 <-> 39
42 <-> 40
43 <-> 41
44 <-> 42
45 <-> 43
46 <-> 44
47 <-> 45
48 <-> 46
49 <-> 47
50 <-> 48
51 <-> 49
52 <-> 50
53 <-> 51
54 <-> 52
55 <-> 53
56 <-> 54
57 <-> 55
58 <-> 56
59 <-> 57
60 <-> 58
63 <-> 61
64 <-> 62
66 <-> 63
67 <-> 64
69 <-> 65
70 <-> 66
72 <-> 67
73 <-> 68
75 <-> 70
76 <-> 70
79 <-> 70
85 <-> 76
87 <-> 87
88 <-> 88
90 <-> 78
91 <-> 79
93 <-> 90
94 <-> 91
96 <-> 84
97 <-> 85
99 <-> 81
100 <-> 82
102 <-> 93
104 <-> 96
