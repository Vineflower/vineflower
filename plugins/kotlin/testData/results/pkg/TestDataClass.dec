package pkg

public data class TestDataClass(dataClassVal: Regex, variableWithVeryLongName: Int, requestLineWrapsIfTheParamListIsTooLong: List<String>, nullability: String?) {
   public final val dataClassVal: Regex
   public final val variableWithVeryLongName: Int
   public final val requestLineWrapsIfTheParamListIsTooLong: List<String>
   public final val nullability: String?

   init {
      this.dataClassVal = dataClassVal;// 4
      this.variableWithVeryLongName = variableWithVeryLongName;// 5
      this.requestLineWrapsIfTheParamListIsTooLong = requestLineWrapsIfTheParamListIsTooLong;// 6
      this.nullability = nullability;// 7
   }// 3

   public operator fun component1(): Regex {
      return this.dataClassVal;
   }

   public operator fun component2(): Int {
      return this.variableWithVeryLongName;
   }

   public operator fun component3(): List<String> {
      return this.requestLineWrapsIfTheParamListIsTooLong;
   }

   public operator fun component4(): String? {
      return this.nullability;
   }

   public fun copy(
      dataClassVal: Regex = this.dataClassVal,
      variableWithVeryLongName: Int = this.variableWithVeryLongName,
      requestLineWrapsIfTheParamListIsTooLong: List<String> = this.requestLineWrapsIfTheParamListIsTooLong,
      nullability: String? = this.nullability
   ): TestDataClass {
      return new TestDataClass(dataClassVal, variableWithVeryLongName, requestLineWrapsIfTheParamListIsTooLong, nullability);
   }

   @JvmStatic
   @JvmSynthetic
   fun `copy$default`(var0: TestDataClass, var1: Regex, var2: Int, var3: java.util.List, var4: java.lang.String, var5: Int, var6: Any): TestDataClass {
      if ((var5 and 1) != 0) {
         var1 = var0.dataClassVal;
      }

      if ((var5 and 2) != 0) {
         var2 = var0.variableWithVeryLongName;
      }

      if ((var5 and 4) != 0) {
         var3 = var0.requestLineWrapsIfTheParamListIsTooLong;
      }

      if ((var5 and 8) != 0) {
         var4 = var0.nullability;
      }

      return var0.copy(var1, var2, var3, var4);
   }

   public open fun toString(): String {
      return "TestDataClass(dataClassVal=${this.dataClassVal}, variableWithVeryLongName=${this.variableWithVeryLongName}, requestLineWrapsIfTheParamListIsTooLong=${this.requestLineWrapsIfTheParamListIsTooLong}, nullability=${this.nullability})";
   }

   public open fun hashCode(): Int {
      return (
               (this.dataClassVal.hashCode() * 31 + Integer.hashCode(this.variableWithVeryLongName)) * 31
                  + this.requestLineWrapsIfTheParamListIsTooLong.hashCode()
            )
            * 31
         + (if (this.nullability == null) 0 else this.nullability.hashCode());
   }

   public open operator fun equals(other: Any?): Boolean {
      if (this === other) {
         return true;
      } else if (other !is TestDataClass) {
         return false;
      } else {
         val var2: TestDataClass = other as TestDataClass;
         if (!(this.dataClassVal == (other as TestDataClass).dataClassVal)) {
            return false;
         } else if (this.variableWithVeryLongName != var2.variableWithVeryLongName) {
            return false;
         } else if (!(this.requestLineWrapsIfTheParamListIsTooLong == var2.requestLineWrapsIfTheParamListIsTooLong)) {
            return false;
         } else {
            return this.nullability == var2.nullability;
         }
      }
   }
}

class 'pkg/TestDataClass' {
   method '<init> (Lkotlin/text/Regex;ILjava/util/List;Ljava/lang/String;)V' {
      10      9
      11      9
      12      9
      13      9
      14      9
      15      10
      16      10
      17      10
      18      10
      19      10
      1a      11
      1b      11
      1c      11
      1d      11
      1e      11
      1f      12
      20      12
      21      12
      22      12
      23      12
      24      12
      25      13
   }

   method 'component1 ()Lkotlin/text/Regex;' {
      0      16
      1      16
      2      16
      3      16
      4      16
   }

   method 'component2 ()I' {
      0      20
      1      20
      2      20
      3      20
      4      20
   }

   method 'component3 ()Ljava/util/List;' {
      0      24
      1      24
      2      24
      3      24
      4      24
   }

   method 'component4 ()Ljava/lang/String;' {
      0      28
      1      28
      2      28
      3      28
      4      28
   }

   method 'copy (Lkotlin/text/Regex;ILjava/util/List;Ljava/lang/String;)Lpkg/TestDataClass;' {
      7      32
      8      32
      9      32
      a      32
      10      37
      11      37
      12      37
      13      33
      14      33
      15      33
      16      33
      18      37
      1f      34
      20      34
      21      34
      22      34
      2c      35
      2d      35
      2e      35
      2f      35
   }

   method 'copy$default (Lpkg/TestDataClass;Lkotlin/text/Regex;ILjava/util/List;Ljava/lang/String;ILjava/lang/Object;)Lpkg/TestDataClass;' {
      0      43
      1      43
      2      43
      3      43
      4      43
      5      43
      6      43
      7      44
      8      44
      9      44
      a      44
      b      44
      c      47
      d      47
      e      47
      f      47
      10      47
      11      47
      12      47
      13      48
      14      48
      15      48
      16      48
      17      48
      18      51
      19      51
      1a      51
      1b      51
      1c      51
      1d      51
      1e      51
      1f      52
      20      52
      21      52
      22      52
      23      52
      24      55
      25      55
      26      55
      27      55
      28      55
      29      55
      2a      55
      2b      55
      2c      56
      2d      56
      2e      56
      2f      56
      30      56
      31      56
      32      59
      33      59
      34      59
      35      59
      36      59
      37      59
      38      59
      39      59
      3a      59
      3b      59
   }

   method 'toString ()Ljava/lang/String;' {
      0      63
      1      63
      2      63
      3      63
      4      63
      5      63
      6      63
      7      63
      8      63
      9      63
      a      63
      b      63
      c      63
      d      63
      e      63
      f      63
      10      63
      11      63
      12      63
      13      63
      14      63
      15      63
   }

   method 'hashCode ()I' {
      0      68
      1      68
      2      68
      3      68
      4      68
      5      68
      6      68
      8      68
      9      68
      a      68
      b      68
      c      68
      d      68
      e      68
      f      68
      10      68
      11      68
      12      68
      13      68
      15      68
      16      68
      17      68
      18      68
      19      69
      1a      69
      1b      69
      1c      69
      1d      69
      1e      69
      1f      69
      20      68
      22      68
      23      71
      24      71
      25      67
      26      72
      27      72
      28      72
      29      72
      2a      72
      2b      72
      2c      72
      2d      72
      31      72
      32      72
      33      72
      34      72
      35      72
      36      72
      37      72
      38      67
      3b      67
   }

   method 'equals (Ljava/lang/Object;)Z' {
      0      76
      1      76
      2      76
      3      76
      4      76
      5      77
      6      77
      7      78
      b      78
      c      78
      d      78
      e      79
      f      79
      10      81
      11      81
      12      81
      13      81
      14      81
      15      82
      16      82
      17      82
      18      82
      19      82
      1a      82
      1b      82
      1c      82
      20      82
      21      82
      22      82
      23      83
      24      83
      25      84
      26      84
      27      84
      28      84
      29      84
      2a      84
      2b      84
      2c      84
      2d      84
      2e      84
      2f      84
      30      85
      31      85
      32      86
      33      86
      34      86
      35      86
      36      86
      37      86
      38      86
      39      86
      3d      86
      3e      86
      3f      86
      40      87
      41      87
      42      89
      43      89
      44      89
      45      89
      46      89
      47      89
      48      89
      49      89
      4d      89
      4e      89
      4f      89
   }
}

Lines mapping:
3 <-> 14
4 <-> 10
5 <-> 11
6 <-> 12
7 <-> 13
