package pkg

import java.io.IOException
import kotlin.jvm.internal.Intrinsics

class TestTryCatchExpressions {
   fun test0(s: String) {
      var var2: String;
      try {
         var2 = StringsKt.repeat(s as CharSequence, 5);// 9
      } catch (RuntimeException var4) {// 10
         var var10000: String = var4.getMessage();// 11
         if (var10000 == null) {
            var10000 = "ERROR";
         }

         var2 = var10000;
      }

      System.out.print(var2);// 7
   }// 14

   fun test1(a: String, b: String) {
      var x: String = a;// 17
      var var6: TestTryCatchExpressions = this;// 19

      var var4: String;
      var var10000: TestTryCatchExpressions;
      try {
         var10000 = var6;
         var4 = StringsKt.repeat(x as CharSequence, 5);// 20
      } catch (RuntimeException var9) {// 21
         var10000 = this;
         x = b;// 22
         var var10001: String = var9.getMessage();// 23
         if (var10001 == null) {
            var10001 = "ERROR";
         }

         var4 = var10001;
      }

      var var7: String = var4;// 24
      var6 = var10000;

      var var13: String;
      try {
         var10000 = var6;
         var13 = var7;
         var4 = StringsKt.repeat(x as CharSequence, 5);// 25
      } catch (RuntimeException var8) {// 26
         var10000 = var10000;
         var13 = var4;
         var var10002: String = var8.getMessage();// 27
         if (var10002 == null) {
            var10002 = "ERROR";
         }

         var4 = var10002;
      }

      var10000.test0(var13 + var4);// 18
   }// 30

   fun test2(a: String, b: String) {
      var var15: Object = a;// 33
      var var7: TestTryCatchExpressions = this;

      var var4: String;
      var var10000: TestTryCatchExpressions;
      try {
         var10000 = var7;
         if (a.length() != b.length()) {// 35
            return;// 36
         }

         var15 = b;// 38
         this.test0(b);// 39
         var4 = b;// 40
      } catch (IOException var13) {// 41
         var10000 = this;
         var15 = a;// 42
         this.test1(a, a);// 43
         var4 = a;// 44
      } catch (RuntimeException var14) {// 46
         var10000 = this;// 45
         var15 = if (Intrinsics.areEqual(var15, a)) b else a;// 47 49
         var4 = var15;// 51
      }

      var var8: String = var4;// 52
      var7 = var10000;

      var var10001: String;
      try {
         var4 = StringsKt.repeat(var15 as CharSequence, 5);
         var15 = var4;
         var10000 = var7;
         var10001 = var8;
         var4 = var4;// 53
      } catch (RuntimeException var12) {// 54
         var10000 = var10000;
         var10001 = var4;
         System.out.println(var15);// 55
         var var10003: String = var12.getMessage();
         if (var10003 == null) {
            var10003 = "";
         }

         var4 = var15 + "!!" + var10003;// 56
      }

      var10000.test1(var10001, var4);// 34
   }// 58
}

class 'pkg/TestTryCatchExpressions' {
   method 'test0 (Ljava/lang/String;)V' {
      7      9
      8      9
      9      9
      a      9
      b      9
      c      9
      d      9
      e      9
      f      9
      13      10
      14      11
      15      11
      16      11
      17      11
      19      12
      1d      13
      1f      16
      20      19
      22      19
      23      19
      24      19
      25      19
      26      19
      27      19
      28      19
      29      20
   }

   method 'test1 (Ljava/lang/String;Ljava/lang/String;)V' {
      c      23
      d      23
      e      24
      f      24
      10      24
      12      29
      13      29
      14      30
      15      30
      16      30
      17      30
      18      30
      19      30
      1a      30
      1b      30
      1c      30
      1d      30
      21      31
      23      32
      24      32
      25      33
      26      33
      27      34
      28      34
      29      34
      2a      34
      2b      34
      2d      35
      31      36
      33      39
      34      39
      35      42
      36      42
      37      42
      38      42
      39      43
      3a      43
      3c      47
      3d      47
      3e      48
      3f      48
      40      49
      41      49
      42      49
      43      49
      44      49
      45      49
      46      49
      47      49
      48      49
      49      49
      4d      50
      4f      51
      50      51
      51      52
      52      52
      53      53
      54      53
      55      53
      56      53
      57      53
      59      54
      5d      55
      5f      58
      60      58
      61      61
      62      61
      63      61
      64      61
      65      61
      66      61
      67      61
      68      61
      69      61
      6a      61
      6b      62
   }

   method 'test2 (Ljava/lang/String;Ljava/lang/String;)V' {
      e      65
      f      65
      10      66
      11      66
      12      66
      14      71
      15      71
      16      72
      17      72
      18      72
      19      72
      1a      72
      1b      72
      1c      72
      1d      72
      1e      72
      21      73
      22      76
      23      76
      24      77
      25      77
      26      77
      27      77
      28      77
      29      78
      2a      78
      2b      78
      2f      79
      31      80
      32      80
      33      81
      34      81
      35      82
      36      82
      37      82
      38      82
      39      82
      3a      82
      3b      82
      3c      82
      3d      82
      3e      83
      3f      83
      40      83
      41      83
      42      83
      43      83
      49      85
      4a      85
      4b      86
      4c      86
      4d      86
      4e      86
      4f      86
      50      86
      53      86
      57      86
      58      84
      59      87
      5a      87
      5b      87
      5c      87
      5d      87
      5e      87
      5f      90
      60      90
      61      90
      62      90
      63      91
      64      91
      66      97
      67      97
      68      98
      69      98
      6a      95
      6b      95
      6c      95
      6d      95
      6e      95
      6f      95
      70      95
      71      95
      72      95
      73      95
      74      96
      75      96
      7f      96
      80      96
      81      96
      87      97
      88      97
      89      98
      8a      98
      8b      99
      8c      99
      8d      99
      8e      99
      92      100
      94      101
      95      101
      96      102
      97      102
      98      103
      99      103
      9a      103
      9b      103
      9d      103
      9e      103
      9f      103
      a0      109
      a1      104
      a2      104
      a3      104
      a4      104
      a5      104
      a7      105
      ab      106
      ad      109
      ae      109
      af      109
      b0      109
      b1      109
      b2      109
      b3      109
      b4      112
      b5      112
      b6      112
      b7      112
      b8      112
      b9      113
   }
}

Lines mapping:
7 <-> 20
9 <-> 10
10 <-> 11
11 <-> 12
14 <-> 21
17 <-> 24
18 <-> 62
19 <-> 25
20 <-> 31
21 <-> 32
22 <-> 34
23 <-> 35
24 <-> 43
25 <-> 50
26 <-> 51
27 <-> 54
30 <-> 63
33 <-> 66
34 <-> 113
35 <-> 73
36 <-> 74
38 <-> 77
39 <-> 78
40 <-> 79
41 <-> 80
42 <-> 82
43 <-> 83
44 <-> 84
45 <-> 86
46 <-> 85
47 <-> 87
49 <-> 87
51 <-> 88
52 <-> 91
53 <-> 100
54 <-> 101
55 <-> 104
56 <-> 110
58 <-> 114
Not mapped:
8
60
