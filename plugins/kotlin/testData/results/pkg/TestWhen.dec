package pkg

class TestWhen {
   fun testStatement(obj: Any) {
      if (obj == 1) {// 5 6
         System.out.println("1");
      } else if (obj == "2") {// 7
         System.out.println("2");
      } else if (obj is Double) {// 8
         System.out.println("Double");
      } else if (obj !is Long) {// 9
         System.out.println("Not Long");
      } else {
         System.out.println("else");// 10
      }
   }// 12

   fun testExpression(obj: Any): Int  {
      return if (obj == 1) 1 else (if (obj is Double) 2 else (if (obj == "4") 4 else (if (obj !is Long) 3 else 5)));// 15 16 17 18 19 20
   }

   fun testStatement2(a: Any, b: Any) {
      if (a == 15) {// 26
         System.out.println("a == 15");
      } else if (a == "!!") {// 27
         System.out.println("a == !!");
      } else if (a is Integer) {// 28
         System.out.println("a is Int");
      } else if (a is String) {// 29
         System.out.println("a is String");
      } else if (b is Double) {// 30
         System.out.println("b is Double");
      } else if (a is Unit) {// 31
         System.out.println("a is Unit");
      } else {
         System.out.println("else");// 32
      }
   }// 34

   fun booleanNightmares(a: Boolean, b: Boolean, c: Boolean, d: Boolean, e: Boolean, f: Boolean, g: Boolean) {
      if (a == (b != c)) {// 37 38
         System.out.println("-_-");
      } else if (a == (b && !e)) {// 39
         System.out.println("xxx");
      } else if (a == (!a || d)) {// 40
         System.out.println("ohno");
      } else if (!a) {// 41
         System.out.println("NIGHTMARE");
      } else if (a == (g || e && f != c)) {// 42
         System.out.println("hello");
      } else {
         System.out.println("else");// 43
      }
   }// 45
}

class 'pkg/TestWhen' {
   method 'testStatement (Ljava/lang/Object;)V' {
      6      4
      8      4
      9      4
      a      4
      b      4
      c      4
      10      4
      13      5
      14      5
      15      5
      16      5
      17      5
      19      5
      1a      5
      1b      5
      1f      6
      20      6
      21      6
      25      6
      28      7
      29      7
      2a      7
      2b      7
      2c      7
      2e      7
      2f      7
      30      7
      34      8
      35      8
      36      8
      37      8
      38      8
      3b      9
      3c      9
      3d      9
      3e      9
      3f      9
      41      9
      42      9
      43      9
      47      10
      4b      10
      4e      11
      4f      11
      50      11
      51      11
      52      11
      54      11
      55      11
      56      11
      5a      13
      5b      13
      5c      13
      5d      13
      5e      13
      60      13
      63      15
   }

   method 'testExpression (Ljava/lang/Object;)I' {
      6      18
      8      18
      9      18
      a      18
      b      18
      c      18
      10      18
      13      18
      17      18
      18      18
      19      18
      1a      18
      1b      18
      1e      18
      22      18
      23      18
      24      18
      28      18
      2b      18
      2f      18
      33      18
      36      18
      3a      18
      3b      18
   }

   method 'testStatement2 (Ljava/lang/Object;Ljava/lang/Object;)V' {
      d      22
      e      22
      f      22
      10      22
      11      22
      12      22
      16      22
      19      23
      1a      23
      1b      23
      1c      23
      1d      23
      1f      23
      20      23
      21      23
      25      24
      26      24
      27      24
      2b      24
      2e      25
      2f      25
      30      25
      31      25
      32      25
      34      25
      35      25
      36      25
      3a      26
      3b      26
      3c      26
      3d      26
      3e      26
      41      27
      42      27
      43      27
      44      27
      45      27
      47      27
      48      27
      49      27
      4d      28
      4e      28
      4f      28
      50      28
      51      28
      54      29
      55      29
      56      29
      57      29
      58      29
      5a      29
      5b      29
      5c      29
      60      30
      61      30
      62      30
      63      30
      64      30
      67      31
      68      31
      69      31
      6a      31
      6b      31
      6d      31
      6e      31
      6f      31
      73      32
      74      32
      75      32
      76      32
      77      32
      7a      33
      7b      33
      7c      33
      7d      33
      7e      33
      80      33
      81      33
      82      33
      86      35
      87      35
      88      35
      89      35
      8a      35
      8c      35
      8f      37
   }

   method 'booleanNightmares (ZZZZZZZ)V' {
      0      40
      3      40
      4      40
      5      40
      6      40
      7      40
      f      40
      12      41
      13      41
      14      41
      15      41
      16      41
      18      41
      19      41
      1a      41
      1e      42
      1f      42
      20      42
      21      42
      24      42
      25      42
      26      42
      2e      42
      31      43
      32      43
      33      43
      34      43
      35      43
      37      43
      38      43
      39      43
      3d      44
      3e      44
      3f      44
      40      44
      43      44
      44      44
      45      44
      4d      44
      50      45
      51      45
      52      45
      53      45
      54      45
      56      45
      57      45
      58      45
      5c      46
      5d      46
      5e      46
      61      47
      62      47
      63      47
      64      47
      65      47
      67      47
      68      47
      69      47
      6d      48
      6e      48
      6f      48
      70      48
      71      48
      74      48
      75      48
      76      48
      79      48
      7a      48
      7b      48
      7c      48
      84      48
      87      49
      88      49
      89      49
      8a      49
      8b      49
      8d      49
      8e      49
      8f      49
      93      51
      94      51
      95      51
      96      51
      97      51
      99      51
      9c      53
   }
}

Lines mapping:
5 <-> 5
6 <-> 5
7 <-> 7
8 <-> 9
9 <-> 11
10 <-> 14
12 <-> 16
15 <-> 19
16 <-> 19
17 <-> 19
18 <-> 19
19 <-> 19
20 <-> 19
26 <-> 23
27 <-> 25
28 <-> 27
29 <-> 29
30 <-> 31
31 <-> 33
32 <-> 36
34 <-> 38
37 <-> 41
38 <-> 41
39 <-> 43
40 <-> 45
41 <-> 47
42 <-> 49
43 <-> 52
45 <-> 54
Not mapped:
25
