package pkg

import kotlin.jvm.internal.Intrinsics

class TestWhen {
   fun testStatement(obj: Object) {
      if (Intrinsics.areEqual(obj, 1)) {// 5 6
         System.out.println("1");
      } else if (Intrinsics.areEqual(obj, "2")) {// 7
         System.out.println("2");
      } else if (obj is Double) {// 8
         System.out.println("Double");
      } else if (!(obj is Long)) {// 9
         System.out.println("Not Long");
      } else {
         System.out.println("else");// 10
      }
   }// 12

   fun testExpression(obj: Object): Int  {
      return if (Intrinsics.areEqual(obj, 1)) 1 else (if (obj is Double) 2 else (if (Intrinsics.areEqual(obj, "4")) 4 else (if (!(obj is Long)) 3 else 5)));// 15 16 17 18 19 20
   }
}

class 'pkg/TestWhen' {
   method 'testStatement (Ljava/lang/Object;)V' {
      6      6
      8      6
      9      6
      a      6
      b      6
      c      6
      d      6
      e      6
      f      6
      10      6
      13      7
      14      7
      15      7
      16      7
      17      7
      19      7
      1a      7
      1b      7
      1f      8
      20      8
      21      8
      22      8
      23      8
      24      8
      25      8
      28      9
      29      9
      2a      9
      2b      9
      2c      9
      2e      9
      2f      9
      30      9
      34      10
      35      10
      36      10
      37      10
      38      10
      3b      11
      3c      11
      3d      11
      3e      11
      3f      11
      41      11
      42      11
      43      11
      47      12
      48      12
      49      12
      4a      12
      4b      12
      4e      13
      4f      13
      50      13
      51      13
      52      13
      54      13
      55      13
      56      13
      5a      15
      5b      15
      5c      15
      5d      15
      5e      15
      60      15
      63      17
   }

   method 'testExpression (Ljava/lang/Object;)I' {
      6      20
      8      20
      9      20
      a      20
      b      20
      c      20
      d      20
      e      20
      f      20
      10      20
      13      20
      17      20
      18      20
      19      20
      1a      20
      1b      20
      1e      20
      22      20
      23      20
      24      20
      25      20
      26      20
      27      20
      28      20
      2b      20
      2f      20
      30      20
      31      20
      32      20
      33      20
      36      20
      3a      20
      3b      20
   }
}

Lines mapping:
5 <-> 7
6 <-> 7
7 <-> 9
8 <-> 11
9 <-> 13
10 <-> 16
12 <-> 18
15 <-> 21
16 <-> 21
17 <-> 21
18 <-> 21
19 <-> 21
20 <-> 21
