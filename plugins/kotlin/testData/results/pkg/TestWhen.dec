package pkg

public class TestWhen {
   public fun testStatement(obj: Any) {
      if (obj == 1) {// 5 6
         System.out.println("1");
      } else if (obj == "2") {// 7
         System.out.println("2");
      } else if (obj is java.lang.Double) {// 8
         System.out.println("Double");
      } else if (obj !is java.lang.Long) {// 9
         System.out.println("Not Long");
      } else {
         System.out.println("else");// 10
      }
   }// 12

   public fun testExpression(obj: Any): Int {
      return if (obj == 1) 1 else (if (obj is java.lang.Double) 2 else (if (obj == "4") 4 else (if (obj !is java.lang.Long) 3 else 5)));// 15 16 17 18 19 20
   }

   public fun testStatement2(a: Any, b: Any) {
      if (a == 15) {// 26
         System.out.println("a == 15");
      } else if (a == "!!") {// 27
         System.out.println("a == !!");
      } else if (a is Int) {// 28
         System.out.println("a is Int");
      } else if (a is java.lang.String) {// 29
         System.out.println("a is String");
      } else if (b is java.lang.Double) {// 30
         System.out.println("b is Double");
      } else if (a is Unit) {// 31
         System.out.println("a is Unit");
      } else {
         System.out.println("else");// 32
      }
   }// 34

   public fun testCompilesToTableSwitch(a: Int) {
      when (a) {// 37
         1 -> System.out.println("The loneliest number");// 38
         2, 3 -> System.out.println("Small prime");// 39
         else -> System.out.println("Number");// 40
      }
   }// 42

   public fun testCompilesToLookupSwitch(a: Int) {
      when (a) {// 45
         1 -> System.out.println("Go for gold");// 46
         9 -> System.out.println("The cat's meow");// 47
         42 -> System.out.println("The answer");// 48
         else -> System.out.println("Number");// 49
      }
   }// 51

   public fun booleanNightmares(a: Boolean, b: Boolean, c: Boolean, d: Boolean, e: Boolean, f: Boolean, g: Boolean) {
      if (a == (b != c)) {// 54 55
         System.out.println("-_-");
      } else if (a == (b && !e)) {// 56
         System.out.println("xxx");
      } else if (a == (!a || d)) {// 57
         System.out.println("ohno");
      } else if (!a) {// 58
         System.out.println("NIGHTMARE");
      } else if (a == (g || e && f != c)) {// 59
         System.out.println("hello");
      } else {
         System.out.println("else");// 60
      }
   }// 62
}

class 'pkg/TestWhen' {
   method 'testStatement (Ljava/lang/Object;)V' {
      6      4
      8      4
      9      4
      a      4
      b      4
      c      4
      10      4
      11      4
      12      4
      13      5
      14      5
      15      5
      16      5
      17      5
      19      5
      1a      5
      1b      5
      1f      6
      20      6
      21      6
      25      6
      26      6
      27      6
      28      7
      29      7
      2a      7
      2b      7
      2c      7
      2e      7
      2f      7
      30      7
      34      8
      35      8
      36      8
      37      8
      38      8
      39      8
      3a      8
      3b      9
      3c      9
      3d      9
      3e      9
      3f      9
      41      9
      42      9
      43      9
      47      10
      4b      10
      4c      10
      4d      10
      4e      11
      4f      11
      50      11
      51      11
      52      11
      54      11
      55      11
      56      11
      5a      13
      5b      13
      5c      13
      5d      13
      5e      13
      60      13
      61      13
      62      13
      63      15
   }

   method 'testExpression (Ljava/lang/Object;)I' {
      6      18
      8      18
      9      18
      a      18
      b      18
      c      18
      10      18
      11      18
      12      18
      13      18
      17      18
      18      18
      19      18
      1a      18
      1b      18
      1c      18
      1d      18
      1e      18
      22      18
      23      18
      24      18
      28      18
      29      18
      2a      18
      2b      18
      2f      18
      33      18
      34      18
      35      18
      36      18
      3a      18
      3b      18
   }

   method 'testStatement2 (Ljava/lang/Object;Ljava/lang/Object;)V' {
      d      22
      e      22
      f      22
      10      22
      11      22
      12      22
      16      22
      17      22
      18      22
      19      23
      1a      23
      1b      23
      1c      23
      1d      23
      1f      23
      20      23
      21      23
      25      24
      26      24
      27      24
      2b      24
      2c      24
      2d      24
      2e      25
      2f      25
      30      25
      31      25
      32      25
      34      25
      35      25
      36      25
      3a      26
      3b      26
      3c      26
      3d      26
      3e      26
      3f      26
      40      26
      41      27
      42      27
      43      27
      44      27
      45      27
      47      27
      48      27
      49      27
      4d      28
      4e      28
      4f      28
      50      28
      51      28
      52      28
      53      28
      54      29
      55      29
      56      29
      57      29
      58      29
      5a      29
      5b      29
      5c      29
      60      30
      61      30
      62      30
      63      30
      64      30
      65      30
      66      30
      67      31
      68      31
      69      31
      6a      31
      6b      31
      6d      31
      6e      31
      6f      31
      73      32
      74      32
      75      32
      76      32
      77      32
      78      32
      79      32
      7a      33
      7b      33
      7c      33
      7d      33
      7e      33
      80      33
      81      33
      82      33
      86      35
      87      35
      88      35
      89      35
      8a      35
      8c      35
      8d      35
      8e      35
      8f      37
   }

   method 'testCompilesToTableSwitch (I)V' {
      0      40
      1      40
      2      40
      3      40
      4      40
      5      40
      6      40
      7      40
      8      40
      9      40
      a      40
      b      40
      c      40
      d      40
      e      40
      f      40
      10      40
      11      40
      12      40
      13      40
      14      40
      15      40
      16      40
      17      40
      18      40
      19      40
      1a      40
      1b      40
      1c      41
      1d      41
      1e      41
      1f      41
      20      41
      22      41
      23      41
      24      41
      25      42
      28      42
      29      42
      2a      42
      2b      42
      2c      42
      2e      42
      2f      42
      30      42
      31      43
      34      43
      35      43
      36      43
      37      43
      38      43
      3a      43
      3b      43
      3c      43
      3d      45
   }

   method 'testCompilesToLookupSwitch (I)V' {
      0      48
      1      48
      2      48
      3      48
      4      48
      5      48
      6      48
      7      48
      8      48
      9      48
      a      48
      b      48
      c      48
      d      48
      e      48
      f      48
      10      48
      11      48
      12      48
      13      48
      14      48
      15      48
      16      48
      17      48
      18      48
      19      48
      1a      48
      1b      48
      1c      48
      1d      48
      1e      48
      1f      48
      20      48
      21      48
      22      48
      23      48
      24      49
      25      49
      26      49
      27      49
      28      49
      2a      49
      2b      49
      2c      49
      2d      50
      30      50
      31      50
      32      50
      33      50
      34      50
      36      50
      37      50
      38      50
      39      51
      3c      51
      3d      51
      3e      51
      3f      51
      40      51
      42      51
      43      51
      44      51
      45      52
      48      52
      49      52
      4a      52
      4b      52
      4c      52
      4e      52
      4f      52
      50      52
      51      54
   }

   method 'booleanNightmares (ZZZZZZZ)V' {
      0      57
      3      57
      4      57
      5      57
      6      57
      7      57
      8      57
      9      57
      f      57
      10      57
      11      57
      12      58
      13      58
      14      58
      15      58
      16      58
      18      58
      19      58
      1a      58
      1e      59
      1f      59
      20      59
      21      59
      22      59
      23      59
      24      59
      25      59
      26      59
      27      59
      28      59
      2e      59
      2f      59
      30      59
      31      60
      32      60
      33      60
      34      60
      35      60
      37      60
      38      60
      39      60
      3d      61
      3e      61
      3f      61
      40      61
      41      61
      42      61
      43      61
      44      61
      45      61
      46      61
      47      61
      4d      61
      4e      61
      4f      61
      50      62
      51      62
      52      62
      53      62
      54      62
      56      62
      57      62
      58      62
      5c      63
      5d      63
      5e      63
      5f      63
      60      63
      61      64
      62      64
      63      64
      64      64
      65      64
      67      64
      68      64
      69      64
      6d      65
      6e      65
      6f      65
      70      65
      71      65
      72      65
      73      65
      74      65
      75      65
      76      65
      77      65
      78      65
      79      65
      7a      65
      7b      65
      7c      65
      7d      65
      7e      65
      84      65
      85      65
      86      65
      87      66
      88      66
      89      66
      8a      66
      8b      66
      8d      66
      8e      66
      8f      66
      93      68
      94      68
      95      68
      96      68
      97      68
      99      68
      9a      68
      9b      68
      9c      70
   }
}

Lines mapping:
5 <-> 5
6 <-> 5
7 <-> 7
8 <-> 9
9 <-> 11
10 <-> 14
12 <-> 16
15 <-> 19
16 <-> 19
17 <-> 19
18 <-> 19
19 <-> 19
20 <-> 19
26 <-> 23
27 <-> 25
28 <-> 27
29 <-> 29
30 <-> 31
31 <-> 33
32 <-> 36
34 <-> 38
37 <-> 41
38 <-> 42
39 <-> 43
40 <-> 44
42 <-> 46
45 <-> 49
46 <-> 50
47 <-> 51
48 <-> 52
49 <-> 53
51 <-> 55
54 <-> 58
55 <-> 58
56 <-> 60
57 <-> 62
58 <-> 64
59 <-> 66
60 <-> 69
62 <-> 71
Not mapped:
25
