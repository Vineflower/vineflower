package pkg

import kotlin.jvm.internal.DefaultConstructorMarker;

open abstract class TestSealedHierarchy {
   fun TestSealedHierarchy() {
   }// 3

   // $QF: synthetic method
   fun TestSealedHierarchy($constructor_marker: DefaultConstructorMarker) {
      this();
   }

   static class TestClass extends TestSealedHierarchy {
      private final int x;

      fun TestClass(x: Int) {
         super(null);
         this.x = x;
      }

      fun getX(): Int  {
         return this.x;// 5
      }
   }

   static class TestObject extends TestSealedHierarchy {
      public static final TestSealedHierarchy.TestObject INSTANCE = new TestSealedHierarchy.TestObject();

      fun TestObject() {
         super(null);// 4
      }
   }
}

class 'pkg/TestSealedHierarchy' {
   method '<init> ()V' {
      4      6
   }

   method '<init> (Lkotlin/jvm/internal/DefaultConstructorMarker;)V' {
      1      10
      2      10
      3      10
      4      11
   }
}

class 'pkg/TestSealedHierarchy$TestClass' {
   method '<init> (I)V' {
      1      17
      2      17
      3      17
      4      17
      5      18
      6      18
      7      18
      8      18
      9      18
      a      19
   }

   method 'getX ()I' {
      0      22
      1      22
      2      22
      3      22
      4      22
   }
}

class 'pkg/TestSealedHierarchy$TestObject' {
   method '<init> ()V' {
      1      30
      2      30
      3      30
      4      30
      5      31
   }
}

Lines mapping:
3 <-> 7
4 <-> 31
5 <-> 23
