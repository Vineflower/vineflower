package pkg

class TestParams {
   fun printMessageUnit(message: String) {
      System.out.println(message);// 5
   }// 6

   fun printMessageVoid(message: String) {
      System.out.println(message);// 9
   }// 10

   fun multiply(x: Int, y: Int): Int  {
      return x * y;// 12
   }

   fun multiplyBraces(x: Int, y: Int): Int  {
      return x * y;// 15
   }

   fun printMessageWithPrefix(message: String, prefix: String) {
      System.out.println("[" + prefix + "] " + message);// 19
   }// 20

   @JvmStatic
   @JvmSynthetic
   fun `printMessageWithPrefix$default`(var0: TestParams, var1: String, var2: String, var3: Int, var4: Object) {
      if ((var3 and 2) != 0) {// 18
         var2 = "Info";
      }

      var0.printMessageWithPrefix(var1, var2);
   }

   fun callPrintMessage() {
      printMessageWithPrefix$default(this, "Test", null, 2, null);// 23
      this.printMessageWithPrefix("Test", "Debug");// 24
   }// 25
}

class 'pkg/TestParams' {
   method 'printMessageUnit (Ljava/lang/String;)V' {
      6      4
      7      4
      8      4
      9      4
      a      4
      b      4
      c      4
      d      5
   }

   method 'printMessageVoid (Ljava/lang/String;)V' {
      6      8
      7      8
      8      8
      9      8
      a      8
      b      8
      c      8
      d      9
   }

   method 'multiply (II)I' {
      0      12
      1      12
      2      12
      3      12
   }

   method 'multiplyBraces (II)I' {
      0      16
      1      16
      2      16
      3      16
   }

   method 'printMessageWithPrefix (Ljava/lang/String;Ljava/lang/String;)V' {
      c      20
      d      20
      e      20
      f      20
      10      20
      11      20
      12      20
      13      20
      14      20
      15      20
      17      20
      18      20
      19      20
      1a      21
   }

   method 'printMessageWithPrefix$default (Lpkg/TestParams;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V' {
      0      26
      1      26
      2      26
      3      26
      6      27
      7      27
      8      27
      9      30
      a      30
      b      30
      c      30
      d      30
      e      30
      f      31
   }

   method 'callPrintMessage ()V' {
      0      34
      1      34
      2      34
      3      34
      4      34
      5      34
      6      34
      7      34
      8      34
      9      35
      a      35
      b      35
      c      35
      d      35
      e      35
      f      35
      10      35
      11      36
   }
}

Lines mapping:
5 <-> 5
6 <-> 6
9 <-> 9
10 <-> 10
12 <-> 13
15 <-> 17
18 <-> 27
19 <-> 21
20 <-> 22
23 <-> 35
24 <-> 36
25 <-> 37
