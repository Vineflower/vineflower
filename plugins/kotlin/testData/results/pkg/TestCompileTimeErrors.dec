package pkg

import kotlin.NotImplementedError;
import org.jetbrains.annotations.Nullable;

class TestCompileTimeErrors {
   fun <I, O extends I & TestCompileTimeErrors.Test> test(i: I): O  {
      throw new NotImplementedError(null, 1, null);// 10
   }

   fun test2(i: Integer?): TestCompileTimeErrors.Test?  {
      return if (i == null) null else new TestCompileTimeErrors.Test(i) {
         @Nullable
         private final Integer testValue;

         {
            this.testValue = $i;
         }// 14

         @Nullable
         public Integer getTestValue() {
            return this.testValue;// 16
         }

         /** @deprecated */
         // $QF: synthetic method
         public static void getTestValue$annotations() {
         }
      };
   }

   open interface Test {
      fun getTestValue(): Int ;
   }
}

class 'pkg/TestCompileTimeErrors' {
   method 'test (Ljava/lang/Object;)Ljava/lang/Object;' {
      4      7
      5      7
      6      7
      a      7
   }

   method 'test2 (Ljava/lang/Integer;)Lpkg/TestCompileTimeErrors$Test;' {
      0      11
      1      11
      4      11
      c      11
      10      11
      13      11
   }
}

class 'pkg/TestCompileTimeErrors$test2$1' {
   method '<init> (Ljava/lang/Integer;)V' {
      4      16
      5      16
      6      16
      7      16
      8      16
      9      17
   }

   method 'getTestValue ()Ljava/lang/Integer;' {
      0      21
      1      21
      2      21
      3      21
      4      21
   }

   method 'getTestValue$annotations ()V' {
      0      27
   }
}

Lines mapping:
10 <-> 8
14 <-> 18
16 <-> 22
