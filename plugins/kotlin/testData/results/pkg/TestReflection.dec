package pkg

import kotlin.jvm.functions.Function1
import kotlin.reflect.KFunction

class TestReflection {
   fun testClassReference() {
      System.out.println(TestReflection::class);// 5
      System.out.println(TestReflection::class.java);// 6
   }// 7

   fun testPrimitiveWrapper() {
      System.out.println(Int::class);// 10
      System.out.println(Integer::class.javaObjectType);// 11
   }// 12

   fun testPrimitiveType() {
      System.out.println(Int::class.javaPrimitiveType);// 15
   }// 16

   fun testInferredPrimitive() {
      System.out.println(Int::class.javaPrimitiveType);// 19
   }// 20

   fun testFunctionReference() {
      var f: KFunction = <unknownclass>.INSTANCE as KFunction;// 23
      System.out.println(<unknownclass>.INSTANCE as KFunction);// 24
      (f as Function1).invoke(new TestReflection());// 25
   }// 26
}

class 'pkg/TestReflection' {
   method 'testClassReference ()V' {
      6      7
      7      7
      8      7
      a      7
      b      7
      c      7
      d      8
      e      8
      10      8
      11      8
      12      8
      13      8
      14      8
      15      8
      16      8
      17      9
   }

   method 'testPrimitiveWrapper ()V' {
      7      12
      8      12
      9      12
      b      12
      c      12
      d      12
      e      13
      f      13
      11      13
      12      13
      13      13
      14      13
      15      13
      16      13
      17      13
      18      14
   }

   method 'testPrimitiveType ()V' {
      4      17
      5      17
      6      17
      8      17
      9      17
      a      17
      b      18
   }

   method 'testInferredPrimitive ()V' {
      4      21
      5      21
      6      21
      8      21
      9      21
      a      21
      b      22
   }

   method 'testFunctionReference ()V' {
      0      25
      1      25
      2      25
      3      25
      4      25
      5      25
      6      25
      7      26
      8      26
      9      26
      a      26
      b      26
      c      26
      d      26
      e      27
      f      27
      10      27
      11      27
      19      27
      1a      27
      1b      27
      1c      27
      1d      27
      1f      28
   }
}

Lines mapping:
5 <-> 8
6 <-> 9
7 <-> 10
10 <-> 13
11 <-> 14
12 <-> 15
15 <-> 18
16 <-> 19
19 <-> 22
20 <-> 23
23 <-> 26
24 <-> 27
25 <-> 28
26 <-> 29
