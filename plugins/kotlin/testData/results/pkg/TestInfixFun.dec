package pkg

import kotlin.jvm.internal.Intrinsics;
import kotlin.text.StringsKt;
import org.jetbrains.annotations.NotNull;

class TestInfixFun {
   fun test() {
      System.out.println(test$times(2, "Bye "));// 7
   }// 8

   @NotNull
   fun mult(int $this$mult, @NotNull String str): String  {
      Intrinsics.checkNotNullParameter(str, "str");
      return StringsKt.repeat((CharSequence)str, $this$mult);// 10
   }

   fun testOuter() {
      System.out.println(this.mult(2, "Bye "));// 14
   }// 15

   fun testDuplicate() {
      System.out.println(testDuplicate$mult(2, "Bye "));// 20
   }// 21

   fun test$times(int $this$test_u24times, String str): String  {
      return StringsKt.repeat((CharSequence)str, $this$test_u24times);// 5
   }

   fun testDuplicate$mult(int $this$testDuplicate_u24mult, String str): String  {
      return StringsKt.repeat((CharSequence)str, $this$testDuplicate_u24mult + 1);// 18
   }
}

class 'pkg/TestInfixFun' {
   method 'test ()V' {
      0      8
      1      8
      2      8
      3      8
      4      8
      5      8
      6      8
      7      8
      8      8
      a      8
      b      8
      c      8
      d      9
   }

   method 'mult (ILjava/lang/String;)Ljava/lang/String;' {
      0      13
      1      13
      2      13
      3      13
      4      13
      5      13
      6      14
      7      14
      8      14
      9      14
      a      14
      b      14
      c      14
      d      14
      e      14
   }

   method 'testOuter ()V' {
      0      18
      1      18
      2      18
      3      18
      4      18
      5      18
      6      18
      7      18
      8      18
      9      18
      b      18
      c      18
      d      18
      e      19
   }

   method 'testDuplicate ()V' {
      0      22
      1      22
      2      22
      3      22
      4      22
      5      22
      6      22
      7      22
      8      22
      a      22
      b      22
      c      22
      d      23
   }

   method 'test$times (ILjava/lang/String;)Ljava/lang/String;' {
      0      26
      1      26
      2      26
      3      26
      4      26
      5      26
      6      26
      7      26
      8      26
   }

   method 'testDuplicate$mult (ILjava/lang/String;)Ljava/lang/String;' {
      0      30
      1      30
      2      30
      3      30
      4      30
      5      30
      6      30
      7      30
      8      30
      9      30
      a      30
   }
}

Lines mapping:
5 <-> 27
7 <-> 9
8 <-> 10
10 <-> 15
14 <-> 19
15 <-> 20
18 <-> 31
20 <-> 23
21 <-> 24
