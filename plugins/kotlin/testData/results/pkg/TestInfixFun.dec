package pkg

import kotlin.jvm.internal.Intrinsics;
import kotlin.text.StringsKt;

class TestInfixFun {
   fun test() {
      System.out.println(test$times(2, "Bye "));// 7
   }// 8

   fun mult($this$mult: Int, str: String): String  {
      Intrinsics.checkNotNullParameter(str, "str");
      return StringsKt.repeat((CharSequence)str, $this$mult);// 10
   }

   fun testOuter() {
      System.out.println(this.mult(2, "Bye "));// 14
   }// 15

   fun testDuplicate() {
      System.out.println(testDuplicate$mult(2, "Bye "));// 20
   }// 21

   fun test$times($this$test_u24times: Int, str: String): String  {
      return StringsKt.repeat((CharSequence)str, $this$test_u24times);// 5
   }

   fun testDuplicate$mult($this$testDuplicate_u24mult: Int, str: String): String  {
      return StringsKt.repeat((CharSequence)str, $this$testDuplicate_u24mult + 1);// 18
   }
}

class 'pkg/TestInfixFun' {
   method 'test ()V' {
      0      7
      1      7
      2      7
      3      7
      4      7
      5      7
      6      7
      7      7
      8      7
      a      7
      b      7
      c      7
      d      8
   }

   method 'mult (ILjava/lang/String;)Ljava/lang/String;' {
      0      11
      1      11
      2      11
      3      11
      4      11
      5      11
      6      12
      7      12
      8      12
      9      12
      a      12
      b      12
      c      12
      d      12
      e      12
   }

   method 'testOuter ()V' {
      0      16
      1      16
      2      16
      3      16
      4      16
      5      16
      6      16
      7      16
      8      16
      9      16
      b      16
      c      16
      d      16
      e      17
   }

   method 'testDuplicate ()V' {
      0      20
      1      20
      2      20
      3      20
      4      20
      5      20
      6      20
      7      20
      8      20
      a      20
      b      20
      c      20
      d      21
   }

   method 'test$times (ILjava/lang/String;)Ljava/lang/String;' {
      0      24
      1      24
      2      24
      3      24
      4      24
      5      24
      6      24
      7      24
      8      24
   }

   method 'testDuplicate$mult (ILjava/lang/String;)Ljava/lang/String;' {
      0      28
      1      28
      2      28
      3      28
      4      28
      5      28
      6      28
      7      28
      8      28
      9      28
      a      28
   }
}

Lines mapping:
5 <-> 25
7 <-> 8
8 <-> 9
10 <-> 13
14 <-> 17
15 <-> 18
18 <-> 29
20 <-> 21
21 <-> 22
