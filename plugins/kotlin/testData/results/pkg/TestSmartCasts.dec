package pkg

import java.util.List
import kotlin.jvm.internal.DefaultConstructorMarker
import kotlin.jvm.internal.Intrinsics

class TestSmartCasts {
   fun testWhen(o: Object?): String  {
      if (o is String) {// 19 20
         return o as String;// 21
      } else {
         if (o is TestSmartCasts.A.B) {// 24
            System.out.println("B: " + o);
         } else {
            if (o !is TestSmartCasts.A.C) {// 25
               if (o is Pair) {// 26
                  return "<" + this.testWhen((o as Pair).getFirst()) + ", " + this.testWhen((o as Pair).getSecond()) + ">";
               }

               if (o == null) {// 27
                  return "null";
               }

               return "else: " + o;// 28
            }

            System.out.println("C: " + o);
         }

         if (o == null) {// 31
            throw new NullPointerException("null cannot be cast to non-null type pkg.TestSmartCasts.A");
         } else {
            return (o as TestSmartCasts.A).test();
         }
      }
   }

   fun testIf(a: Object?): String  {
      return if (a !is TestSmartCasts.A.B && a !is TestSmartCasts.A.C) "else: " + a else (a as TestSmartCasts.A).test();// 35 36 39
   }

   fun testIf2(a: Object?): String  {
      if (a is TestSmartCasts.A) {// 43
         if (a is TestSmartCasts.A.B || a is TestSmartCasts.A.C) {// 44
            System.out.println((a as TestSmartCasts.A).test());// 45
         }

         if (a is TestSmartCasts.A.B) {// 48
            if (a is TestSmartCasts.A.C) {// 49
               System.out.println((a as TestSmartCasts.A.B).testB());// 50
               System.out.println((a as TestSmartCasts.A.C).testC());// 51
            }

            if (a is TestSmartCasts.A.C && Intrinsics.areEqual((a as TestSmartCasts.A.C).testC(), "C") || a is TestSmartCasts.A.B) {// 54
               System.out.println((a as TestSmartCasts.A.B).testB());// 55
            }
         }
      }

      return "else: " + a;// 60
   }

   fun testCast(a: Object?) {
      System.out.println(a);// 64
      if (a == null) {// 65
         throw new NullPointerException("null cannot be cast to non-null type kotlin.String");
      } else {
         System.out.println("hello");// 66
         System.out.println(a);// 67
         (a as String).charAt(0);// 68
         System.out.println((a as String).charAt(0));// 69
      }
   }// 70

   fun testSealedIf(a: TestSmartCasts.A): String  {
      if (a is TestSmartCasts.A.B) {// 73
         return (a as TestSmartCasts.A.B).testB();// 74
      } else {
         return if (a is TestSmartCasts.A.C) (a as TestSmartCasts.A.C).testC() else a.test();// 75 76 78
      }
   }

   fun testDoubleType(t: List<String>): String  {
      return if (t is TestSmartCasts.X) (t as TestSmartCasts.X).woo(t as Iterable<?>) else t.get(0) as String;// 83 84 87
   }

   open abstract class A {
      fun A() {
      }// 7

      fun test(): String  {
         return "";// 15
      }

      @JvmSynthetic
      open fun A(`$constructor_marker`: DefaultConstructorMarker) {
         this();
      }

      class B extends TestSmartCasts.A {
         fun B() {
            super(null);// 8
         }

         fun testB(): String  {
            return "B";// 9
         }
      }

      class C extends TestSmartCasts.A {
         fun C() {
            super(null);// 11
         }

         fun testC(): String  {
            return "C";// 12
         }
      }
   }

   open interface X {
      fun woo(var1: Iterable<?>): String ;

      class DefaultImpls {
         @JvmStatic
         fun woo(var0: TestSmartCasts.X, receiver: Iterable<?>): String  {
            return "A";// 5
         }
      }
   }
}

class 'pkg/TestSmartCasts' {
   method 'testWhen (Ljava/lang/Object;)Ljava/lang/String;' {
      0      8
      2      8
      3      8
      4      8
      5      8
      6      8
      9      9
      a      9
      b      9
      c      9
      d      9
      e      11
      f      11
      10      11
      11      11
      12      11
      15      12
      16      12
      17      12
      18      12
      19      12
      1a      12
      1b      12
      1c      12
      1d      12
      1f      12
      20      12
      21      12
      29      14
      2c      26
      2d      26
      2e      26
      2f      26
      30      26
      31      26
      32      26
      33      26
      34      26
      36      26
      37      26
      38      26
      3c      15
      3d      15
      3e      15
      3f      15
      40      15
      43      16
      44      16
      45      16
      46      16
      47      16
      48      16
      49      16
      4a      16
      4b      16
      4c      16
      4d      16
      4e      16
      4f      16
      50      16
      51      16
      52      16
      53      16
      54      16
      55      16
      56      16
      57      16
      58      16
      59      16
      5a      16
      5b      16
      5c      16
      5d      16
      5e      16
      5f      19
      60      19
      63      20
      64      20
      65      20
      66      23
      67      23
      68      23
      69      23
      6a      23
      6b      23
      6c      23
      6d      29
      6f      29
      77      30
      78      30
      7c      30
      7d      32
      7e      32
      7f      32
      80      32
      81      32
      82      32
      83      32
   }

   method 'testIf (Ljava/lang/Object;)Ljava/lang/String;' {
      4      38
      b      38
      e      38
      f      38
      10      38
      11      38
      12      38
      13      38
      14      38
      16      38
      17      38
      18      38
      19      38
      1a      38
      1b      38
   }

   method 'testIf2 (Ljava/lang/Object;)Ljava/lang/String;' {
      0      42
      1      42
      2      42
      3      42
      4      42
      7      43
      8      43
      9      43
      a      43
      b      43
      e      43
      f      43
      10      43
      11      43
      12      43
      15      44
      16      44
      17      44
      18      44
      19      44
      1a      44
      1b      44
      1c      44
      1d      44
      1e      44
      20      44
      23      47
      24      47
      25      47
      26      47
      27      47
      2a      48
      2b      48
      2c      48
      2d      48
      2e      48
      31      49
      32      49
      33      49
      34      49
      35      49
      36      49
      37      49
      38      49
      39      49
      3a      49
      3c      49
      3d      49
      3e      49
      3f      50
      40      50
      41      50
      42      50
      43      50
      44      50
      45      50
      46      50
      47      50
      48      50
      4a      50
      4d      53
      4e      53
      4f      53
      50      53
      51      53
      54      53
      55      53
      56      53
      57      53
      58      53
      59      53
      5a      53
      5b      53
      5c      53
      5d      53
      5e      53
      5f      53
      60      53
      63      53
      64      53
      65      53
      66      53
      67      53
      6a      54
      6b      54
      6c      54
      6d      54
      6e      54
      6f      54
      70      54
      71      54
      72      54
      73      54
      75      54
      78      59
      79      59
      7a      59
      7b      59
      7c      59
      7d      59
      7e      59
   }

   method 'testCast (Ljava/lang/Object;)V' {
      0      63
      1      63
      2      63
      3      63
      4      63
      5      63
      6      63
      7      64
      9      64
      11      65
      12      65
      16      65
      1b      67
      1c      67
      1d      67
      1e      67
      1f      67
      21      67
      22      67
      23      67
      24      68
      25      68
      26      68
      27      68
      28      68
      29      68
      2a      68
      2b      69
      2c      69
      2d      69
      2e      69
      2f      69
      30      69
      31      69
      32      69
      34      70
      35      70
      36      70
      37      70
      38      70
      39      70
      3a      70
      3b      70
      3d      70
      3e      70
      3f      70
      40      70
      41      70
      42      70
      43      70
      44      72
   }

   method 'testSealedIf (Lpkg/TestSmartCasts$A;)Ljava/lang/String;' {
      6      75
      7      75
      8      75
      9      75
      a      75
      d      76
      e      76
      f      76
      10      76
      11      76
      12      76
      13      76
      14      76
      15      78
      16      78
      17      78
      18      78
      19      78
      1c      78
      1d      78
      1e      78
      1f      78
      20      78
      21      78
      22      78
      24      78
      25      78
      26      78
      27      78
   }

   method 'testDoubleType (Ljava/util/List;)Ljava/lang/String;' {
      6      83
      7      83
      8      83
      9      83
      a      83
      d      83
      11      83
      12      83
      13      83
      14      83
      15      83
      16      83
      17      83
      18      83
      19      83
      1a      83
      1b      83
      1c      83
      1d      83
      1f      83
      20      83
      21      83
      22      83
      23      83
      24      83
      25      83
      26      83
      27      83
      28      83
   }
}

class 'pkg/TestSmartCasts$A' {
   method '<init> ()V' {
      4      88
   }

   method 'test ()Ljava/lang/String;' {
      0      91
      1      91
      2      91
   }

   method '<init> (Lkotlin/jvm/internal/DefaultConstructorMarker;)V' {
      1      96
      2      96
      3      96
      4      97
   }
}

class 'pkg/TestSmartCasts$A$B' {
   method '<init> ()V' {
      1      101
      2      101
      3      101
      4      101
      5      102
   }

   method 'testB ()Ljava/lang/String;' {
      0      105
      1      105
      2      105
   }
}

class 'pkg/TestSmartCasts$A$C' {
   method '<init> ()V' {
      1      111
      2      111
      3      111
      4      111
      5      112
   }

   method 'testC ()Ljava/lang/String;' {
      0      115
      1      115
      2      115
   }
}

class 'pkg/TestSmartCasts$X$DefaultImpls' {
   method 'woo (Lpkg/TestSmartCasts$X;Ljava/lang/Iterable;)Ljava/lang/String;' {
      6      126
      7      126
      8      126
   }
}

Lines mapping:
5 <-> 127
7 <-> 89
8 <-> 102
9 <-> 106
11 <-> 112
12 <-> 116
15 <-> 92
19 <-> 9
20 <-> 9
21 <-> 10
24 <-> 12
25 <-> 15
26 <-> 16
27 <-> 20
28 <-> 24
31 <-> 30
35 <-> 39
36 <-> 39
39 <-> 39
43 <-> 43
44 <-> 44
45 <-> 45
48 <-> 48
49 <-> 49
50 <-> 50
51 <-> 51
54 <-> 54
55 <-> 55
60 <-> 60
64 <-> 64
65 <-> 65
66 <-> 68
67 <-> 69
68 <-> 70
69 <-> 71
70 <-> 73
73 <-> 76
74 <-> 77
75 <-> 79
76 <-> 79
78 <-> 79
83 <-> 84
84 <-> 84
87 <-> 84
