plugins {
  id 'java'
  id 'org.jetbrains.kotlin.jvm'
}

apply plugin: 'com.gradleup.shadow'
apply plugin: 'java'
apply plugin: 'maven-publish'

group = 'org.vineflower'
version = "0.1.0"
base.archivesName = 'vineflower-kotlin'

sourceSets {
  testDataKotlin.kotlin.srcDirs files("testData/src/kt/")
  testDataOldKotlin.kotlin.srcDirs files("testData/src/ktold/")
}

configurations {
  testDataOldKotlinImplementation.extendsFrom testDataKotlinImplementation
}

dependencies {
  shadow project(":")
  testImplementation testFixtures(project(":"))
  implementation fileTree(dir: 'libs', include: ['*.jar'])

  testDataKotlinImplementation platform('org.jetbrains.kotlin:kotlin-bom')
  testDataKotlinImplementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
  testRuntimeOnly 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
}

task testDataClasses {
  group = 'build'
}
testClasses.dependsOn(testDataClasses)

compileTestDataKotlinKotlin {
  destinationDirectory = file("testData/classes/kt")
}
testDataClasses.dependsOn(testDataKotlinClasses)

compileTestDataOldKotlinKotlin {
  destinationDirectory = file("testData/classes/ktold")
  kotlinOptions {
    compilerOptions {
      freeCompilerArgs = [ // Kotlin 2.0 defaults to invokedynamic implementations. Use class implementations instead.
        "-Xlambdas=class",
        "-Xsam-conversions=class",
        "-Xstring-concat=inline",
      ]
    }
  }
}
testDataClasses.dependsOn(testDataOldKotlinClasses)

jar {
  enabled = false
}

shadowJar {
  archiveClassifier.set('')
}

build.dependsOn(shadowJar)

// TODO: re-enable after we're publishing for this!
//publishing {
//  publications {
//    mavenJava(MavenPublication) {
//      artifactId = "vineflower-kotlin"
//      from components.java
//      artifact(shadowJar)
//    }
//  }
//}